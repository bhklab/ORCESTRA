syntax = "proto3";

import "../empty.proto";
import "gogo.proto";
import "pfs.proto";

package pps;
option go_package = "github.com/pachyderm/pachyderm/src/client/pps";



message Pipeline {
  string name = 1;
}

message JobInfo {
  reserved 4, 5, 28, 34;
  Pipeline pipeline = 3;
  pfs.Commit output_commit = 9;


}

message JobInfos {
  repeated JobInfo job_info = 1;
}

message ListJobRequest {
  Pipeline pipeline = 1;                // nil means all pipelines
  repeated pfs.Commit input_commit = 2; // nil means all inputs
  pfs.Commit output_commit = 3;         // nil means all outputs

  // History indicates return jobs from historical versions of pipelines
  // semantics are:
  // 0: Return jobs from the current version of the pipeline or pipelines.
  // 1: Return the above and jobs from the next most recent version
  // 2: etc.
  //-1: Return jobs from all historical versions.
  int64 history = 0;

  // Full indicates whether the result should include all pipeline details in
  // each JobInfo, or limited information including name and status, but
  // excluding information in the pipeline spec. Leaving this "false" can make
  // the call significantly faster in clusters with a large number of pipelines
  // and jobs.
  // Note that if 'input_commit' is set, this field is coerced to "true"
  bool full = 5;
}

service API {
  rpc ListJob(ListJobRequest) returns (JobInfos) {}
}