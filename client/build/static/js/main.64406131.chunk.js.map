{"version":3,"sources":["context/auth.js","components/Routing/PrivateRoute.js","components/Navigation/Navigation.js","components/Main/Main.js","components/Footer/Footer.js","components/App/App.js","components/Shared/PSetDropdown/PSetDropdown.js","components/PSetSearch/subcomponents/PSetFilter.js","components/Shared/APICalls.js","components/Shared/PSetTable.js","components/Shared/Buttons/SavePSetButton.js","components/Shared/PSetAPIHelper.js","components/PSetSearch/PSetSearch.js","components/Dashboard/Dashboard.js","components/Stats/DownloadChart.js","components/Stats/Stats.js","components/Documentation/DocFunctionality/Overview.js","components/Documentation/DocFunctionality/Search.js","components/Documentation/DocFunctionality/Request.js","components/Documentation/DocFunctionality/UserProfile.js","components/Documentation/DocFunctionality/Statistics.js","components/Documentation/Documentation.js","components/Profile/subcomponents/UserInfo.js","components/Shared/Buttons/DownloadPSetButton.js","components/Profile/subcomponents/UserPSet.js","components/Profile/Profile.js","components/Authentication/AuthForm.js","components/Authentication/Login.js","components/PSet/PSetAccordion.js","components/PSet/TabContents/DatasetTabContent.js","components/PSet/TabContents/RNATabContent.js","components/PSet/TabContents/DNATabContent.js","components/PSet/PSet.js","components/Routing/Router.js","components/serviceWorker.js","index.js"],"names":["AuthContext","createContext","PrivateRoute","fetch","then","res","status","json","authenticated","username","data","context","setAuthToken","userAuth","this","exact","path","props","render","React","cloneElement","component","to","pathname","redirect","state","Component","contextType","Navigation","auth","useContext","useState","isOnline","setIsOnline","useEffect","a","checkStatus","onLoginClick","event","preventDefault","routing","history","push","onLogoutClick","console","log","resetAuthToken","location","logoutMsg","Fragment","src","alt","className","activeClassName","label","onClick","width","isOpen","OrcestraMain","statsData","setStatsData","dataset","rnaTool","dnaTool","formData","setFormData","setUser","pending","inProcess","dashboard","setDashboard","api","pset","form","user","fetchData","length","href","style","alignSelf","value","field","header","body","rowData","column","route","doi","name","Footer","App","PSetDropdown","dataTemplate","option","fontSize","margin","isHidden","selectOne","parameterName","id","optionLabel","selectedParameter","options","parameterOptions","onChange","handleUpdateSelection","filter","itemTemplate","placeholder","disabled","selectedItemTemplate","item","formDataInit","rnaRefOptions","dnaRefOptions","url","response","PSetFilter","SearchReqContext","dataType","setDataType","setDataset","drugSensitivity","genome","setGenome","setRNATool","rnaRef","setRNARef","setDNATool","dnaRef","setDNARef","hideRNAToolRef","setHideRNAToolRef","hideDNAToolRef","setHideDNAToolRef","getParameters","formDataset","initialize","parameters","setParameters","dnaRefs","rnaRefs","Array","isArray","genomeName","map","ref","includes","checked","isRequest","tooltip","e","fData","JSON","parse","stringify","setIsRequest","setRequestView","queryPSet","callback","resData","PSetTable","rows","first","start","end","totalRecords","loading","setState","downloadOnePSet","link","psetID","psetIDs","method","headers","catch","err","API","anchor","document","createElement","setAttribute","display","appendChild","click","removeChild","toolsRefTemplate","output","key","allData","selection","selectedPSets","onSelectionChange","updatePSetSelection","paginator","scrollable","selectionMode","sortable","downloadLink","_id","SavePSetButton","saveSelectedPSets","userPSet","psetId","i","reqData","APICalls","onSaveComplete","bind","getFilterSet","filterset","datatype","toFilterArray","datasetName","datasetVersion","buildAPIStr","filterSet","apiStr","apiFragments","buildAPIStrFragment","replace","isNotReadyToSubmit","request","isSelected","hasName","email","test","isValidEmail","reqParam","messageAfterRequest","msgComponent","show","severity","summary","detail","message","sticky","toString","selectedValues","isDatasetVersion","filterArray","Object","keys","constructor","version","keyName","apiFragment","PSetSearch","setAllData","searchAll","setSearchAll","setSelectedPSets","disableSaveBtn","setDisableSaveBtn","notReadyToSubmit","setNotReadyToSubmit","setName","setEmail","psets","initializeView","APIHelper","update","params","updatePSets","showMessage","messages","initializeState","handleSubmitRequest","trackPromise","ok","Provider","el","target","usePromiseTracker","promiseInProgress","type","color","height","selected","scrollHeight","Dashboard","setData","setLoading","submitRequest","result","onSubmit","dateTimeTemplate","dateTimeStr","Date","toLocaleString","undefined","dateStyle","timeStyle","d","isAdmin","button","Plot","createPlotlyComponent","Plotly","DownloadChart","x","y","orientation","marker","layout","autosize","title","xaxis","text","font","size","yaxis","autorange","titlefont","useResizeHandler","Stats","chartData","disableBtn","isReady","showMessages","download","showDownload","Overview","Search","Request","UserProfile","Statistics","Documentation","setDisplay","UserInfo","showModal","hideModal","DownloadPSetButton","downloadPSets","UserPSet","handleBtnClick","dialogVisible","btnDisabled","btnYesDislabed","handleSelectionChange","onClickYes","onHide","psetData","onDownloadComplete","btnLabel","noPSetData","dialogFooter","heading","footer","visible","modal","Profile","removeFromSavedList","selectedPSet","saved","psetSaved","removePSetByID","cancelPSetRequest","psetInProcess","userEmail","findPSetByID","complete","psetArray","index","splice","AuthForm","password","setPassword","passwordReg1","setPasswordReg1","passwordReg2","setPasswordReg2","userChecked","setUserChecked","userExists","setUserExists","userRegistered","setUserRegistered","btnFindDisabled","setBtnFindDisabled","btnLoginDisabled","setBtnLoginDisabled","btnRegDisabled","setBtnRegDisabled","handleInputChange","onFindClick","exists","registered","onRegisterClick","icon","Login","msg","PSetToolAccordion","toolAccordionTabs","items","commands","command","multiple","RNARefAccordion","rnaRefAccordionTabs","source","DNARefAccordion","exomeRefAccordionTabs","cosmic","exonTarget","GeneralInfoAccordion","dateCreated","createdBy","DatasetTabContent","publication","metadata","citation","RNATabContent","genomeRawData","rawSeqDataRNA","DNATabContent","rawSeqDataDNA","PSet","general","rna","dna","match","id1","id2","renderActiveOnly","Router","profile","Boolean","window","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.64406131.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext();","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport {AuthContext} from '../../context/auth';\n\nclass PrivateRoute extends React.Component {\n    \n    static contextType = AuthContext;\n\n    componentDidMount(){\n        fetch('/user/checkToken')\n            .then(res => {\n                if(res.status === 200){\n                    return(res.json());\n                }else{\n                    return({authenticated: false, username: ''});\n                }\n            })\n            .then(data => {this.context.setAuthToken(data)});\n    }\n    \n    render(){\n        const userAuth = this.context;\n        return(\n            <Route            \n                exact path={this.props.path} \n                render={(props) => userAuth.authenticated ? React.cloneElement(this.props.component, {...props}) : (<Redirect to={{pathname: this.props.redirect, state: {path: this.props.path}}} />)}\n            />\n        );\n    }\n}\n\nexport default PrivateRoute;","import React, {useState, useEffect, useContext} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {Button} from 'primereact/button';\nimport {AuthContext} from '../../context/auth';\nimport './Navigation.css';\nimport { slide as Menu } from 'react-burger-menu';\n\nconst Navigation = (props) => {\n\n    const auth = useContext(AuthContext);\n\n    const [isOnline, setIsOnline] = useState(false);\n\n    useEffect(() => {\n        const checkStatus = async () => {\n            const status = await fetch('/pachyderm/status');\n            const json = await status.json();\n            setIsOnline(json.isOnline);\n        }\n        checkStatus();\n    }, []);\n\n    const onLoginClick = (event) => {\n        event.preventDefault();\n        props.routing.history.push({pathname: '/Authentication', state:{path: props.routing.path}});\n    }\n\n    const onLogoutClick = (event) => {\n        event.preventDefault();\n        console.log(props.routing);\n        fetch('/user/logout/:' + auth.username)\n            .then(res => {\n                auth.resetAuthToken();\n                props.routing.history.push({pathname: '/Authentication', state:{path: props.routing.location.pathname, logoutMsg: 'You have logged out'}});\n            });            \n    }\n\n    return(\n        <React.Fragment>\n            <header>\n                <NavLink exact to='/'><img src={process.env.PUBLIC_URL + \"/images/trumpet-orcestra.png\"} alt='' /></NavLink>\n                <div className='navBarContainer'>\n                    <div className='navBar'>\n                        <div><NavLink exact to='/' activeClassName='active-link'>Home</NavLink></div>\n                        <div><NavLink exact to=\"/PSetSearch\" activeClassName='active-link'>Search and Request</NavLink></div>\n                        <div><NavLink exact to=\"/Dashboard\" activeClassName='active-link'>Request Status</NavLink></div>\n                        <div><NavLink exact to=\"/Documentation\" activeClassName='active-link'>Documentation</NavLink></div>\n                        { auth.authenticated && <div className='menu-item'><NavLink exact to=\"/Profile\" activeClassName='active-link'>Profile</NavLink></div> }\n                        <div>\n                            {\n                                auth.authenticated ? \n                                <Button label='Logout' onClick={onLogoutClick}/> : <Button label='Login/Register' onClick={onLoginClick}/>\n                            }\n                        </div> \n                        <div>\n                            {isOnline ? \n                                <div className='pachydermStatus isOnline'>\n                                    <div className='icon'><i className='pi pi-check'></i></div><div className='text'>Pachyderm is <br />online</div>\n                                </div> \n                                : \n                                <span className='pachydermStatus isOffline'>\n                                    <div className='icon'><i className='pi pi-ban'></i></div><div className='text'>Pachyderm is <br />offline</div>\n                                </span>\n                            }\n                        </div>    \n                    </div>\n                    <div className='burgerNav'>\n                        <Menu width={ 200 } isOpen={true} > \n                            <div className='menu-item'><NavLink exact to='/' activeClassName='active-link'>Home</NavLink></div>\n                            <div className='menu-item'><NavLink exact to=\"/PSetSearch\" activeClassName='active-link'>Search and Request</NavLink></div>\n                            <div><NavLink exact to=\"/Dashboard\" activeClassName='active-link'>Request Status</NavLink></div>\n                            <div><NavLink exact to=\"/Documentation\" activeClassName='active-link'>Documentation</NavLink></div>\n                            { auth.authenticated && <div className='menu-item'><NavLink exact to=\"/Profile\" activeClassName='active-link'>Profile</NavLink></div> }\n                            <div className='menu-item'>\n                                {\n                                    auth.authenticated ? \n                                    <Button label='Logout' onClick={onLogoutClick}/> : <Button label='Login/Register' onClick={onLoginClick}/>\n                                }\n                            </div>\n                            <div>\n                                {isOnline ? \n                                    <div className='pachydermStatus isOnline'>\n                                        <div className='icon'><i className='pi pi-check'></i></div><div className='text'>Pachyderm is <br />online</div>\n                                    </div> \n                                    : \n                                    <span className='pachydermStatus isOffline'>\n                                        <div className='icon'><i className='pi pi-ban'></i></div><div className='text'>Pachyderm is <br />offline</div>\n                                    </span>\n                                }\n                            </div>\n                        </Menu>\n                    </div>   \n                </div>\n                \n                <div className='loggedIn'>{auth.authenticated ? 'Logged in as: ' + auth.username : ''}</div> \n            </header>\n        </React.Fragment>\n    );\n}\n\nexport default Navigation;","import React, {useState, useEffect} from 'react';\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport { Link } from 'react-router-dom';\nimport './Main.css';\n\nconst OrcestraMain = (props) => {\n    \n    const [statsData, setStatsData] = useState([]);\n    const [formData, setFormData] = useState({\n        dataset: [],\n        rnaTool: [],\n        dnaTool: []\n    });\n    const [user, setUser] = useState(0);\n    const [dashboard, setDashboard] = useState({\n        pending: 0,\n        inProcess: 0\n    })\n\n    useEffect(() => {\n        const fetchData = async (api) => {\n            const res = await fetch(api);\n            const json = await res.json();\n            console.log(json);\n            setStatsData(json.pset);\n            setFormData(json.form[0]);\n            setUser(json.user);\n            setDashboard(json.dashboard);\n        }\n        fetchData('/landing/data');\n    }, [])\n\n    const nameColumnTemplate = (rowData, column) => {\n        let route = '/' + rowData.doi;\n        return(\n            <Link to={route} >{rowData.name}</Link>\n        );\n    }\n\n    return (\n        <div className='mainContent'>\n            <div className=\"home\">\n                <h1>ORCESTRA</h1>   \n                <h2>Orchestration platform for reproducing pharmacogenomic analyses</h2>\n                <div className='mainMenuContainer'>\n                    <div className='mainMenuRow'>\n                        <div className='mainMenuColumn'>\n                            <div className='mainMenuItem'>\n                                <h2>Search and Request PSets</h2>\n                                <div className='mainMenuItemContent'>\n                                    <div>Design your own PSet using:</div>\n                                    <div className='mainMenuItemLine'><span className='largeNum'>{formData.dataset.length}</span> <span>Datasets.</span></div>\n                                    <div className='mainMenuItemLine'><span className='largeNum'>{formData.rnaTool.length}</span> <span>RNA pipelines.</span></div>\n                                    <div className='mainMenuItemLine'><span className='largeNum'>{formData.dnaTool.length}</span> <span>DNA sequence alignment tools.</span></div>\n                                    <div className='mainMenuLink'><a className='button' href=\"/PSetSearch\">Search and Request</a></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='mainMenuColumn'>\n                            <div className='mainMenuItem' style={{ alignSelf: 'flex-start'}}>\n                                <h2>View PSet Request Status</h2>\n                                <div className='mainMenuItemContent'>\n                                    <div>ORCESTRA is processing following requests:</div>\n                                    <div className='mainMenuItemLine'><span className='largeNum'>{dashboard.pending}</span> <span>Requests in queue.</span></div>\n                                    <div className='mainMenuItemLine'><span className='largeNum'>{dashboard.inProcess}</span> <span >Requests in process.</span></div>\n                                    <div className='mainMenuLink'><a className='button' href=\"/Dashboard\">View Dashboard</a></div>\n                                </div>\n                            </div>\n                        </div> \n                        <div className='mainMenuColumn'>\n                            <div className='mainMenuItem'>\n                                    <h2>Top 5 Popular PSets</h2>\n                                    <div className='mainMenuItemContent'>\n                                        <DataTable value={statsData} >\n                                            <Column className='textField' field='download' header='Download' />\n                                            <Column className='textField' field='name' header='Name' body={nameColumnTemplate}/>\n                                        </DataTable>\n                                        <div className='mainMenuLink'><a className='button' href=\"/Stats\">View Statistics</a></div>\n                                    </div>\n                            </div> \n                            {/* <div className='mainMenuItem'>\n                                <h2>Create your profile</h2>\n                                <div className='mainMenuItemContent'>\n                                    <div>ORCESTRA has: </div>\n                                    <div className='mainMenuItemLine'><span className='largeNum'>{user}</span> <span>Active users.</span></div>\n                                    <div className='mainMenuLink'><a className='button' href=\"/Authentication\">Login/Register</a></div>\n                                </div>\n                            </div>  */}\n                        </div>    \n                    </div>  \n                </div>  \n            </div>\n        </div>\n    );\n    \n}\n\nexport default OrcestraMain;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Footer.css';\n\nconst Footer = (props) => {\n    return(\n        <div className='appFooter'>\n            <div className='footerContainer'>\n                <div className=\"footerMenu footerLinks\">\n                    <h3>Menu</h3>\n                    <NavLink exact to=\"/PSetSearch\" >Search and Request</NavLink>\n                    <NavLink exact to=\"/Dashboard\" >request Status</NavLink>\n                    <NavLink exact to=\"/Stats\" >Statistics</NavLink>\n                </div>\n                <div className=\"footerSupport footerLinks\">\n                    <h3>Support</h3>\n                    <NavLink exact to=\"/Documentation\" >Documentation</NavLink>\n                    <a href=\"https://github.com/bhklab\">GitHub</a>\n                    <a href=\"https://bhklab.ca/\">BHKLab</a>\n                </div>\n                <div className=\"footerContact\">\n                    <h3>BHKLab</h3>\n                    <div className='contactInfo'>\n                        The MaRS center\n                        <br />\n                        101 College St, Toronto ON\n                        {' '}\n                        <br />\n                        TMDT RM 11-310\n                    </div>\n                </div>\n            </div>\n        </ div>\n    );\n} \n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport './PrimeStyle.css';\n\nimport Navigation from '../Navigation/Navigation';\nimport Main from '../Main/Main';\nimport Footer from '../Footer/Footer';\n\nclass App extends React.Component {\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Navigation routing={this.props} />\n\t\t\t\t<Main />\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport './PSetDropdown.css';\nimport {MultiSelect} from 'primereact/multiselect';\nimport {Dropdown} from 'primereact/dropdown';\n\n// props: id, className, isHidden, selectOne, parameterName, parameterOptions[], selecedParameter[], handleUpdateSelection()\n\nclass PSetDropdown extends React.Component {\n    \n    render(){\n        const dataTemplate =  (option) => {\n            return(\n                <div className=\"\">\n                    <span style={{fontSize:'1em',margin:'1em .5em 0 0'}}>{option.label}</span>\n                </div>\n            );\n        }\n\n        const selectedDataTemplate = (item) => {\n            if (item) {\n                return (\n                    <div className=\"my-multiselected-item-token\">\n                        <span>{item.label}</span>\n                    </div>\n                );\n            }\n            else {\n                return <span>Select...</span>\n            }\n        }\n            \n        if(this.props.isHidden){\n            return(null);\n        }\n        if(this.props.selectOne){\n            return(\n                <div className='filterSet'>\n                    <label>{this.props.parameterName}</label>\n                    <Dropdown \n                        id={this.props.id} \n                        className='paramInput' \n                        optionLabel='label' \n                        value={this.props.selectedParameter}   \n                        options={this.props.parameterOptions} \n                        onChange={this.props.handleUpdateSelection}\n                        filter={true} \n                        itemTemplate={dataTemplate}\n                        placeholder=\"Select one...\"\n                        disabled={this.props.disabled}\n                    />\n                </div>\n            );\n        }\n        return(\n            <div className='filterSet'>\n                <label>{this.props.parameterName}</label>\n                <MultiSelect \n                    id={this.props.id}\n                    className='paramInput' \n                    optionLabel='label' \n                    value={this.props.selectedParameter} \n                    options={this.props.parameterOptions} \n                    onChange={this.props.handleUpdateSelection}\n                    filter={true} \n                    itemTemplate={dataTemplate} \n                    selectedItemTemplate={selectedDataTemplate}\n                    disabled={this.props.disabled}\n                />\n            </div>\n        );\n    }\n    \n}\n\nexport default PSetDropdown;","import React, {useState, useEffect, useContext} from 'react';\nimport {InputSwitch} from 'primereact/inputswitch';\nimport PSetDropdown from '../../Shared/PSetDropdown/PSetDropdown';\nimport {SearchReqContext} from '../PSetSearch';\nimport './PSetFilter.css';\n\nlet formDataInit = {};\nlet formData = {};\nlet rnaRefOptions = [];\nlet dnaRefOptions = [];\n\nasync function fetchData(url) {\n    const response = await fetch(url);\n    const json = await response.json();\n    return(json);\n}\n\nconst PSetFilter = () => {\n    \n    const context = useContext(SearchReqContext);\n\n    const [dataType, setDataType] = useState([]);\n    const [dataset, setDataset] = useState([]);\n    const [drugSensitivity, setDrugSensitivity] = useState([]);\n    const [genome, setGenome] = useState([]);\n    const [rnaTool, setRNATool] = useState([]);\n    const [rnaRef, setRNARef] = useState([]);\n    const [dnaTool, setDNATool] = useState([]);\n    const [dnaRef, setDNARef] = useState([]);\n\n    const [drugSensitivityOptions, setDrugSensitivityOptions] = useState([]);\n    const [hideRNAToolRef, setHideRNAToolRef] = useState(false);\n    const [hideDNAToolRef, setHideDNAToolRef] = useState(false);\n\n    const getParameters = () => {\n        let parameters = {\n            dataType, \n            dataset, \n            drugSensitivity, \n            genome, \n            rnaTool, \n            rnaRef, \n            dnaTool, \n            dnaRef\n        };\n        return parameters;\n    }\n    \n    useEffect(() => {\n        const initialize = async () => {\n            const formDataset = await fetchData('/formData');\n            formDataInit = formDataset[0];\n            formData = formDataset[0];\n            rnaRefOptions = formData.rnaRef;\n            dnaRefOptions = formData.dnaRef;\n        }\n        initialize();\n    }, []);\n    \n    useEffect(() => {\n        if(dataType.length === 1){\n            if(dataType[0].name === 'RNA'){             \n                setHideDNAToolRef(true);\n                setDNATool([]);\n                setDNARef([]);\n            }else{\n                setHideRNAToolRef(true);\n                setRNATool([]);\n                setRNARef([]);\n            }\n        }else{\n            setHideRNAToolRef(false);\n            setHideDNAToolRef(false);\n        }\n        const parameters = getParameters();\n        context.setParameters(parameters);\n    }, [dataType]);\n\n    useEffect(() => {\n        if(genome.length === 0){\n            dnaRefOptions = formData.dnaRef;\n            rnaRefOptions = formData.rnaRef;\n        }else{\n            let dnaRefs = dnaRef;\n            let rnaRefs = rnaRef;\n            \n            if(Array.isArray(genome)){\n                let genomeName = genome.map((genome) => {return(genome.name)});\n                dnaRefs = dnaRef.filter((ref) => {return(genomeName.includes(ref.genome) && ref)});\n                rnaRefs = rnaRef.filter((ref) => {return(genomeName.includes(ref.genome) && ref)});\n                dnaRefOptions = formData.dnaRef.filter((ref) => {return(genomeName.includes(ref.genome) && ref)});\n                rnaRefOptions = formData.rnaRef.filter((ref) => {return(genomeName.includes(ref.genome) && ref)});\n            }else{\n                dnaRefs = dnaRef.filter((ref) => {return(genome.name === ref.genome && ref)});\n                rnaRefs = rnaRef.filter((ref) => {return(genome.name === ref.genome && ref)});\n                dnaRefOptions = formData.dnaRef.filter((ref) => {return(genome.name === ref.genome && ref)});\n                rnaRefOptions = formData.rnaRef.filter((ref) => {return(genome.name === ref.genome && ref)});\n            }\n            \n            setDNARef(dnaRefs);\n            setRNARef(rnaRefs);\n        }  \n        const parameters = getParameters();\n        context.setParameters(parameters);\n    }, [genome])\n\n    useEffect(() => {\n        const parameters = getParameters();\n        context.setParameters(parameters);\n    }, [dataset, rnaTool, rnaRef, dnaTool, dnaRef]);\n\n    const setRequestView = (isRequest) => {\n        let fData = JSON.parse(JSON.stringify(formData));\n        if(isRequest){\n            if(dataset.length){\n                fData.dataset = dataset;\n                setDataset(dataset[0]);\n            }\n            if(genome.length){\n                fData.genome = genome;\n                setGenome(genome[0]);\n            }\n        }else{\n            if(fData.dataset.length < formDataInit.dataset.length){\n                setDataset(fData.dataset);\n            }else if(!Array.isArray(dataset)){\n                let val  = dataset;\n                setDataset([val]);\n            }\n            if(fData.genome.length < formDataInit.genome.length){\n                setGenome(fData.genome);\n            }else if(!Array.isArray(genome)){\n                let val = genome;\n                setGenome([val]);\n            }\n            fData = formDataInit;\n        }\n        formData = fData;\n        context.setParameters(getParameters());\n        context.setIsRequest(isRequest);\n    }\n    \n    return(\n        <React.Fragment>\n            <div className='pSetFilterContainer'>\n                <div className='pSetFilter'>\n                    <h2>PSet Parameters</h2>\n                    <div className='filterSet'>\n                        <label className='bold'>Request PSet: </label> \n                        <InputSwitch checked={context.isRequest} tooltip=\"Turn this on to request a PSet.\" \n                            onChange={(e) => setRequestView(e.value)} />\n                    </div>\n                    <PSetDropdown id='dataType' isHidden={false} parameterName='Data Type:' \n                        parameterOptions={formData.dataType} selectedParameter={context.parameters.dataType} \n                        handleUpdateSelection={(e) => setDataType(e.value)} />\n\n                    <PSetDropdown id='dataset' isHidden={false} parameterName='Dataset:' selectOne={context.isRequest} \n                        parameterOptions={formData.dataset} selectedParameter={context.parameters.dataset} \n                        handleUpdateSelection={(e) => setDataset(e.value)} />\n                    \n                    {/* <PSetDropdown id='drugSensitivity' className={this.props.dropdownClassName} isHidden={false} parameterName='Drug Sensitivity:' selectOne={true} disabled={true} \n                        parameterOptions={this.state.drugSensitivityOptions} selectedParameter={this.props.parameters.drugSensitivity} handleUpdateSelection={this.handleFilterChange} /> */}\n                    \n                    <PSetDropdown id='genome' isHidden={false} parameterName='Genome:' selectOne={context.isRequest} \n                        parameterOptions={formData.genome} selectedParameter={context.parameters.genome} \n                        handleUpdateSelection={(e) => setGenome(e.value)} />\n                    \n                    <PSetDropdown id='rnaTool' isHidden={hideRNAToolRef} parameterName='RNA Tool:' \n                        parameterOptions={formData.rnaTool} selectedParameter={context.parameters.rnaTool} \n                        handleUpdateSelection={(e) => setRNATool(e.value)} />\n\n                    <PSetDropdown id='rnaRef' isHidden={hideRNAToolRef} parameterName='RNA Ref:' \n                        parameterOptions={rnaRefOptions} selectedParameter={context.parameters.rnaRef} \n                        handleUpdateSelection={(e) => setRNARef(e.value)} />\n                    \n                    <PSetDropdown id='dnaTool' isHidden={hideDNAToolRef} parameterName='DNA Tool:' \n                        parameterOptions={formData.dnaTool} selectedParameter={context.parameters.dnaTool} \n                        handleUpdateSelection={(e) => setDNATool(e.value)} />\n                    \n                    <PSetDropdown id='dnaRef' isHidden={hideDNAToolRef} parameterName='DNA Ref:' \n                        parameterOptions={dnaRefOptions} selectedParameter={context.parameters.dnaRef} \n                        handleUpdateSelection={(e) => setDNARef(e.value)} />\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default PSetFilter;","\nexport function queryPSet(api, callback){\n    //console.log(api);\n    fetch(api)  \n        .then(res => res.json())\n        .then(resData => {\n            callback(resData);\n        }   \n    );\n}\n\nexport function saveOrUpdateUserPSets(username, selectedPSets, callback){\n    if(selectedPSets.length){\n        var userPSet = { username: username };\n        var psetId = [];\n        for(let i = 0; i < selectedPSets.length; i++){\n            psetId.push(selectedPSets[i]._id);\n        }\n        userPSet.psetId = psetId;\n\n        fetch('/user/pset/add', {\n            method: 'POST',\n            body: JSON.stringify({reqData: userPSet}),\n            headers: {\n                'Content-type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(resData => callback(1, resData))\n            .catch(err => callback(0, err));\n\n    }\n}\n\nexport function requestPSet(data, callback){\n    console.log(data);\n    fetch('/pset/request', {\n        method: 'POST',\n        body: JSON.stringify({\n            reqData: data\n        }),\n        headers: {\n            'Content-type': 'application/json'\n        }\n    })\n        .then(res => res.json())\n        .then(resData => callback(1, resData))\n        .catch(err => callback(0, err));\n}\n\nexport function downloadPSets(psets, callback){\n    var psetIDs = [];\n    console.log(psets);\n    for(let i = 0; i < psets.length; i++){\n        psetIDs.push(psets[i]._id);\n    }\n    console.log(psetIDs);\n    fetch('/pset/download', {\n        method: 'POST',\n        body: JSON.stringify({\n            psetIDs: psetIDs\n        }),\n        headers: {\n            'Content-type': 'application/json'\n        }\n    })\n        .then(res => res.json())\n        .then(resData => {\n            callback(1, resData);\n        })\n        .catch(err => callback(0, err));\n}\n\nexport function downloadOnePSet(psetID){\n    console.log('downloadOnePSet: ' + psetID);\n    var psetIDs = [psetID];\n    fetch('/pset/download', {\n        method: 'POST',\n        body: JSON.stringify({\n            psetIDs: psetIDs\n        }),\n        headers: {\n            'Content-type': 'application/json'\n        }\n    })\n        .then(res => res.json())\n        .catch(err => console.log(err));\n}","import React, {useState, useEffect, useContext} from 'react';\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport { Link } from 'react-router-dom';\nimport * as API from '../Shared/APICalls';\nimport {AuthContext} from '../../context/auth';\n\nconst PSetTable = (props) => {\n\n    const auth = useContext(AuthContext);\n    \n    const [state, setState] = useState({\n        rows: 10,\n        first: 0,\n        start: 0,\n        end: 10,\n        totalRecords: 0,\n        loading: true\n    })\n\n    useEffect(()=>{\n        setState({...state, loading: false})\n    }, []);\n\n    const downloadOnePSet = (id, link) => (event) => {\n        event.preventDefault();\n        console.log('downloadOnePSet');\n        API.downloadOnePSet(id);\n        const anchor = document.createElement('a');\n        anchor.setAttribute('download', null);\n        anchor.style.display = 'none';\n        anchor.setAttribute('href', link);\n        document.body.appendChild(anchor);\n        anchor.click();\n        document.body.removeChild(anchor);\n    }\n\n    const toolsRefTemplate = (rowData, column) => {\n        let output ='';\n        if(rowData[column.field]){\n            output = rowData[column.field].map(item => <div key={item.name}>{item.name}</div>);\n        }\n        return(\n            <div>{output}</div>\n        );\n    }\n\n    const nameColumnTemplate = (rowData, column) => {\n        let route = '/' + rowData.doi;\n        return(\n            <Link to={route} >{rowData.name}</Link>\n        );\n    }\n\n    const downloadTemplate = (rowData, column) => {\n        let link = 'Not Available';\n        if(rowData.downloadLink){\n            link = <a id={rowData._id} href='#' onClick={downloadOnePSet(rowData._id, rowData.downloadLink)}>Download</a>\n        }\n        return(\n            link\n        )\n    }\n\n    const updatePSetSelectionEvent = event => {\n        props.updatePSetSelection(event.value);\n    }\n\n    return(\n        <DataTable \n            value={props.allData} \n            selection={props.selectedPSets} onSelectionChange={updatePSetSelectionEvent} \n            paginator={true} rows={state.rows} \n            scrollable={true}\n        >\n            {auth.authenticated && <Column selectionMode=\"multiple\" style={{width: '2.5em'}} />}\n            <Column className='textField' field='name' header='Name' style={{width:'10em'}} body={nameColumnTemplate} sortable={true} />\n            <Column className='textField' field='dataset.name' header='Dataset' style={{width:'6.5em'}} sortable={true} />\n            <Column className='textField' field='drugSensitivity.version' header='Drug Sensitivity' style={{width:'10.5em'}} sortable={true} />\n            <Column field='rnaTool' body={toolsRefTemplate} style={{width:'8em'}} header='RNA Tool' sortable={true}  />\n            <Column field='dnaTool' body={toolsRefTemplate} style={{width:'8em'}} header='DNA Tool' sortable={true} />\n            <Column field='rnaRef' body={toolsRefTemplate} style={{width:'15em'}} header='RNA Ref' sortable={true} />\n            <Column field='dnaRef' body={toolsRefTemplate} style={{width:'15em'}} header='DNA Ref' sortable={true} />\n            <Column field='downloadLink' body={downloadTemplate} style={{width:'6.5em'}} header='Download' />\n        </DataTable>\n    );\n\n}\n\nexport default PSetTable;","import React from 'react';\nimport {Button} from 'primereact/button';\nimport {AuthContext} from '../../../context/auth';\nimport * as APICalls from '../APICalls';\n\nclass SavePSetButton extends React.Component{\n    constructor(){\n        super();\n        this.saveSelectedPSets = this.saveSelectedPSets.bind(this);\n    }\n\n    static contextType = AuthContext;\n\n    saveSelectedPSets = event => {\n        event.preventDefault();\n        if(this.context.authenticated){\n            APICalls.saveOrUpdateUserPSets(this.context.username, this.props.selectedPSets, (status, data) => {this.props.onSaveComplete(status, data)});\n        }\n    }\n\n    render(){\n        return(\n            this.context.authenticated ? <Button label='Save' onClick={this.saveSelectedPSets} disabled={this.props.disabled}/> : '*Login or register to save existing PSets to your profile.'\n        );\n    }\n}\n\nexport default SavePSetButton;\n","// Helper functions used for PSet API requests.\n\nexport function getFilterSet(data){\n    var filterset = {}\n    filterset.datatype = toFilterArray(data.dataType);\n    filterset.datasetName = toFilterArray(data.dataset);\n    filterset.datasetVersion = toFilterArray(data.dataset, true);\n    filterset.genome = toFilterArray(data.genome);\n    filterset.rnaTool = toFilterArray(data.rnaTool);\n    filterset.dnaTool = toFilterArray(data.dnaTool);\n    filterset.rnaRef = toFilterArray(data.rnaRef);\n    filterset.dnaRef = toFilterArray(data.dnaRef);\n    filterset.drugSensitivity = toFilterArray(data.drugSensitivity, true);\n    return(filterset);\n}\n\nexport function buildAPIStr(filterSet){\n    let apiStr = '/pset?status=complete&';\n    let apiFragments = [];\n    apiFragments.push(buildAPIStrFragment('dtp', filterSet.datatype));\n    apiFragments.push(buildAPIStrFragment('dsv', filterSet.datasetVersion));\n    apiFragments.push(buildAPIStrFragment('dsn', filterSet.datasetName));\n    apiFragments.push(buildAPIStrFragment('gnm', filterSet.genome));\n    apiFragments.push(buildAPIStrFragment('rnat', filterSet.rnaTool));\n    apiFragments.push(buildAPIStrFragment('dnat', filterSet.dnaTool));\n    apiFragments.push(buildAPIStrFragment('rnar', filterSet.rnaRef));\n    apiFragments.push(buildAPIStrFragment('dnar', filterSet.dnaRef));\n    apiFragments.push(buildAPIStrFragment('dst', filterSet.drugSensitivity));\n    for(let i = 0; i < apiFragments.length; i++){\n        if(apiFragments[i].length > 0){\n            apiStr += apiFragments[i] + '&';\n        }\n    }\n    apiStr = apiStr.replace(/&$/, '');\n    return(apiStr);\n}\n\nexport function isNoneSelected(filterset){\n    if(!filterset.datatype.length && \n        !filterset.datasetName.length && \n        !filterset.genome.length && \n        !filterset.rnaTool.length &&\n        !filterset.dnaTool.length &&\n        !filterset.rnaRef.length &&\n        !filterset.dnaRef.length &&\n        !filterset.drugSensitivity.length){\n        return(true);\n    }\n    return(false);\n}\n\nexport function isNotReadyToSubmit(request){\n    if(!isSelected(request.dataType)){\n        return(true);\n    }else if(request.dataType.length === 1){\n        if(request.dataType[0] === 'RNA' && (!isSelected(request.rnaRef) || !isSelected(request.rnaTool))){\n            return(true);\n        }else if(request.dataType[0] === 'DNA' && (!isSelected(request.dnaRef) || !isSelected(request.dnaTool))){\n            return(true);\n        }\n    }else{\n        if(!isSelected(request.rnaRef)){\n            return(true);\n        }\n        if(!isSelected(request.dnaRef)){\n            return(true);\n        }\n        if(!isSelected(request.rnaTool)){\n            return(true);\n        }\n        if(!isSelected(request.dnaTool)){\n            return(true);\n        }\n    }\n\n    if(!isSelected(request.genome)){\n        return(true);\n    } \n    if(!isSelected(request.dataset)){\n        return(true);\n    }\n    // if(!isSelected(request.drugSensitivity)){\n    //     return(true);\n    // }\n    if(!hasName(request.name)){\n        return(true);\n    }\n    if(!isValidEmail(request.email)){\n        return(true);\n    }\n    return(false);\n}\n\nexport function isSelected(reqParam){\n    if(typeof reqParam === 'undefined' || reqParam === null){\n        return(false);\n    }\n    if(Array.isArray(reqParam) && !reqParam.length){\n        return(false);\n    }\n    return(true);\n}\n\nexport function messageAfterRequest(status, data, initialize=null, msgComponent){\n    if(initialize){\n        initialize();\n    }\n    if(status){\n        msgComponent.show({severity: 'success', summary: data.summary, detail: data.message, sticky: true});\n    }else{\n        msgComponent.show({severity: 'error', summary: 'An error occured', detail: data.toString(), sticky: true});\n    } \n}\n\nfunction hasName(name){\n    if(typeof name === 'undefined' || name === null){\n        return(false);\n    }\n    if(name.length === 0){\n        return(false);\n    }\n    return(true);\n}\n\nfunction isValidEmail(email){\n    const regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if(typeof email === 'undefined' || email === null){\n        return(false);\n    }\n    if(email.length === 0){\n        return(false);\n    }\n    if(!regex.test(email)){\n        return(false);\n    }\n    return(true);\n}\n\nfunction toFilterArray(selectedValues, isDatasetVersion = false){\n    var filterArray = [];\n    if(typeof selectedValues === 'undefined' || selectedValues === null){\n        return(filterArray);\n    }\n    if(Object.keys(selectedValues).length === 0 && selectedValues.constructor === Object){\n        return(filterArray);\n    }\n    if(Array.isArray(selectedValues)){\n        if(isDatasetVersion){\n            for(let i = 0; i < selectedValues.length; i++){   \n                filterArray.push(selectedValues[i].version);\n            }\n        }else{\n            for(let i = 0; i < selectedValues.length; i++){   \n                filterArray.push(selectedValues[i].name);\n            }\n        }\n        return(filterArray);\n    } \n    if(isDatasetVersion){\n        filterArray.push(selectedValues.version);\n    }else{\n        filterArray.push(selectedValues.name);\n    }\n    return(filterArray);\n}\n\nfunction buildAPIStrFragment(keyName, filterArray){\n    var apiFragment = '';\n    if(filterArray.length > 0){\n        for(let i = 0; i < filterArray.length; i++){\n            apiFragment += keyName + '=' + filterArray[i]\n            if(i < filterArray.length - 1){\n                apiFragment += '&';\n            }\n        }\n    }   \n    return(apiFragment);\n}\n","import React, {useState, useEffect} from 'react';\nimport './PSetSearch.css';\nimport Navigation from '../Navigation/Navigation';\nimport PSetFilter from './subcomponents/PSetFilter';\nimport PSetTable from '../Shared/PSetTable';\nimport SavePSetButton from '../Shared/Buttons/SavePSetButton';\nimport {usePromiseTracker} from \"react-promise-tracker\";\nimport {trackPromise} from 'react-promise-tracker';\nimport Loader from 'react-loader-spinner';\nimport {Button} from 'primereact/button';\nimport {InputText} from 'primereact/inputtext';\nimport {Messages} from 'primereact/messages';\nimport * as APIHelper from '../Shared/PSetAPIHelper';\nimport Footer from '../Footer/Footer';\n\nexport const SearchReqContext = React.createContext();\n\nasync function fetchData(url) {\n    const response = await fetch(url);\n    const json = await response.json();\n    return(json);\n}\n\nconst PSetSearch = (props) => {\n    const [allData, setAllData] = useState([]);\n    const [searchAll, setSearchAll] = useState(true);\n    const [selectedPSets, setSelectedPSets] = useState([]);\n    const [disableSaveBtn, setDisableSaveBtn] = useState(true);\n    const [isRequest, setIsRequest] = useState(false);\n    const [notReadyToSubmit, setNotReadyToSubmit] = useState(true);\n    const [parameters, setParameters] = useState({});\n    \n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n\n    useEffect(() => {\n        const initializeView = async () => {\n            const psets = await fetchData('/pset?status=complete');\n            setAllData(psets);\n            setSearchAll(true);\n        }\n        initializeView();\n    }, []);\n\n    useEffect(() => {\n        setDisableSaveBtn(APIHelper.isSelected(selectedPSets) ? false : true)\n    }, [selectedPSets]);\n\n    useEffect(() => {\n        async function update() {\n            let filterset = APIHelper.getFilterSet(parameters);\n            let apiStr = APIHelper.buildAPIStr(filterset);\n            console.log(apiStr);\n            let searchAll = apiStr === '/pset' ||  apiStr === '/pset?' ? true : false;\n            const psets = await fetchData(apiStr);\n            setAllData(psets);\n            setSearchAll(searchAll);\n        }\n        update();\n        let params = parameters;\n        params.name = name;\n        params.email = email;\n        setNotReadyToSubmit(APIHelper.isNotReadyToSubmit(params));\n    }, [parameters])\n\n    const updatePSets = async () => {\n        let filterset = APIHelper.getFilterSet(parameters);\n        let apiStr = APIHelper.buildAPIStr(filterset);\n        console.log(apiStr);\n        let searchAll = apiStr === '/pset' ||  apiStr === '/pset?' ? true : false;\n        const psets = await fetchData(apiStr);\n        setAllData(psets);\n        setSearchAll(searchAll);\n    }\n\n    const showMessage = (status, data) => {\n        let severity = status ? 'success' : 'error';\n        PSetSearch.messages.show({severity: severity, summary: data.summary, detail: data.message, sticky: true});\n        initializeState();\n    }\n\n    const updatePSetSelection = (selected) => {\n        setSelectedPSets(selected);\n    }\n\n    const initializeState = () => {\n        setSelectedPSets([]);\n        setDisableSaveBtn(true);\n    }\n\n    const handleSubmitRequest = async event => {\n        event.preventDefault();\n        let reqData = parameters;\n        reqData.drugSensitivity = reqData.dataset.drugSensitivity;\n        reqData.name = name;\n        reqData.email = email;\n        console.log(reqData);\n        const res = await trackPromise(fetch('/pset/request', {\n                method: 'POST',\n                body: JSON.stringify({reqData: reqData}),\n                headers: {'Content-type': 'application/json'}\n            }));\n        const resData = await res.json();\n        showMessage(res.ok, resData);\n        initializeState();\n    }\n\n    useEffect(() => {\n        let params = parameters;\n        params.name = name;\n        params.email = email;\n        setNotReadyToSubmit(APIHelper.isNotReadyToSubmit(params));\n    }, [name, email])\n    \n    const SubmitRequestButton = () => {\n        const {promiseInProgress} = usePromiseTracker();\n        return(\n            promiseInProgress ? \n                <div className='loaderContainer'>\n                    <Loader type=\"ThreeDots\" color=\"#3D405A\" height={100} width={100} />\n                </div>\n                :\n                <Button label='Submit Request' type='submit' disabled={notReadyToSubmit} onClick={handleSubmitRequest}/>\n        );\n    }\n        \n    return(\n        <SearchReqContext.Provider value={{ \n                parameters: parameters, \n                setParameters: setParameters, \n                updatePSets: updatePSets, \n                isRequest: isRequest, \n                setIsRequest: setIsRequest\n            }}\n        >\n            <Navigation routing={props} />\n            <div className='pageContent'>\n                <h1>Search or Request Pharmacogenomic Datasets</h1>\n                <div className='pSetListContainer'>\n                    <PSetFilter /> \n                    <div className='pSetTable'>\n                        <Messages ref={(el) => PSetSearch.messages = el} />\n                        <div className='pSetSelectionSummary'>\n                            <div className='summaryPanel'>\n                                <h2>Summary</h2>\n                                <div className='pSetSummaryContainer'>\n                                    <div className='pSetSummaryItem'>\n                                        {\n                                            searchAll ? \n                                            <span><span className='pSetSummaryNum'>{allData.length}</span> <span>dataset(s) available.</span></span>\n                                            :\n                                            <span><span className='pSetSummaryNum'>{allData.length}</span> <span>{allData.length === 1 ? ' match' : ' matches'}</span> found.</span>\n                                        }\n                                    </div>\n                                </div>\n                                <SavePSetButton selectedPSets={selectedPSets} disabled={disableSaveBtn} onSaveComplete={showMessage} />\n                            </div>\n                            {\n                                isRequest &&\n                                <div className='requestFormPanel'>\n                                    <h2>Request PSet</h2>\n                                    <div className='reqFormInput'>\n                                        <label>PSet Name:</label>\n                                            <InputText id='name' className='paramInput' value={name || ''} onChange={(e) => {setName(e.target.value)}} />\n                                    </div>\n                                    <div className='reqFormInput'>\n                                        <label>Email to receive DOI:</label>\n                                            <InputText id='email' className='paramInput' value={email || ''} onChange={(e) => {setEmail(e.target.value)}} />\n                                    </div>\n                                    <div className='reqFormInput'>\n                                        <SubmitRequestButton />\n                                    </div>\n                                </div>\n                            }\n                        </div>\n                        <PSetTable allData={allData} selectedPSets={selectedPSets} updatePSetSelection={updatePSetSelection} scrollHeight='600px'/>    \n                    </div>\n                </div>\n            </div>\n            <Footer />\n        </SearchReqContext.Provider>\n    );\n}\n\nexport default PSetSearch;","import React, {useState, useEffect, useContext} from 'react';\nimport './Dashboard.css';\nimport Navigation from '../Navigation/Navigation';\nimport Footer from '../Footer/Footer';\nimport {usePromiseTracker} from \"react-promise-tracker\";\nimport {trackPromise} from 'react-promise-tracker';\nimport Loader from 'react-loader-spinner';\nimport {Messages} from 'primereact/messages';\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport {AuthContext} from '../../context/auth';\n\nconst Dashboard = (props) => {\n    \n    const auth = useContext(AuthContext);\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    const { promiseInProgress } = usePromiseTracker();\n\n    const show = (message) => {\n        Dashboard.messages.show(message);\n    }\n\n    const fetchData = async (url) => {\n        const response = await fetch(url);\n        const json = await response.json();\n        setData(json);\n        setLoading(false);\n    }\n\n    const submitRequest = async (id) => {\n        const result = await trackPromise(fetch(\n            '/pset/process', \n            { \n                method: 'POST', \n                body: JSON.stringify({id: id}), \n                headers: {'Content-type': 'application/json'} \n            }\n        ));\n        const json = await result.json();\n        return({ok: result.ok, data: json});\n    }\n\n    useEffect(() => {\n        fetchData('/pset?status=pending&status=in-process');\n    }, []);\n    \n    const onSubmit = async (event) => {\n        event.preventDefault();\n        console.log(event.target.id);\n        const result = await submitRequest(event.target.id);\n        if(result.ok){\n            show({severity: 'success', summary: result.data.summary, detail: result.data.message, sticky: true});\n        }else{\n            show({severity: 'error', summary: result.data.summary, detail: result.data.message, sticky: true});\n        }\n        await fetchData('/pset?status=pending&status=in-process');\n    }\n\n    const dateTimeTemplate = (rowData, column) => {\n        let dateTimeStr = '';\n        if(rowData[column.field]){\n            dateTimeStr = new Date(rowData[column.field]).toLocaleString(undefined, {dateStyle: 'long', timeStyle: 'medium'});\n        }\n        return(<div>{dateTimeStr}</div>)\n    }\n\n    const buttonTemplate = (rowData, column) => {\n        let button = '';\n        if(rowData.status === 'pending'){\n            button = <button id={rowData._id} onClick={onSubmit} className='dashboardBtn' type='button'>Submit</button>\n        }\n        return(<div className='dashBoardBtnContainer'>{button}</div>)\n    }\n\n    return(\n        <React.Fragment>\n            <Navigation routing={props} />\n            <div className='pageContent'>\n                <div className='dashboardWrapper'>\n                    <h1>PSet Request Status Board</h1>\n                    <Messages ref={(el) => Dashboard.messages = el }></Messages>\n                    <div className='dashboardSummary'>\n                        <h2>Request Status Summary</h2>\n                        <div className='dashboardSummaryContainer'>\n                            <div className='dashboardSummarySection'>\n                                <span className='number'>{ data.filter(d => d.status === 'pending').length }</span> pending request(s).\n                            </div>\n                            <div className='dashboardSummarySection'>\n                                <span className='number'>{ data.filter(d => d.status === 'in-process').length }</span> request(s) in process.\n                            </div>    \n                        </div>    \n                    </div>\n                    <div className='dashboardTable'>\n                        {\n                            (!loading && data.length > 0) ?\n                            <DataTable value={data} paginator={true}  scrollable={true} rows={10} >\n                                <Column className='textField' field='status' header='Status' style={{width:'2em'}} sortable={true} />\n                                <Column className='textField' field='name' header='Name' style={{width:'5em'}} sortable={true} />\n                                <Column className='textField' field='dateSubmitted' header='Submitted Date' body={dateTimeTemplate} style={{width:'4em'}} sortable={true} />\n                                <Column className='textField' field='dateProcessed' header='Process Start Date' body={dateTimeTemplate} style={{width:'4em'}} sortable={true} />\n                                { auth.isAdmin && <Column body={buttonTemplate} style={{width:'1.5em'}}/> }\n                            </DataTable>\n                            :\n                            <h3>There currently are no pending or in-process requests.</h3>\n                        } \n                        {\n                            promiseInProgress && \n                            <div className='dashboardTableOverlay'>\n                                \n                                <div className='dashboardLoaderContainer'>\n                                    <Loader type=\"ThreeDots\" color=\"#3D405A\" height={100} width={100} />\n                                </div>\n                                \n                            </div>   \n                        }\n                    </div> \n                </div>   \n            </div>\n            <Footer />\n        </React.Fragment>    \n    );\n}\n\nexport default Dashboard;","import React from 'react';\n\nimport Plotly from \"plotly.js-basic-dist\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nconst Plot = createPlotlyComponent(Plotly);\n\nclass DownloadChart extends React.Component{\n    render() {\n        let value = this.props.data.value;\n        let name = this.props.data.name;\n        \n        return (\n          <Plot\n            data={[\n                {\n                    type: 'bar', \n                    x: value, \n                    y: name, \n                    orientation: 'h', \n                    marker: {color: '#3D405A'}\n                },\n            ]}\n            layout={ {\n                autosize: true,\n                title: this.props.title, \n                xaxis: {\n                    title: {text: 'Number of Downloads', font: {size: 14, color: '#3D405A'}}\n                },\n                yaxis: {\n                    autorange: 'reversed',\n                }, \n                titlefont: {size: 18, color: '#3D405A'}, \n                font:{color: '#3D405A'}\n            } }\n            style = {{width: \"100%\"}}\n            useResizeHandler = {true}\n          />\n        );\n    }\n}\n\nexport default DownloadChart;","import React from 'react';\nimport './Stats.css';\nimport Navigation from '../Navigation/Navigation';\nimport {Messages} from 'primereact/messages';\nimport PSetTable from '../Shared/PSetTable';\nimport SavePSetButton from '../Shared/Buttons/SavePSetButton';\n//import DownloadPSetButton from '../Shared/Buttons/DownloadPSetButton';\nimport * as APICalls from '../Shared/APICalls';\nimport * as APIHelper from '../Shared/PSetAPIHelper';\nimport {AuthContext} from '../../context/auth';\nimport DownloadChart from './DownloadChart';\nimport Footer from '../Footer/Footer';\n\nclass Stats extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            allData: [],\n            chartData: {},\n            selectedPSets: [],\n            disableBtn: true,\n            isReady: false\n        }\n        this.updatePSetSelection = this.updatePSetSelection.bind(this);\n        this.showMessages = this.showMessages.bind(this);\n        this.initializeState = this.initializeState.bind(this);\n    }\n\n    static contextType = AuthContext;\n\n    componentDidMount(){\n        APICalls.queryPSet('/pset/sort', (resData) => {\n            const data = [];\n            const name = [];\n            const value = [];\n            for(let i = 0; i < resData.length; i++){\n                data.push({name: resData[i].name, value: resData[i].download});\n                name.push(resData[i].name);\n                value.push(resData[i].download);\n                if(i >= 9){\n                    break;\n                }\n            }\n            this.setState({\n                allData: resData,\n                chartData: {data: data, name: name, value: value},\n                isReady: true\n            });\n        });\n    }\n\n    updatePSetSelection(selected){\n        this.setState({selectedPSets: selected}, () => {\n            if(APIHelper.isSelected(this.state.selectedPSets)){\n                this.setState({disableBtn: false});\n            }else{\n                this.setState({disableBtn: true});\n            }\n        });\n    }\n\n    showMessages(status, data){\n        APIHelper.messageAfterRequest(status, data, this.initializeState, this.messages);\n        APICalls.queryPSet('/pset/sort', (resData) => {\n            this.setState({\n                allData: resData\n            });\n        });\n    }\n\n    initializeState(){\n        this.setState({\n            selectedPSets: [],\n            disableBtn: true\n        });\n    }\n    \n    render(){\n        return(\n            <React.Fragment>\n                <Navigation routing={this.props} />\n                <div className='pageContent'>\n                    <h1>PSet Usage and Downloads</h1>\n                    <div className='statContainer'>\n                        <div className='container rankingTable'>\n                            <h3>Download Ranking</h3>\n                            <Messages ref={(el) => this.messages = el} />\n                            <PSetTable allData={this.state.allData} selectedPSets={this.state.selectedPSets} updatePSetSelection={this.updatePSetSelection} showDownload={true} scrollHeight='340px'/>\n                            <div className='rankingTableFooter'>\n                                {/* <DownloadPSetButton selectedPSets={this.state.selectedPSets} disabled={this.state.disableBtn} onDownloadComplete={this.showMessages}/> */}\n                                <SavePSetButton selectedPSets={this.state.selectedPSets} disabled={this.state.disableBtn} onSaveComplete={this.showMessages} />\n                            </div>\n                        </div>\n                        <div className='container downloadHistogram'>\n                            {this.state.isReady && <DownloadChart data={this.state.chartData} title='Top 10 Most Popular PSets' />}\n                        </div>\n                    </div>\n                </div>\n                <Footer />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Stats;","import React from 'react';\n\nconst Overview = () => {\n    return(\n        <div className='documentation'>\n            <h1>Overview</h1>\n            <h3>Introduction</h3>\n            <p>\n                ORCESTRA is a new web application that enables users to search, request and manage pharmacogenomic datasets (PSets).\n                <br />\n                PSets are generated with an automated pipeline by using a verion controll platform called Pachyderm. Upon completion of the pipeline, a newly generated PSet is uploaded to Zenodo, a data-sharing platform, and is assigned a DOI.\n                <br />\n                With Pachyderm's strict version controlling system, coupled with the DOI assignment, ORCESTRA ensures that your experiements with PSets are transparent and easily reproducible.\n            </p>    \n        </div>    \n    );\n}\n\nexport default Overview","import React from 'react';\n\nconst Search = () => {\n    return(\n        <div className='documentation'>\n            <h1>Search</h1>\n        </div>    \n    );\n}\n\nexport default Search","import React from 'react';\n\nconst Request = () => {\n    return(\n        <div className='documentation'>\n            <h1>Request</h1>  \n        </div>    \n    );\n}\n\nexport default Request","import React from 'react';\n\nconst UserProfile = () => {\n    return(\n        <div className='documentation'>\n            <h1>User Profile</h1>\n        </div>    \n    );\n}\n\nexport default UserProfile","import React from 'react';\n\nconst Statistics = () => {\n    return(\n        <div className='documentation'>\n            <h1>Statistics</h1>\n        </div>    \n    );\n}\n\nexport default Statistics","import React, { useState } from 'react';\nimport './Documentation.css';\nimport Navigation from '../Navigation/Navigation';\nimport Footer from '../Footer/Footer';\n\nimport Overview from './DocFunctionality/Overview';\nimport Search from './DocFunctionality/Search';\nimport Request from './DocFunctionality/Request';\nimport UserProfile from './DocFunctionality/UserProfile';\nimport Statistics from './DocFunctionality/Statistics';\n\nconst Documentation = (props) => {\n    \n    const [display, setDisplay] = useState('overview');\n\n    return(\n        <React.Fragment>\n            <Navigation routing={props} />\n            <div className='pageContent'>\n                <div className='documentationContent'>\n                    <nav className='documentationNav'>\n                        <h2>Functionality</h2>\n                        <ul>\n                            <li className={display === 'overview' ? 'selected' : undefined}>\n                                <button type='button' onClick={() => setDisplay('overview')}>Overview</button>\n                            </li>\n                            <li className={display === 'search' ? 'selected' : undefined}>\n                                <button type='button' onClick={() => setDisplay('search')}>Search</button>\n                            </li>    \n                            <li className={display === 'request' ? 'selected' : undefined}>\n                                <button type='button' onClick={() => setDisplay('request')}>Request</button>\n                            </li>\n                            <li className={display === 'userProfile' ? 'selected' : undefined}>\n                                <button type='button' onClick={() => setDisplay('userProfile')}>User Profile</button>\n                            </li>\n                            <li className={display === 'statistics' ? 'selected' : undefined}>\n                                <button type='button' onClick={() => setDisplay('statistics')}>Statistics</button>\n                            </li>\n                        </ul> \n                        <h2>API</h2>\n                        <ul>\n                            <li className={display === 'api-psets-available' ? 'selected' : undefined}>\n                                <button type='button' onClick={() => setDisplay('api-psets-available')}>Available PSets</button>\n                            </li>\n                            <li className={display === 'api-pset-single' ? 'selected' : undefined}>\n                                <button type='button' onClick={() => setDisplay('api-pset-single')} >PSet Metadata</button>\n                            </li>\n                            <li className={display === 'api-statistics' ? 'selected' : undefined}>\n                                <button type='button' onClick={() => setDisplay('api-statistics')}>Statistics</button>\n                            </li>    \n                        </ul>\n                    </nav>\n                    {display === 'overview' && <Overview /> }\n                    {display === 'search' && <Search /> }\n                    {display === 'request' && <Request /> }\n                    {display === 'userProfile' && <UserProfile /> }\n                    {display === 'statistics' && <Statistics /> }\n                </div>\n            </div>\n            <Footer />\n        </React.Fragment>\n    );\n}\n\nexport default Documentation;","import React from 'react';\nimport './UserInfo.css'\nimport {Button} from 'primereact/button';\nimport {AuthContext} from '../../../context/auth';\n\nclass UserInfo extends React.Component{\n    \n    constructor(){\n        super();\n        this.state = {\n            user: {}\n        }\n        this.showModal = this.showModal.bind(this);\n        this.hideModal = this.hideModal.bind(this);\n    }\n\n    static contextType = AuthContext;\n\n    componentDidMount(){\n        fetch('/user/?username=' + this.context.username)\n            .then(res => res.json())\n            .then(user => this.setState({user: user}));\n    }\n\n    showModal(){\n\n    }\n\n    hideModal(){\n\n    }\n    \n    render(){\n        return(\n            <div className='userInfoContainer'>\n                <h2>User Information</h2>\n                <div className='userInfo'>Username: {this.state.user.username}</div>\n                <div className='userInfoBtn'>\n                    <Button label='Change User Settings' onClick={this.showModal} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserInfo;","import React from 'react';\nimport {Button} from 'primereact/button';\nimport * as APICalls from '../APICalls';\n\nclass DownloadPSetButton extends React.Component{\n    constructor(){\n        super();\n        this.downloadPSets = this.downloadPSets.bind(this);\n    }\n\n    downloadPSets = event => {\n        event.preventDefault();\n        const psets = this.props.selectedPSets;\n        \n        const link = document.createElement('a');\n        link.setAttribute('download', null);\n        link.style.display = 'none';\n        document.body.appendChild(link);\n        for(let i = 0; i < psets.length; i++){\n            if(psets[i].downloadLink){\n                link.setAttribute('href', psets[i].downloadLink)\n                link.click();\n            } \n        }\n        document.body.removeChild(link);\n\n        APICalls.downloadPSets(this.props.selectedPSets, (status, data) => {\n            //this.props.onDownloadComplete(status, data);\n        });\n    }\n\n    render(){\n        return(\n            <Button className='downloadBtn' label='Download' disabled={this.props.disabled} onClick={this.downloadPSets} />\n        );\n    }\n}\n\nexport default DownloadPSetButton;","import React from 'react';\nimport PSetTable from '../../Shared/PSetTable';\nimport {Button} from 'primereact/button';\nimport DownloadPSetButton from '../../Shared/Buttons/DownloadPSetButton';\nimport {Dialog} from 'primereact/dialog';\nimport * as APIHelper from '../../Shared/PSetAPIHelper';\nimport './UserPSet.css';\n\nclass UserPSet extends React.Component{\n    \n    constructor(){\n        super();\n        this.state = {\n            selectedPSets: [],\n            btnDisabled: true,\n            dialogVisible: false,\n            btnYesDislabed: false\n        }\n        this.handleBtnClick = this.handleBtnClick.bind(this);\n        this.handleSelectionChange = this.handleSelectionChange.bind(this);\n        this.onClickYes = this.onClickYes.bind(this);\n        this.onHide = this.onHide.bind(this);\n        this.showMessages = this.showMessages.bind(this);\n    }\n\n    handleSelectionChange(selected){\n        this.setState({selectedPSets: selected}, () => {\n            if(this.state.selectedPSets && this.state.selectedPSets.length > 0){\n                this.setState({btnDisabled: false});\n            }else{\n                this.setState({btnDisabled: true});\n            }\n        });\n    }\n\n    handleBtnClick = event => {\n        this.setState({dialogVisible: true});\n    }\n\n    showMessages(status, data){\n        APIHelper.messageAfterRequest(status, data, null, this.props.messages);\n    }\n\n    onClickYes(){\n        this.setState({\n            btnDisabled: true,\n            btnYesDislabed: true\n        });\n        this.props.handleBtnClick(this.state.selectedPSets, (err)=>{\n            if(!err){\n                this.setState({\n                    selectedPSets: [],\n                    dialogVisible: false,\n                });\n            }else{\n                this.setState({btnDisabled: false});\n            }   \n        });\n    }\n    \n    onHide(){\n        this.setState({\n            dialogVisible: false,\n            btnYesDislabed: false\n        });\n    }\n    \n    render(){\n\n        const psetData = (\n            <React.Fragment>\n                <div>\n                    <PSetTable allData={this.props.pset} selectedPSets={this.state.selectedPSets} updatePSetSelection={this.handleSelectionChange} scrollHeight='350px' pending={this.props.pending}/>\n                </div>\n                <div className='footer'>\n                { this.props.pending ? '' : \n                    <DownloadPSetButton selectedPSets={this.state.selectedPSets} disabled={this.state.btnDisabled} onDownloadComplete={this.showMessages}/>\n                } \n                <Button label={this.props.btnLabel} onClick={this.handleBtnClick} disabled={this.state.btnDisabled} />\n                </div>\n            </React.Fragment>\n        );\n\n        const noPSetData = (\n            <p>No data available.</p>\n        );\n\n        const dialogFooter = (\n            <div>\n                <Button label=\"Yes\" onClick={this.onClickYes} disabled={this.state.btnYesDislabed}/>\n                <Button label=\"Cancel\" onClick={this.onHide} />\n            </div>\n        );\n        \n        return(\n            <div className='userPSet'>\n                <h2>{this.props.heading}</h2>\n                <div className='userPSetContent'>\n                    {this.props.pset ? psetData : noPSetData}\n                </div>\n                <div>\n                    <Dialog header={this.props.pending? 'Canceling PSet Request(s)' : 'Removing Pset(s)' } footer={dialogFooter} visible={this.state.dialogVisible} style={{width: '300px'}} modal={true} onHide={this.onHide}>\n                        { this.props.pending ? 'Are you sure you would like to cancel the selected PSet request(s)?' : 'Are you sure you would like to remove the selected PSet(s) from the saved list?' }\n                    </Dialog>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserPSet;","import React from 'react';\nimport './Profile.css';\nimport Navigation from '../Navigation/Navigation'\nimport UserInfo from './subcomponents/UserInfo';\nimport UserPSet from './subcomponents/UserPSet';\nimport {Messages} from 'primereact/messages';\nimport {AuthContext} from '../../context/auth';\nimport * as APIHelper from '../Shared/PSetAPIHelper';\nimport Footer from '../Footer/Footer';\n\nclass Profile extends React.Component{\n\n    constructor(){\n        super();\n        this.state = {\n            username: '',\n            userEmail: '',\n            psetSaved: [],\n            psetInProcess: []\n        }\n        this.removeFromSavedList = this.removeFromSavedList.bind(this);\n        this.cancelPSetRequest = this.cancelPSetRequest.bind(this);\n        this.findPSetByID = this.findPSetByID.bind(this);\n        this.removePSetByID = this.removePSetByID.bind(this);\n    }\n\n    static contextType = AuthContext;\n\n    componentDidMount(){\n        fetch('/user/pset/?username=' + this.context.username)  \n            .then(res => res.json())\n            .then(resData => {\n                let complete = [];\n                let pending = [];\n                for(let i = 0; i < resData.length; i++){\n                    if(resData[i].status === 'complete'){\n                        complete.push(resData[i]);\n                    }else{\n                        pending.push(resData[i]);\n                    }\n                }\n                this.setState({\n                    psetSaved: complete,\n                    psetInProcess: pending\n                });\n            });\n    }\n\n    removeFromSavedList = (selectedPSet, callback) => {\n        var psetID = []\n        for(let i = 0; i < selectedPSet.length; i++){\n            psetID.push(selectedPSet[i]._id);\n        }\n        fetch('/user/pset/remove', {\n            method: 'POST',\n            body: JSON.stringify({username: this.context.username, psetID: psetID}),\n            headers: {\n                'Content-type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(resData => {\n                APIHelper.messageAfterRequest(1, resData, null, this.messages);\n                var saved = this.state.psetSaved;\n                saved = this.removePSetByID(saved, psetID);\n                this.setState({psetSaved: saved}, callback(0));\n            })\n            .catch(err => {\n                APIHelper.messageAfterRequest(0, err, null, this.messages);\n                callback(1);\n            });\n    }\n\n    cancelPSetRequest = (selectedPSet, callback) => {\n        var psetID = []\n        for(let i = 0; i < selectedPSet.length; i++){\n            psetID.push(selectedPSet[i]._id);\n        }\n        fetch('/pset/cancel', {\n            method: 'POST',\n            body: JSON.stringify({username: this.context.username, psetID: psetID}),\n            headers: {\n                'Content-type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(resData => {\n                APIHelper.messageAfterRequest(1, resData, null, this.messages);\n                var inProcess = this.state.psetInProcess;\n                inProcess = this.removePSetByID(inProcess, psetID);\n                this.setState({psetInProcess: inProcess}, callback(0));\n            })\n            .catch(err => {\n                APIHelper.messageAfterRequest(0, err, null, this.messages);\n                callback(1);\n            });\n    }\n\n    findPSetByID(psetArray, id){\n        for(let i = 0; i < psetArray.length; i++){\n            if(psetArray[i]._id === id){\n                return(i)\n            }\n        }\n        return(-1);\n    }\n\n    removePSetByID(psets, selected){\n        for(let i = 0; i < selected.length; i++){\n            let index = this.findPSetByID(psets, selected[i]);\n            if(index > -1){\n                psets.splice(index, 1);\n            }\n        }\n        return(psets);\n    }\n\n    render(){   \n        return(\n            <React.Fragment>\n                <Navigation routing={this.props}/>\n                <div className='pageContent'>\n                    <h1>Your Profile</h1>\n                    <div className='userProfile'>\n                        <UserInfo />\n                        <div className='userPSetLists'>\n                            <Messages ref={(el) => this.messages = el} />\n                            <UserPSet heading='Your Saved PSets' btnLabel='Remove from List' \n                                pset={this.state.psetSaved} \n                                handleBtnClick={this.removeFromSavedList}\n                                messages={this.messages}\n                            />\n                            <UserPSet heading='Your PSet Requests in Process' btnLabel='Cancel Request' \n                                pset={this.state.psetInProcess} \n                                pending={true}\n                                handleBtnClick={this.cancelPSetRequest}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <Footer />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Profile;","import React, {useState, useContext, useEffect} from 'react';\nimport {Button} from 'primereact/button';\nimport {InputText} from 'primereact/inputtext';\nimport {Messages} from 'primereact/messages';\nimport {AuthContext} from '../../context/auth';\n\nconst AuthForm = (props) => {\n    \n    const auth = useContext(AuthContext);\n    \n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordReg1, setPasswordReg1] = useState('');\n    const [passwordReg2, setPasswordReg2] = useState('');\n    const [userChecked, setUserChecked] = useState(false);\n    const [userExists, setUserExists] = useState(false);\n    const [userRegistered, setUserRegistered] = useState(false);\n    const [btnFindDisabled, setBtnFindDisabled] = useState(true);\n    const [btnLoginDisabled, setBtnLoginDisabled] = useState(true);\n    const [btnRegDisabled, setBtnRegDisabled] = useState(true);\n\n    useEffect(() => {\n        const regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n        regex.test(email) ? setBtnFindDisabled(false) : setBtnFindDisabled(true);\n    }, [email]);\n\n    useEffect(() => {\n        password.length >= 6 ? setBtnLoginDisabled(false) : setBtnLoginDisabled(true);\n    }, [password]);\n\n    useEffect(() => {\n        passwordReg1.length >= 6 ?  passwordReg1 === passwordReg2 && setBtnRegDisabled(false) : setBtnRegDisabled(true);\n    }, [passwordReg1, passwordReg2])\n\n    const handleInputChange = (event) => {\n        var name = event.target.name;\n        switch(name){\n            case 'email':\n                setEmail(event.target.value);\n                break;\n            case 'password':\n                setPassword(event.target.value);\n                break;\n            case 'passwordReg1':\n                setPasswordReg1(event.target.value);\n                break;\n            case 'passwordReg2':\n                setPasswordReg2(event.target.value);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const initialize = () => {\n        setEmail('');\n        setPassword('');\n        setPasswordReg1('');\n        setPasswordReg2('');\n        setUserChecked(false);\n        setUserExists(false);\n        setUserRegistered(false);\n        setBtnFindDisabled(true);\n        setBtnLoginDisabled(true);\n        setBtnRegDisabled(true);\n    }\n\n    const onFindClick = async (event) => {\n        event.preventDefault();\n        const api = 'user/check/?username=' + email;\n        const res = await fetch(api);\n        const json = await res.json();\n        if(res.ok){\n            setUserChecked(true);\n            setUserExists(json.exists);\n            setUserRegistered(json.registered);\n        }\n    }\n\n    const onLoginClick = async (event) => {\n        event.preventDefault();\n        const res = await fetch('/user/login', {\n            method: 'POST',\n            body: JSON.stringify({\n                user: { username: email, password: password }   \n            }),\n            headers: { 'Content-type': 'application/json' }\n        })\n        const data = await res.json();\n        if(data.authenticated){\n            console.log('authenticated');\n            initialize();\n            auth.setAuthToken(data);\n        }else{\n            AuthForm.messages.show({severity: 'error', summary: 'Login Failed', detail: 'Please re-enter your email and password.'});\n        }\n    }\n\n    const onRegisterClick = async (event) => {\n        event.preventDefault();\n        const res = await fetch('/user/register', {\n            method: 'POST',\n            body: JSON.stringify({\n                user: { username: email, password: passwordReg1, exists: userExists }\n            }),\n            headers: { 'Content-type': 'application/json' }\n        })\n        const data = await res.json();\n        if(data.status){\n            initialize();\n            auth.setAuthToken({authenticated: data.authenticated, username: data.username});\n        }else{\n            AuthForm.messages.show({severity: 'error', summary: 'Registration Failed', detail: 'Please try again.'});\n        }\n    }\n\n    const loginForm = () => {\n        return(\n            <React.Fragment>\n                <h4>Login with your password:</h4>\n                <div className='pwdMsg'>Password needs to be at least 6 characters in length</div>\n                <InputText className='pwdInput' type='password' name='password' value={password} onChange={handleInputChange}/>\n                <div>\n                    <Button label='Login' onClick={onLoginClick} disabled={btnLoginDisabled}/>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    const registerForm = () => {\n        return(\n            <React.Fragment>\n                <h4>{userExists ? 'Email is not registered. ': 'Email not found. '}Please register.</h4>\n                <div>\n                    <div className='pwdMsg'>Password needs to be at least 6 characters in length</div>\n                    <InputText className='pwdInput' type='password' name='passwordReg1' value={passwordReg1} onChange={handleInputChange}/>\n                </div>\n                <div>\n                    <label>Confirm your password:</label>\n                    <InputText className='pwdInput' type='password' name='passwordReg2' value={passwordReg2} onChange={handleInputChange}/>\n                </div>\n                <div>\n                    <Button label='Register' onClick={onRegisterClick} disabled={btnRegDisabled}/>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    \n    return(\n        <React.Fragment>\n            <h2>Login/Register</h2>\n            <Messages ref={(el) => AuthForm.messages = el}></Messages>\n            <h4>Enter your email:</h4>\n            <div className='emailInput'>\n                <InputText type='email' name='email' value={email} onChange={handleInputChange}/>\n                <Button className='btnLoginFind' label='Find' icon=\"pi pi-arrow-right\" onClick={onFindClick} disabled={btnFindDisabled}/>\n            </div>\n            { userChecked ? <div className='formContainer'>{userRegistered ? loginForm() : registerForm()}</div> : '' }\n        </React.Fragment>\n    );\n}\n\nexport default AuthForm;","import React, {useContext} from 'react';\nimport Navigation from '../Navigation/Navigation';\nimport { Redirect } from 'react-router-dom';\nimport AuthForm from './AuthForm';\nimport './Login.css';\nimport Footer from '../Footer/Footer';\nimport {AuthContext} from '../../context/auth';\n\nconst Login = (props) => {\n    const auth = useContext(AuthContext);\n    const msg = props.location.state.logoutMsg;\n    return(\n        <React.Fragment>\n            <Navigation routing={props} />\n            {auth.authenticated ? <Redirect to={props.location.state.path}/> : \n                <div className='pageContent'>\n                    <div className=\"loginRegContent\">\n                        <div className='logoutMsg'>{msg ? msg : ''}</div>\n                        <AuthForm />\n                    </div>   \n                </div>\n            }\n            <Footer />\n        </React.Fragment>\n    );\n}\n\nexport default Login;","import React from 'react';\nimport {Accordion,AccordionTab} from 'primereact/accordion';\n\nclass PSetToolAccordion extends React.Component {\n\n    render(){\n        const toolAccordionTabs = this.props.items.map((item) => \n            <AccordionTab key={item.name} header={item.name}>\n                {item.commands.length ? \n                    <ul>\n                        {item.commands.map((command) => \n                            <li key={command}>\n                                {command}\n                            </li>    \n                        )}\n                    </ul>\n                    :\n                    \"Not Available\"\n                }\n                   \n            </AccordionTab>\n        );\n        \n        return(\n            this.props.items.length ? \n                <Accordion multiple={true}>\n                    {toolAccordionTabs}\n                </Accordion>\n                :\n                <div className='subContent'>Not Available</div>\n        );\n    }\n\n}\n\nclass RNARefAccordion extends React.Component {\n    \n    render(){\n        const rnaRefAccordionTabs = this.props.items.map((item) => \n            <AccordionTab key={item.name} header={item.name}>\n                <ul>\n                    <li className='listItem-1'>\n                        <div>{item.name.length ? item.name : 'Currently not available'}</div>\n                        <div>{item.source.length ? <a href={item.source}>{item.source}</a> : 'Currently not available'}</div>\n                    </li>                    \n                </ul> \n            </AccordionTab>\n        );\n    \n        return(\n            this.props.items.length ? \n                <Accordion multiple={true}>\n                    {rnaRefAccordionTabs}\n                </Accordion>\n                :\n                <div className='subContent'>Not Available</div>\n        );\n    }\n    \n}\n\nclass DNARefAccordion extends React.Component {\n\n    render(){\n        const exomeRefAccordionTabs = this.props.items.map((item) => \n            <AccordionTab key={item.name} header={item.name}>\n                <ul>\n                    <li className='listItem-1'>\n                        <div>{item.name.length ? item.name: 'Currently not available'}</div>\n                        <div>{item.source.length ? <a href={item.source}>{item.source}</a> : 'Currently not available'}</div>\n                    </li>\n                    <li className='listItem-1'>\n                        <div>{item.cosmic.name}</div>\n                        <div><a href={item.cosmic.source}>{item.cosmic.source}</a> </div>\n                    </li>\n                    <li className='listItem-1'>\n                        <div>{item.exonTarget.name}</div>\n                        <div><a href={item.exonTarget.source}>{item.exonTarget.source}</a></div>\n                    </li>                       \n                </ul> \n            </AccordionTab>\n        );\n    \n        return(\n            this.props.items.length ? \n                <Accordion multiple={true}>\n                    {exomeRefAccordionTabs}\n                </Accordion>\n                :\n                <div className='subContent'>Not Available</div>\n        );\n    }\n\n}\n\nclass GeneralInfoAccordion extends React.Component {\n    render(){   \n        return(\n            <Accordion className='generalInfoAccordion'>\n                <AccordionTab header=\"General Information\">\n                    <h4 className='subContent'>PSet Name: {this.props.data.name}</h4>\n                    <h4 className='subContent'>Date Created: {this.props.data.dateCreated}</h4>\n                    {this.props.data.createdBy && <h4 className='subContent'>Created By {this.props.data.createdBy}</h4>}\n                </AccordionTab>    \n            </Accordion>    \n        );\n    }\n}\n\nexport {\n    PSetToolAccordion,\n    RNARefAccordion,\n    DNARefAccordion,\n    GeneralInfoAccordion\n}\n","import React from 'react';\n\nclass DatasetTabContent extends React.Component{\n\n    render(){          \n        const publication = (\n            <div>    \n            {this.props.metadata.dataset.publication.length ? \n                this.props.metadata.dataset.publication.map((item) => \n                    <li key={item.link} className='pubList'>\n                        <div className='subContent'>{item.citation}</div>\n                        <br />\n                        <div className='subContent'><a href={item.link}>{item.link}</a></div>\n                    </li>\n                )\n                :\n                <div className=\"subContent\">\n                    Not available.\n                </div>\n                }  \n            </div> \n        );\n        \n        return(\n            <React.Fragment>\n                <h1 className='tabMainHeader'>Dataset: {this.props.metadata.dataset.label}</h1>\n                <div className='tabContent'>\n                    <div className='tabContentSection'>\n                        <h3>Publication: </h3>\n                        <ul>\n                            {publication}\n                        </ul> \n                    </div>\n                    <div className='tabContentSection'>\n                        <h3>Drug Sensitivity</h3>\n                        <h4 className='subContent'>Source: {this.props.metadata.drugSensitivity.source ? <a href={this.props.metadata.drugSensitivity.source}>{this.props.metadata.drugSensitivity.source}</a> : 'Not available'}</h4>\n                        <h4 className='subContent'>Version: {this.props.metadata.drugSensitivity.version}</h4>\n                    </div>\n                    <div className='tabContentSection'>\n                        <h3>Genome Version</h3>\n                        <div className='subContent'>{this.props.metadata.genome.name ? this.props.metadata.genome.name : \"Not Available\"}</div>\n                    </div>\n                </div> \n            </React.Fragment>\n        );\n    }\n}\n\nexport default DatasetTabContent;","import React from 'react';\nimport {PSetToolAccordion, RNARefAccordion} from '../PSetAccordion';\n\nclass RNATabContent extends React.Component{\n    \n    render(){   \n        const genomeRawData = (   \n            <div>\n                { this.props.metadata.rawSeqDataRNA ? <a href={this.props.metadata.rawSeqDataRNA}>{this.props.metadata.rawSeqDataRNA}</a> : 'Not Available' }\n            </div>\n        );\n\n        return(\n            <React.Fragment>\n                <h1 className='tabMainHeader'>Analysis Details - RNA Data</h1>\n                <div className='tabContent'>\n                    <div className='tabContentSection'>\n                        <h3>Raw Data Source: </h3>\n                        <div className='subContent'>\n                            {genomeRawData}\n                        </div>\n                    </div>\n                    <div className='tabContentSection'>\n                        <h3>RNA Transcriptome</h3>\n                        <RNARefAccordion items={this.props.metadata.rnaRef} />\n                    </div>\n                    <div className='tabContentSection'>\n                        <h3>Tools and Commands Used</h3>\n                        <PSetToolAccordion items={this.props.metadata.rnaTool} />\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default RNATabContent;","import React from 'react';\nimport {PSetToolAccordion, DNARefAccordion} from '../PSetAccordion';\n\nclass DNATabContent extends React.Component{\n    \n    render(){  \n        const genomeRawData = (\n            <div>\n                { this.props.metadata.rawSeqDataDNA ? <a href={this.props.metadata.rawSeqDataDNA}>{this.props.metadata.rawSeqDataDNA}</a> : 'Not Available' }\n            </div>\n        );\n\n        return(\n            <React.Fragment>\n                <h1 className='tabMainHeader'>Analysis Details - DNA(Exome) Data</h1>\n                <div className='tabContent'>\n                    <div className='tabContentSection'>\n                        <h3>Raw Data Source: </h3>\n                        <div className='subContent'>\n                            {genomeRawData}\n                        </div>\n                    </div>\n                    <div className='tabContentSection'>\n                        <h3>Exome Reference</h3>\n                        <DNARefAccordion items={this.props.metadata.dnaRef} />\n                    </div>\n                    <div className='tabContentSection'>\n                        <h3>Tools and Commands Used</h3>\n                        <PSetToolAccordion items={this.props.metadata.dnaTool} />\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DNATabContent;","import React from 'react';\nimport './PSet.css';\nimport Navigation from '../Navigation/Navigation';\nimport {TabView,TabPanel} from 'primereact/tabview';\nimport * as APICalls from '../Shared/APICalls';\nimport {GeneralInfoAccordion} from './PSetAccordion';\nimport DatasetTabContent from './TabContents/DatasetTabContent';\nimport RNATabContent from './TabContents/RNATabContent';\nimport DNATabContent from './TabContents/DNATabContent';\nimport * as APIHelper from '../Shared/PSetAPIHelper';\nimport DownloadPSetButton from '../Shared/Buttons/DownloadPSetButton';\nimport {Messages} from 'primereact/messages';\nimport Footer from '../Footer/Footer';\n\nclass PSet extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            pset: {},\n            general: {},\n            dataset: {},\n            rna: {},\n            dna: {},\n            isReady: false,\n            message: ''\n        }\n        this.showMessage = this.showMessage.bind(this);\n    }\n\n    componentDidMount(){\n        console.log(this.props.match.params.id1 + '/' + this.props.match.params.id2);\n        let apiStr = '/pset/one/' + this.props.match.params.id1 + '/' + this.props.match.params.id2;\n        console.log(apiStr);\n        APICalls.queryPSet(apiStr, (pset) => {\n            console.log(pset);\n            if(pset){\n                this.setState({\n                    pset: pset,\n                    general: {name: pset.name, createdBy: pset.createdBy, dateCreated: pset.dateCreated},\n                    dataset: {dataset: pset.dataset, genome: pset.genome, drugSensitivity: pset.drugSensitivity},\n                    rna: {rnaTool: pset.rnaTool, rnaRef: pset.rnaRef, rawSeqDataRNA: pset.dataset.rawSeqDataRNA},\n                    dna: {dnaTool: pset.dnaTool, dnaRef: pset.dnaRef, rawSeqDataDNA: pset.dataset.rawSeqDataDNA},\n                    isReady: true\n                });\n            }else{\n                this.setState({message: 'We could not find a PSet with the ID.'})\n            }\n        });\n    }\n\n    showMessage(status, data){\n        APIHelper.messageAfterRequest(status, data, this.initializeState, this.messages);\n    }\n\n    render(){\n        return(\n            <React.Fragment>\n                <Navigation routing={this.props} />\n                <div className='pageContent'>\n                    <Messages ref={(el) => this.messages = el} />\n                    <div className='psetTitle'>\n                        <h1>Explore PSet - {this.state.pset.name}</h1>\n                        <DownloadPSetButton disabled={false} selectedPSets={[this.state.pset]} onDownloadComplete={this.showMessage}/>\n                    </div>\n                    <GeneralInfoAccordion data={this.state.general}/>\n                    <div className='tabContainer'>\n                        {this.state.isReady ? \n                            <TabView renderActiveOnly={false}>\n                                <TabPanel header=\"Dataset\">\n                                    <DatasetTabContent metadata={this.state.dataset} />   \n                                </TabPanel>\n                                {this.state.pset.dataType.map((type) => \n                                    <TabPanel key={type.name} header={type.name}>\n                                        {type.name === 'RNA' ? \n                                            <RNATabContent metadata={this.state.rna}/> \n                                            : \n                                            <DNATabContent metadata={this.state.dna}/>\n                                        }\n                                    </TabPanel>)\n                                }\n                            </TabView>\n                            : \n                            <h3>{this.state.message}</h3>\n                        }\n                    </div>\n                </div>\n                <Footer /> \n            </React.Fragment>\n        );\n    }\n}\n\nexport default PSet;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { AuthContext } from \"../../context/auth\";\nimport PrivateRoute from './PrivateRoute';\nimport App from '../App/App';\nimport PSetSearch from '../PSetSearch/PSetSearch';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Stats from '../Stats/Stats';\nimport Documentation from '../Documentation/Documentation';\nimport Profile from '../Profile/Profile';\nimport Login from '../Authentication/Login';\nimport PSet from '../PSet/PSet';\n\nclass Router extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            authenticated: false,\n            isAdmin: false,\n            user: '',\n            setAuthToken: (value) => {\n                this.setState({\n                    authenticated: value.authenticated,\n                    username: value.username,\n                    isAdmin: value.isAdmin\n                });\n            },\n            resetAuthToken: () => {\n                this.setState({\n                    authenticated: false,\n                    isAdmin: false,\n                    user: ''\n                });\n            }\n        }\n    }\n\n    componentDidMount(){\n        if(!this.state.authenticated){\n            fetch('/user/checkToken')\n            .then(res => {\n                if(res.status === 200){\n                    return(res.json());\n                }else{\n                    return({authenticated: false, isAdmin: false, username: ''});\n                }\n            })\n            .then(data => {this.state.setAuthToken(data)});\n        }\n    }\n\n    render(){\n        \n        const profile = (\n            <Profile />\n        );\n\n        return(\n            <AuthContext.Provider value={this.state}>\n                <BrowserRouter>\n                    <Switch>\n                        <Route exact path ='/' render={(props)=><App path='/' {...props} />} /> \n                        <Route exact path ='/PSetSearch' render={(props)=><PSetSearch path='/PSetSearch' {...props} />}/>\n                        <Route exact path ='/Dashboard' render={(props)=><Dashboard path='/Dashboard' {...props} />}/>\n                        <Route exact path ='/Stats' render={(props)=><Stats path='/Stats' {...props} />}/>\n                        <Route exact path ='/Documentation' render={(props)=><Documentation path='/Documentation' {...props} />}/>\n                        <Route exact path='/Authentication' render={(props) => <Login {...props} />} />\n                        <Route path='/:id1/:id2' render={(props)=><PSet path='/:id1/:id2' {...props} />} />\n                        <PrivateRoute path='/Profile' component={profile} redirect='/Authentication' />\n                    </Switch>\n                </BrowserRouter>\n            </AuthContext.Provider>\n        );\n    }\n}\n\nexport default Router;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport Router from './components/Routing/Router';\nimport * as serviceWorker from './components/serviceWorker';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}