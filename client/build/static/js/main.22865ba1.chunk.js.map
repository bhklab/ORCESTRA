{"version":3,"sources":["styles/img/bg3.png","styles/GlobalStyles.js","hooks/Context.js","hooks/useFindUser.js","hooks/usePachyderm.js","Routes/PrivateRoute.js","Routes/RestrictedRoute.js","Routes/AdminRoute.js","hooks/useAuth.js","components/Navigation/StyledNavigation.js","components/Shared/Enums.js","components/Navigation/Navigation.js","components/Footer/Footer.js","components/Main/MainStyle.js","components/Main/Main.js","components/SingleDataset/PSet/PSetAccordion.js","components/Main/MainDialog/PharmacogenomicsDialog.js","components/Main/MainBoxes/CanonicalBox.js","components/Main/MainBoxes/RequestStatusBox.js","components/Main/MainBoxes/PopularDatasetBox.js","components/Main/MainBoxes/YourOwnDataBox.js","components/Main/DatasetMainContent/Pharmacogenomics.js","hooks/useDatasetSearch.js","components/SearchRequest/SearchReqContext.js","components/Shared/Buttons/SaveDatasetButton.js","components/SearchRequest/SearchReqStyle.js","components/SearchRequest/SearchTableLoader.js","components/SearchRequest/SearchSummary.js","components/Shared/FilterInputSwitch.js","components/Shared/CustomSelect.js","components/SearchRequest/ToxicoSet/ToxicoSetFilter.js","hooks/useDataTable.js","components/SearchRequest/ToxicoSet/ToxicoSetTable.js","components/SearchRequest/ToxicoSet/ToxicoSetSearch.js","components/SearchRequest/XevaSet/XevaSetFilter.js","components/SearchRequest/XevaSet/XevaSetTable.js","components/SearchRequest/XevaSet/XevaSetSearch.js","components/SearchRequest/ClinicalGenomics/ClinGenSetFilter.js","components/SearchRequest/ClinicalGenomics/ClinGenSetTable.js","components/SearchRequest/ClinicalGenomics/ClinGenSetSearch.js","components/SearchRequest/RadioSet/RadioSetFilter.js","components/SearchRequest/RadioSet/RadioSetTable.js","components/SearchRequest/RadioSet/RadioSetSearch.js","components/Main/DatasetMain.js","components/Shared/CustomCheckbox.js","components/SearchRequest/PSet/PSetFilter.js","components/Shared/CustomInputText.js","components/SearchRequest/PSet/PSetRequestForm.js","components/SearchRequest/PSet/PSetTable.js","components/SearchRequest/PSet/PSetSearch.js","components/SearchRequest/SearchRequest.js","components/Shared/Buttons/DownloadButton.js","components/Shared/CustomMessages.js","hooks/useSingleDataset.js","components/SingleDataset/SingleDatasetStyle.js","components/SingleDataset/PSet/TabContents/DatasetTabContent.js","components/SingleDataset/PSet/TabContents/DisclaimerTabContent.js","components/SingleDataset/PSet/TabContents/AccompanyDataTabContent.js","components/SingleDataset/PSet/TabContents/RNATabContent.js","components/SingleDataset/PSet/TabContents/DNATabContent.js","components/SingleDataset/PSet/TabContents/PipelineTabContent.js","components/SingleDataset/PSet/TabContents/ReleaseNoteTabContent.js","components/SingleDataset/PSet/PSet.js","components/SingleDataset/ToxicoSet/TabContents/DatasetTabContent.js","components/SingleDataset/ToxicoSet/TabContents/ReleaseNoteTabContent.js","components/SingleDataset/ToxicoSet/ToxicoSet.js","components/SingleDataset/XevaSet/TabContents/DatasetTabContent.js","components/SingleDataset/XevaSet/PSetAccordion.js","components/SingleDataset/XevaSet/TabContents/AccompanyDataTabContent.js","components/SingleDataset/XevaSet/TabContents/RNATabContent.js","components/SingleDataset/XevaSet/TabContents/DNATabContent.js","components/SingleDataset/XevaSet/TabContents/ReleaseNoteTabContent.js","components/SingleDataset/XevaSet/XevaSet.js","components/SingleDataset/ClinicalGenomics/TabContents/DatasetTabContent.js","components/SingleDataset/ClinicalGenomics/TabContents/ReleaseNoteTabContent.js","components/SingleDataset/ClinicalGenomics/ClinicalGenomics.js","components/SingleDataset/RadioSet/TabContents/DatasetTabContent.js","components/SingleDataset/RadioSet/PSetAccordion.js","components/SingleDataset/RadioSet/TabContents/AccompanyDataTabContent.js","components/SingleDataset/RadioSet/TabContents/RNATabContent.js","components/SingleDataset/RadioSet/TabContents/DNATabContent.js","components/SingleDataset/RadioSet/TabContents/ReleaseNoteTabContent.js","components/SingleDataset/RadioSet/RadioSet.js","components/SingleDataset/SingleDataset.js","components/RequestStatus/RequestStatus.js","components/Stats/UpsetPlot.js","components/Stats/DatasetChart.js","components/Stats/Stats.js","components/Documentation/DocFunctionality/Overview.js","components/Documentation/DocFunctionality/Search.js","components/Documentation/DocFunctionality/Request.js","components/Documentation/DocFunctionality/UserProfile.js","components/Documentation/DocFunctionality/DataContribution.js","components/Documentation/DocAPI/AvailablePSets.js","components/Documentation/DocAPI/PSetMetadata.js","components/Documentation/DocAPI/StatisticsAPI.js","components/Documentation/Documentation.js","components/DataSubmission/MolecularDataForm.js","components/DataSubmission/DataSubmission.js","components/DataSubmission/SingleDataSubmission.js","components/Profile/subcomponents/UserInfo.js","components/Profile/subcomponents/UserDataset.js","components/DataSubmission/DataSubmissionList.js","components/Profile/Profile.js","components/Admin/Admin.js","components/Authentication/StyledAuthForm.js","components/Authentication/Authentication.js","components/Authentication/Reset.js","components/CanonicalPSets/CanonicalPSets.js","components/Shared/NotFound404.js","Routes/Router.js","App.js","components/serviceWorker.js","index.js"],"names":["GlobalStyles","createGlobalStyle","img","AuthContext","createContext","PathContext","useFindUser","useState","user","setUser","loading","setLoading","useEffect","a","axios","get","res","data","getSession","usePachyderm","online","setOnline","console","log","isOnline","checkOnline","PrivateRoute","Component","component","location","rest","useContext","render","props","to","pathname","redirect","state","from","StyledContainer","styled","div","RestrictedRoute","computedMatch","type","auth","authorized","setAuthorized","url","params","datatype","id1","id2","search","length","id","checkPrivate","color","height","width","AdminRoute","isAdmin","useAuth","history","useHistory","error","setError","setUserContext","push","submitUser","post","logoutUser","StyledHeader","header","NavigationWrapper","PachydermStatus","BurgerNav","dataTypes","withRouter","isPachydermOnline","path","setDatatype","split","filter","el","onLoginClick","event","preventDefault","onLogoutClick","getDatatype","datasetType","className","exact","src","alt","activeClassName","Fragment","label","onClick","username","isOpen","StyledFooter","Footer","href","Wrapper","HeaderGroup","DatasetHeaderGroup","Button","Row","Column","Item","Number","span","StyledBox","imgWidth","Main","DatatypeBox","title","disabled","text","PSetToolAccordion","toolAccordionTabs","this","items","map","item","key","name","commands","command","multiple","React","RNARefAccordion","rnaRefAccordionTabs","source","DNARefAccordion","exomeRefAccordionTabs","cosmic","exonTarget","TabContent","DatasetDialog","datasetAccordionTabs","dataset","versions","version","drugSensitivity","publication","p","link","citation","visible","onHide","style","minWidth","RNADialog","renderActiveOnly","rna","tool","ref","DNADialog","dna","CanonicalBox","alignSelf","datasetName","RequestStatusBox","dashboard","pending","inProcess","PopularDatasetBox","value","statsData","field","body","rowData","column","route","doi","disableBtn","YourOwnDataBox","Pharmacogenomics","setStatsData","rnaTool","dnaTool","rnaRef","dnaRef","formData","setFormData","setDashboard","datasetVisible","setDatasetVisible","rnaVisible","setRNAVisible","dnaVisible","setDNAVisible","api","fetch","json","form","versionCombo","i","fetchData","showDialog","hideDialog","useDatasetSearch","searchAll","setSeatchAll","parameters","all","Object","keys","forEach","Array","isArray","SearchReqContext","SaveDatasetButton","selectedDatasets","onSaveComplete","saveSelectedDatasets","userDataset","datasetId","_id","SearchReqWrapper","Filter","MainPanel","SearchReqPanel","Container","SearchTableLoader","StyledSearchSummary","SearchSummary","matchNum","FilterSet","FilterInputSwitch","checked","tooltip","onChange","FilterDropdown","hidden","selectOne","options","selected","dataTemplate","option","fontSize","margin","optionLabel","itemTemplate","placeholder","selectedItemTemplate","ToxicoSetFilter","context","datasetSelect","setDatasetSelect","ready","setReady","initialize","isRequest","CustomSelect","e","setParameters","prev","StyledButton","button","useDataTable","toolsRefTemplate","dataTypeTemplate","microarrayType","datatypeArray","nameColumnTemplate","target","nameColumnTemplateUserDataset","downloadTemplate","downloadLink","datasetDOI","anchor","document","createElement","setAttribute","display","appendChild","click","removeChild","filteredTemplate","filteredSensitivity","canonicalTemplate","drugSensitivityTemplate","find","radiationSensitivityTemplate","radiationSensitivity","privateTemplate","ToxicoSetTable","rows","first","start","end","totalRecords","setState","tsets","selection","onSelectionChange","updateDatasetSelection","paginator","resizableColumns","columnResizeMode","scrollable","scrollHeight","authenticated","selectionMode","textAlign","sortable","download","ToxicoSetSearch","toxicoSets","setToxicoSets","selectedTSets","setSelectedTSets","setIsRequest","status","private","initializeView","searchTSets","Provider","messages","severity","show","summary","detail","message","sticky","XevaSetFilter","XevaSetTable","xevasets","XevaSetSearch","xevaSets","setXevaSets","selectedXevaSets","setSelectedXevaSets","searchXevaSets","ClinGenSetFilter","ClinGenSetTable","datasets","ClinGenSetSearch","setDatasets","setSelectedDatasets","result","searchClinGenSets","RadioSetFilter","RadioSetTable","RadioSetSearch","searchRadioSet","DatasetMain","match","CheckBoxContainer","PSetCheckbox","inputId","PSetFilter","searchOptions","dataTypeSelect","setDataTypeSelect","miArraySelect","setMiArraySelect","drugSensSelect","setDrugSensSelect","genomeSelect","setGenomeSelect","rnaToolSelect","setRNAToolSelect","rnaRefSelect","setRNARefSelect","canonicalOnly","checkBoxes","setCheckBoxes","toolRefDisabled","setToolRefDisabled","dataTypeDisabled","setDataTypeDisabled","dataType","genome","concat","getDrugSensOptions","onDatasetSelection","datasetOptions","unavailable","undefined","defaultData","email","rnaRefOptions","found","defaultMolData","default","accompanyData","some","CustomCheckbox","marginLeft","fontWeight","Math","random","JSON","parse","stringify","shift","StyledInputText","InputText","CustomInputText","RequestForm","LoaderContainer","isSelected","reqParam","PSetRequestForm","readyToSubmit","setReadyToSubmit","request","test","getReadyToSubmit","submitRequest","versionInfo","reqData","constructor","dt","trackPromise","method","headers","resData","onRequestComplete","ok","SubmitRequestButton","usePromiseTracker","promiseInProgress","PSetTable","psets","selectedPSets","updatePSetSelection","PSetSearch","setPSets","setSelectedPSets","copy","searchPSets","showMessage","SearchRequst","DownloadButton","mode","icon","StyledMessages","Messages","CustomMessages","trigger","useRef","current","Header","StyledAccordion","Accordion","MessageContainer","sharelinkMessage","successMessage","errorMessage","useSingleDataset","setDataset","publicView","setPublicView","ownerView","setOwnerView","showPublishDialog","setShowPublishDialog","setShowMessage","setMessage","getDataset","shareToken","publishDataset","getShareLink","getHeader","getLabel","bioComputeObject","getGeneralInfoAccordion","activeIndex","rel","bioComputeDOI","dateCreated","createdBy","canonical","publishDialog","footer","modal","datasetMessage","TabContainer","TabHeader","h1","TabContentSection","DatasetTabContent","metadata","acknowledgement","DisclaimerTabContent","notes","dangerouslySetInnerHTML","__html","disclaimer","usagePolicy","citations","AccompanyDataTabContent","d","s","getType","RNATabContent","rawSeqDataRNA","x","accRNA","DNATabContent","rawSeqDataDNA","accDNA","PipelineContent","alignTop","PipelineTabContent","commitID","config","transform","image","input","cross","git","StyledReleaseNotes","StyledMetricDataGroup","AdditionalInformation","ReleaseNoteTabContent","getMetricDataText","count","metricDataGroup","renderRow","renderDataRow","molDataTableRow","getMolDataName","available","noUpdates","releaseNotes","cellLines","drugs","experiments","molData","additional","PSet","tabData","td","rawMicroarrayData","drugResponse","drugResponseData","ToxicoSet","models","patients","XevaSet","samples","getMetricDataRowText","ClinicalGenomics","radiationTypes","RadioSet","SingleDataset","useLocation","getData","generalInfo","RequestStatus","setData","onSubmit","dateTimeTemplate","dateTimeStr","Date","toLocaleString","dateStyle","timeStyle","Plot","createPlotlyComponent","Plotly","UpsetPlot","bars","layout","autosize","xaxis","showgrid","zeroline","showticklabels","range","yaxis","tickfont","size","t","b","l","r","showlegend","useResizeHandler","displayModeBar","points","DatasetChart","upsetData","setUpsetData","barData","setBarData","metricName","isPlotReady","setIsPlotReady","updateData","colors","j","setIndices","index","sets","fill","y","marker","line","hoverinfo","names","symbol","barDatasets","sort","orientation","metric","findIndex","htmlFor","Stats","chartData","isReady","setIsReady","Overview","Search","Request","UserProfile","StyledTable","table","DocHeader","DocSection","DataContribution","exampleFilesTable","files","file","downloadFile","blob","AvailablePSets","PSetMetadata","StatisticsAPI","Documentation","section","setDisplay","StyledMolecularDataForm","StyledFormContainer","StyledButtonField","molecularDataOptions","MolecularDataForm","molecularData","handleInputChange","handleReset","handleAddClick","handleRemoveClick","filename","repoURL","toolname","toolversion","refname","refURL","StyledDataSubmission","SubmissionPanel","datasetTypeOptions","dataSubmissionSuccessMessage","dataSubmissionErrorMessage","DataSubmission","info","setInfo","sampleAnnotation","setSampleAnnotation","drugAnnotation","setDrugAnnotation","rawTreatmentData","setRawTreatmentData","treatmentInfo","setTreatmentInfo","setMolecularData","showMsg","setShowMsg","submitMessage","setSubmitMessage","dataVersionOptions","setDataVersionOptions","yearOptions","currentYear","getFullYear","minYear","submit","submission","handleMolecularDataInput","list","handleMolecularDataReset","handleMolecularDataAdd","handleMolecularDataRemove","splice","isSubmitDisabled","StyledTableGroup","SingleDateSubmission","setSubmission","StyledUserInfo","UserInfo","setShow","password1","setPassword1","password2","setPassword2","btnResetDisabled","setBtnResetDisabled","resetPwd","StyledUserDataset","UserDataset","heading","btnLabel","handleBtnClick","btnDisabled","setBtnDisabled","dialogVisible","setDialogVisible","btnYesDisplayed","setBtnYesDisplayed","dialogFooter","DataSubmissionList","admin","markComplete","StyledProfile","Profile","savedDatasets","setSavedDatasets","inProcessDatasets","setInProcessDatasets","dataSubmissions","setDataSubmissions","complete","itme","submissions","removeFromSavedList","updated","includes","MenuContainer","Admin","setSelected","setSubmissions","updateCanonicalPSets","markCompleteSubmisson","StyledLoginForm","Authentication","action","findUser","onResetClick","StyledAuthForm","regex","localeCompare","disableSubmit","Reset","setEmail","password","token","NonCanonDiv","NonCannonTable","PSetContainer","CanonicalPSets","canonPSets","setCanonPSets","array","output","canonicals","pset","nonCanonicals","nonCanonTable","NotFound404","Router","SearchRequest","SingleDataSubmission","App","ReactGA","pageview","window","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.22865ba1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg3.2f7689f1.png\";","import { createGlobalStyle } from 'styled-components';\nimport img from './img/bg3.png'\n\nconst GlobalStyles = createGlobalStyle`\n    html, body{\n        height: 100%;\n        margin: 0;\n    }\n    #root {\n        margin-top: 0;\n        margin-left: 0;\n        margin-right: 0;\n        padding-top: 80px;\n        font-family: \"Raleway\", \"Segoe UI\", \"Roboto\", \"Oxygen\",\n            \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n            sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale; \n        background: linear-gradient(\n            to right top,\n            rgba(255, 255, 255, 0.5),\n            rgba(255, 255, 255, 0.5)\n            ),url(${img});\n        background-size: cover;\n        background-position: center;\n        background-repeat: no-repeat;\n    }\n    code {\n        font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace;\n    }\n    h1, h2, h3, h4, h5{\n        color: #3D405A;\n    }\n    .pageContent{\n        width: 95%;\n        margin-left: auto;\n        margin-right: auto;\n        min-height: 100vh;\n        padding-bottom: 200px;\n        color: #3D405A;\n        .page-title {\n            font-size: 25px;\n            font-weight: bold;\n            margin-bottom: 15px;\n        }\n    }\n`;\n\nexport default GlobalStyles;","import { createContext } from 'react';\n\nexport const AuthContext = createContext(null);\nexport const PathContext = createContext(null);","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n/**\n * Checks if a user has a valid cookie when they arrive on the site.\n */\nconst useFindUser = () => {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const getSession = async () => {\n            const res = await axios.get('/api/user/session');\n            setUser(res.data);\n            setLoading(false);\n        }\n        getSession();\n    }, []);\n\n    return {\n        user,\n        setUser,\n        loading\n    }\n}\n\nexport default useFindUser;","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst usePachyderm = () => {\n    const [online, setOnline] = useState(false);\n    \n    useEffect(() => {\n        const checkOnline = async () => {\n            console.log('checking Pachyderm status');\n            const res = await axios.get('/api/pachyderm/status');\n            setOnline(res.data.isOnline);\n            console.log(res.data.isOnline ? 'Pachyderm is online' : 'Pachyderm is offline');\n        }\n        checkOnline();\n    }, []);\n    \n    return({ online });\n}\n\nexport default usePachyderm;","import React, {useContext} from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from '../hooks/Context';\n\nconst PrivateRoute = ({component: Component, location, ...rest}) => {\n    const {user, loading} = useContext(AuthContext);\n    \n    if(loading){\n        return null;\n    }\n\n    return(\n        <Route \n            {...rest} \n            render={props => (\n                user ? \n                <Component {...props} />\n                :\n                <Redirect to={{pathname: rest.redirect, state:{ from: location }}} />\n            )} \n        />\n    ) \n}\n\nexport default PrivateRoute;","import React, {useState, useEffect, useContext} from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Loader from 'react-loader-spinner';\nimport { AuthContext } from '../hooks/Context'\n\nconst StyledContainer = styled.div`\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst RestrictedRoute = ({component: Component, location, computedMatch, type, ...rest}) => {\n    const auth = useContext(AuthContext);\n    const [authorized, setAuthorized] = useState(null);\n\n    useEffect(() => {\n        console.log(location);\n        console.log(type);\n        let url = '';\n        switch(type){\n            case 'dataset':\n                url = `/api/${computedMatch.params.datatype}` + \n                `/check_private/${computedMatch.params.id1}/${computedMatch.params.id2}` + \n                `${location.search.length > 0 ? location.search : ''}`;\n                break;\n            case 'dataSubmission':\n                url = `/api/user/dataset/submit/check_private/${computedMatch.params.id}`;\n                break;\n            default:\n                break;\n        }\n        const checkPrivate = async () => {\n            const res = await axios.get(url);\n            console.log(res.data);\n            setAuthorized(res.data.authorized);\n        }\n        checkPrivate();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    \n    if(authorized === null){\n        return(\n            <StyledContainer>\n                <h1>Loading...</h1>\n                <Loader type=\"ThreeDots\" color=\"#3D405A\" height={100} width={100} />\n            </StyledContainer>\n        );\n    }\n\n    if(!authorized && auth.user){\n        return(\n            <StyledContainer>\n                <h1>You do not have access to this page</h1>   \n            </StyledContainer>\n            \n        );\n    }\n\n    return(\n        <Route \n            {...rest} \n            render={props => (\n                authorized ? \n                <Component {...props} />\n                :\n                <Redirect to={{pathname: rest.redirect, state:{ from: location }}} />\n            )} \n        />\n    );\n}\n\nexport default RestrictedRoute;","import React, {useContext} from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from '../hooks/Context';\n\nconst AdminRoute = ({component: Component, location, ...rest}) => {\n    const {user, loading} = useContext(AuthContext);\n    \n    if(loading){\n        return null;\n    }\n\n    return(\n        <Route \n            {...rest} \n            render={(props) => (\n                user && user.isAdmin ?\n                <Component {...props} />\n                :\n                <Redirect to={{pathname: rest.redirect, state:{from: location}}} />\n            )} \n        />\n    ) \n}\n\nexport default AdminRoute;","import { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { AuthContext } from './Context';\n\n/**\n * Custom hook to handle authentication.\n * @returns \n */\nconst useAuth = () => {\n    const history = useHistory();\n    const { setUser } = useContext(AuthContext);\n    const [error, setError] = useState(false);\n\n    /**\n     * Gets a user and sets it in UserContext, then pushes to another page based on location value\n     * @param {*} location \n     */ \n    const setUserContext = async (location) => {\n        const res = await axios.get('/api/user/session');\n        console.log(res.data);\n        setUser(res.data);\n        if(res.data){\n            if(location.state && location.state.from){\n                history.push(location.state.from);\n            }else{\n                history.push('/app/profile');\n            }\n        }else{\n            console.log('authentication failed');\n            setError(true);\n        }\n    }\n\n    /**\n     * Submits user data to be logged in or registered.\n     * @param {*} user user data to be submitted (set in Authentication.js)\n     * @param {*} location \n     */\n    const submitUser = async (user, location) => {\n        try{\n            await axios.post('/api/user/submit', user);\n            await setUserContext(location);\n        }catch(err){\n            console.log(err);\n        }\n    }\n\n    const logoutUser = async () => {\n        try{\n            await axios.get(`/api/user/logout`); // call API to reset cookie token\n            setUser(null); // reset user in UserContext to null\n            history.push('/app/authentication'); // push to signin page\n        }catch(err){\n            console.log(err);\n        }\n    }\n\n    return {\n        submitUser,\n        logoutUser,\n        error\n    }\n}\n\nexport default useAuth;","import styled from 'styled-components';\n\nexport const StyledHeader = styled.header`\n    top: 0%;\n    width:100%;\n    background-color:rgb(255,255,255, 0.7);\n    height: 60px;\n    position: fixed;\n    z-index: 999;\n`;\n\nexport const NavigationWrapper = styled.div`\n    position: relative;\n    height: 100%;\n    width: 95%;\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    justify-content: space-between;\n    aling-items: center;\n\n    .left {\n        display: flex;\n        align-items: center;\n    }\n\n    .right {\n        position: relative;\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n        .button {\n            margin-right: 10px;\n        }\n        .loggedIn{\n            position: absolute;\n            right: 0;\n            top: 1px;\n            font-size: 11px;\n            color: red;\n        }\n    }\n\n    .logo {\n        height: 90%;\n        margin-right: 40px;\n        img {\n            max-width: 100%;\n            max-height: 100%;\n        }\n    }\n\n    .link {\n        margin-right: 20px;\n        padding-bottom: 2px;\n        color: rgb(61, 64, 90);\n        font-size: 12px;\n        font-weight: bold;\n        transition: .2s ease-out;\n        :hover {\n            text-decoration: none;\n            color: #555975;\n            border-bottom: 2px solid rgb(241, 144, 33);\n            transition: .2s ease-out;\n        }\n    }\n    .active-link{\n        text-decoration: none;\n        color: #555975;\n        border-bottom: 2px solid rgb(241, 144, 33);\n    }\n    \n    .home-button {\n        color:rgb(61, 64, 90);\n        font-weight:bold;\n    }\n    \n    .home-button:hover {\n        cursor:pointer;\n    }\n\n    @media only screen and (max-width: 900px) {\n        .link, .right {\n            display: none;\n        }\n    }\n\n`;\n\nexport const PachydermStatus = styled.div`\n    display: flex;\n    align-items: center;\n    font-weight: bold;\n    color: ${props => props.isOnline ? '#0ea353' : '#bb2003'};\n    .icon {\n        font-size: 20px;\n    }\n    .text {\n        font-size: 11px;\n    }\n`;\n\nexport const BurgerNav = styled.div`\n    position: fixed;\n    right: 0;\n    /*react-burger-nav style*/\n\n    /* Position and sizing of burger button */\n    .bm-burger-button {\n        position: fixed;\n        width: 36px;\n        height: 30px;\n        right: 36px;\n        top: 15px;\n    }\n\n    /* Color/shape of burger icon bars */\n    .bm-burger-bars {\n        background: #3D405A;\n    }\n\n    /* Color/shape of burger icon bars on hover*/\n    .bm-burger-bars-hover {\n        background: #555975;\n    }\n\n    /* Position and sizing of clickable cross button */\n    .bm-cross-button {\n        height: 24px;\n        width: 24px;\n    }\n\n    /* Color/shape of close button cross */\n    .bm-cross {\n        background: #3D405A;\n    }\n\n    /*\n    Sidebar wrapper styles\n    Note: Beware of modifying this element as it can break the animations - you should not need to touch it in most cases\n    */\n    .bm-menu-wrap {\n        position: fixed;\n        height: 100%;\n    }\n\n    /* General sidebar styles */\n    .bm-menu {\n        background: rgba(255, 255, 255, 0.7);\n        padding: 30px 10px 20px 10px;\n        font-size: 16px;\n        nav {\n            display: flex;\n            flex-direction: column;\n            align-items: flex-start;\n            a {\n                margin-bottom: 15px;\n                color: rgb(61, 64, 90);\n            }\n            button {\n                text-align: center;\n            }\n            .status {\n                display: flex;\n            }\n        }\n    }\n\n    /* Morph shape necessary with bubble or elastic */\n    .bm-morph-shape {\n        fill: #373a47;\n    }\n\n    /* Wrapper for item list */\n    .bm-item-list {\n        color: #b8b7ad;\n        padding: 0.8em;\n    }\n\n    /* Individual item */\n    .bm-item {\n        margin-bottom: 20px;\n        text-align: left;\n    }\n\n    /* Styling of overlay */\n    .bm-overlay {\n        background: rgba(61, 64, 90, 0.5);\n    }\n\n    @media only screen and (min-width: 900px) {\n        display: none;\n        .bm-burger-button {\n            display: none;\n        }\n\n        .bm-menu {\n            display: none;\n        }\n\n        .bm-cross {\n            display: none;\n        }\n    }\n`;","export const dataTypes = {\n    pharmacogenomics: 'pset',\n    toxicogenomics: 'toxicoset',\n    xenographic: 'xevaset',\n    clinicalgenomics: 'clinicalgenomics',\n    radiogenomics: 'radioset',\n    radiomics: 'radiomics'\n}","import React, { useEffect, useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {Button} from 'primereact/button';\n\nimport { PathContext, AuthContext } from '../../hooks/Context';\nimport useAuth from '../../hooks/useAuth';\nimport { StyledHeader, NavigationWrapper, BurgerNav, PachydermStatus } from './StyledNavigation';\nimport { slide as Menu } from 'react-burger-menu';\nimport {withRouter} from 'react-router';\nimport {dataTypes} from '../Shared/Enums';\n\nconst Navigation = (props) => {\n    const { location, history, isPachydermOnline } = props;\n    const path = useContext(PathContext);\n    const auth = useContext(AuthContext);\n    const { logoutUser } = useAuth();\n\n    useEffect(() => {\n        if(location.pathname !== '/' && path.datatype.length === 0){\n            path.setDatatype(location.pathname.split('/').filter((el) =>(el.length))[0]);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const onLoginClick = (event) => {\n        event.preventDefault();\n        history.push({pathname: '/app/authentication', state:{path: location.pathname}});\n    }\n\n    const onLogoutClick = async (event) => {\n        event.preventDefault();\n        await logoutUser();            \n    }\n\n    const getDatatype = (datatype) => {\n        switch(datatype){\n            case dataTypes.pharmacogenomics:\n                return 'Pharmacogenomics';\n            case dataTypes.toxicogenomics:\n                return 'Toxicogenomics';\n            case dataTypes.xenographic:\n                return 'Xenographic Pharmacogenomics';\n            case dataTypes.clinicalgenomics:\n                return 'Clinical Genomics';\n            case dataTypes.radiogenomics:\n                return 'Radiogenomics';\n            default:\n                return '';\n        }\n    }\n\n    return(\n        <StyledHeader>\n            <NavigationWrapper datasetType={path.datatype}>\n                <div className='left'>\n                    <div className='logo'>\n                        <NavLink exact to='/'>\n                            <img src={process.env.PUBLIC_URL + \"/images/trumpet-orcestra.png\"} alt='' />\n                        </NavLink>\n                    </div>\n                    <NavLink exact to={`/`} className='link' activeClassName='active-link'>Home</NavLink>\n                    {\n                        path.datatype.length > 0 && \n                        <React.Fragment>\n                            <NavLink exact to={`/${path.datatype}`} className='link' activeClassName='active-link'>{getDatatype(path.datatype)}</NavLink>\n                            {\n                                path.datatype === dataTypes.pharmacogenomics && \n                                <NavLink exact to={`/${path.datatype}/search`} className='link' activeClassName='active-link'>Search and Request</NavLink>\n                            }\n                            {\n                                path.datatype === dataTypes.pharmacogenomics && \n                                <NavLink exact to={`/${path.datatype}/status`} className='link' activeClassName='active-link'>Request Status</NavLink>\n                            }\n                            {\n                                path.datatype === dataTypes.pharmacogenomics && \n                                <NavLink exact to={`/${path.datatype}/stats`} className='link' activeClassName='active-link'>Statistics</NavLink>\n                            } \n                        </React.Fragment>\n                    }\n                    <NavLink exact to={`/app/documentation/overview`} className='link' activeClassName='active-link'>Documentation</NavLink>\n                </div>\n                <div className='right'>\n                    {\n                        auth.user &&\n                        <NavLink exact to={`/app/data_submission`} className='link' activeClassName='active-link'>Data Submission</NavLink>\n                    }\n                    { \n                        auth.user && \n                        <NavLink exact to=\"/app/profile\" className='link' activeClassName='active-link'>Profile</NavLink>\n                    }\n                    <Button \n                        className='button' \n                        label={auth.user ? 'Logout' : 'Login/Register'} \n                        onClick={auth.user ? onLogoutClick : onLoginClick}\n                    /> \n                    <PachydermStatus className='status' isOnline={isPachydermOnline}>\n                        <div className='icon'><i className={`pi ${ isPachydermOnline ? 'pi-check' : 'pi-ban'}`}></i></div>\n                        <div className='text'>Pachyderm is <br />{isPachydermOnline ? 'online' : 'offline'}</div>\n                    </PachydermStatus> \n                    {\n                        auth.user ? <div className='loggedIn'>{`Logged in as: ${auth.user.username}`}</div> : ''\n                    }  \n                </div> \n            </NavigationWrapper>\n            <BurgerNav>\n                <Menu width={ 200 } isOpen={true} > \n                    {\n                        path.datatype.length > 0 &&\n                        <React.Fragment>\n                            <NavLink exact to={`/`} activeClassName='active-link'>Home</NavLink>\n                            <NavLink exact to={`/${path.datatype}`} activeClassName='active-link'>{getDatatype(path.datatype)}</NavLink>\n                            <NavLink exact to={`/${path.datatype}/search`} activeClassName='active-link'>Search and Request</NavLink>\n                            <NavLink exact to={`/${path.datatype}/status`} activeClassName='active-link'>Request Status</NavLink>\n                            <NavLink exact to={`/${path.datatype}/documentation/overview`} activeClassName='active-link'>Documentation</NavLink>\n                        </React.Fragment>\n                    }\n                    { auth.user && <NavLink exact to={`/app/data_submission`} className='link' activeClassName='active-link'>Data Submission</NavLink>}\n                    { auth.user && <NavLink exact to=\"/app/profile\" activeClassName='active-link'>Profile</NavLink>}\n                    <Button \n                        className='button' \n                        label={auth.user ? 'Logout' : 'Login/Register'} \n                        onClick={auth.user ? onLogoutClick : onLoginClick}\n                    />\n                    <PachydermStatus className='status' isOnline={isPachydermOnline}>\n                        <div className='icon'><i className={`pi ${ isPachydermOnline ? 'pi-check' : 'pi-ban'}`}></i></div>\n                        <div className='text'>Pachyderm is <br />{isPachydermOnline ? 'online' : 'offline'}</div>\n                    </PachydermStatus> \n                </Menu>\n            </BurgerNav> \n        </StyledHeader>\n    );\n}\n\nexport default withRouter(Navigation);","import React, {useContext} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { PathContext } from '../../hooks/Context';\nimport styled from 'styled-components';\nimport {dataTypes} from '../Shared/Enums';\n\nconst StyledFooter = styled.div`\n    position: relative;\n    clear: both;\n    bottom: 0%;\n    width: 100%;\n    background-color: rgb(255,255,255, 0.7);\n    height: 150px;\n    font-size: calc(0.7em + 0.2vw);\n    padding: 10px 0;\n    display: flex;\n    align-items: center;\n    justify-content: flex-;\n\n    .footerContainer {\n        width: 95%;\n        margin-left: auto;\n        margin-right: auto;\n        display:flex;\n        font-size: 12px;\n    }\n    \n    .footerLinks {\n        width:200px;\n        a, div {\n            display: block;\n            margin-bottom: 5px;\n            color: #3D405A;\n        }\n        a:hover {\n            color: #555975;\n        }\n    }\n\n    .footerMenu {\n        flex-grow: 1;\n        text-align: left;\n    }\n    \n    .footerSupport{\n        flex-grow: 1;\n        text-align: left;\n    }\n    \n    .footerContact {\n        flex-grow: 1;\n        text-align: left;\n    }\n    \n    .contactInfo{\n        font-size: calc(0.7em + 0.2vw);\n        line-height: 20px;\n        margin-top: -5px;\n    }\n`\n\nconst Footer = () => {\n\n    const path = useContext(PathContext);\n\n    return(\n        <StyledFooter>\n            <div className='footerContainer'>\n                <div className=\"footerMenu footerLinks\">\n                    <h3>Menu</h3>\n                    <NavLink exact to=\"/\" onClick={() => {path.setDatatype('')}}>Home</NavLink>\n                    {\n                        path.datatype.length === 0 ? \n                        <React.Fragment>\n                            <NavLink exact to={`/${dataTypes.pharmacogenomics}`} onClick={() => {path.setDatatype(dataTypes.pharmacogenomics)}}>Pharmacogenomics Data</NavLink>\n                            <NavLink exact to={`/${dataTypes.toxicogenomics}`} onClick={() => {path.setDatatype(dataTypes.toxicogenomics)}}>Toxicogenomics Data</NavLink>\n                            <NavLink exact to={`/${dataTypes.xenographic}`} onClick={() => {path.setDatatype(dataTypes.xenographic)}}>Xenographic Pharmacogenomics Data</NavLink>\n                            <div>Clinical Genomics Data (Coming soon)</div>\n                            <div>Radiogenomics Data (Coming soon)</div>\n                        </React.Fragment>\n                        :\n                        <React.Fragment>\n                            {/* <NavLink exact to={`/${path.datatype}/canonical`} >Canonical PSets</NavLink> */}\n                            <NavLink exact to={`/${path.datatype}/search`} >Search and Request</NavLink>\n                            {/* <NavLink exact to={`/${path.datatype}/status`} >Request Status</NavLink> */}\n                            {/* <NavLink exact to={`/${path.datatype}/stats`} >Statistics</NavLink> */}\n                        </React.Fragment>\n                    }\n                </div>\n                <div className=\"footerSupport footerLinks\">\n                    <h3>Support</h3>\n                    {\n                        path.datatype.length > 0 && \n                        <React.Fragment>\n                            <NavLink exact to={`/${path.datatype}/documentation/overview`} >Documentation</NavLink>\n                            <NavLink exact to={`/${path.datatype}/documentation/datacontribution`} >Contributing your data</NavLink>\n                        </React.Fragment>\n                    }\n                    <a href=\"https://github.com/bhklab\">GitHub</a>\n                    <a href=\"https://bhklab.ca/\">BHKLab</a>\n                    <div>support@orcestra.ca</div>\n                </div>\n                <div className=\"footerContact\">\n                    <h3>BHKLab</h3>\n                    <div className='contactInfo'>\n                        The MaRS center\n                        <br />\n                        101 College St, Toronto ON\n                        {' '}\n                        <br />\n                        TMDT RM 11-310\n                    </div>\n                </div>\n            </div>\n        </StyledFooter>\n    );\n} \n\nexport default Footer;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 1700px;\n    color:#3D405A;\n    min-height: 100vh;\n    padding-bottom: 200px;\n`\n\nexport const HeaderGroup = styled.div`\n    display: flex;\n    flex-direction: column;\n    h1 {\n        margin: auto;\n        text-align: left;\n        font-size: 100px;\n        color: #3D405A;\n    }\n    h2 {\n        margin: auto;\n        text-align: left;\n        font-weight: bold;\n        color: #3D405A;\n    }\n\n    @media only screen and (max-width: 700px) {\n        h1 {\n            font-size: 60px\n        }\n        h2 {\n            font-size: 24px;\n            text-align: center;\n        }\n    }\n`\n\nexport const DatasetHeaderGroup = styled.div`\n    display: flex;\n    flex-direction: column;\n    h1 {\n        margin: auto;\n        text-align: left;\n        font-size: 50px;\n        color: #3D405A;\n    }\n    h2 {\n        margin: auto;\n        text-align:left;\n        font-weight: bold;\n        color: #3D405A;\n    }\n`\n\nexport const Button = styled.a`\n    background-color: #3D405A;\n    border-radius: 5px;\n    border: none;\n    padding: 10px 10px;\n    color: white;\n    text-align: center;\n    text-decoration: none;\n    font-size: 14px;\n    font-weight: bold;\n    cursor: pointer;\n    margin-top: 30px;\n\n    :hover {\n        background-color: #555975;\n        color: rgb(241, 144, 33);\n    }\n`\n\nexport const Row = styled.div`\n    margin-top: 30px;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n`\n\nexport const Column = styled.div`\n    flex: 28%;\n    max-width: 28%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n\n    @media only screen and (max-width: 1000px) {\n        flex: 50%;\n        max-width: 100%;\n    }\n`\n\nexport const Item = styled.div`\n    background-color:rgb(255, 255, 255,0.5);\n    margin: 0px 10px 10px 10px;\n    padding: 0px 20px 30px 20px;\n    border-radius: 10px;\n    width: 95%;\n    min-height:200px;\n    min-width: 300px;\n\n    .content {\n        width: 100%;\n        margin-left: auto;\n        margin-right: auto;\n        p {\n            line-height: 1.5;\n        }\n    }\n\n    .line {\n        margin-bottom: 10px;\n        font-size: 16px;\n        height: 20%;\n        display: flex;\n        align-items: center;\n        span {\n            margin-left: 5px;\n        }\n    }\n\n    .link {\n        margin-top: 50px;\n    }\n`\n\nexport const Number = styled.span`\n    font-size: 70px;\n    font-weight: bold;\n    font-family: Arial, Helvetica, sans-serif;\n    width: 35%;\n    text-align: center;\n    button {\n        font-size: 75px;\n        font-weight: bold;\n        font-family: Arial, Helvetica, sans-serif;\n        color: #3D405A;\n        border: none;\n        background: none;\n        outline: none;\n        cursor: pointer;\n    }\n    button:hover {\n        color: #555975;\n    }\n`\n\n","import React, {useContext, useEffect} from 'react';\nimport { PathContext } from '../../hooks/Context';\nimport * as MainStyle from './MainStyle';\nimport styled from 'styled-components';\nimport {dataTypes} from '../Shared/Enums';\n\nconst StyledBox = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color:rgb(255, 255, 255,0.5);\n    margin: 0px 10px 10px 10px;\n    padding: 10px 30px 30px 30px;\n    border-radius: 10px;\n    width: 30%;\n    height: 250px;\n    min-width: 200px;\n    max-width: 370px;\n\n    .header {\n        height: 25%;\n        width: 90%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        text-align: center;\n        font-size: 20px;\n        font-weight: bold;\n    }\n\n    button {\n        height: 75%;\n        border: none;\n        outline: none;\n        cursor: pointer;\n        background: none;\n\n        :hover .hover-cover {\n            opacity: 0.7;\n        }\n\n        :hover .hover-text {\n            display: block;\n        }\n    }\n\n    .btn-content {\n        position relative;\n        display: flex;\n        justify-content center;\n        align-items: center;\n    }\n\n    img {\n        width: ${props => (props.imgWidth)};\n        min-width: 130px;\n        margin: 10px;\n    }\n\n    .hover-cover {\n        position absolute;\n        width: 100%;\n        height: 100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background-color: #ffffff;\n        border-radius: 5px;\n        opacity: 0;\n    }\n\n    .hover-text {\n        display: none;\n        position absolute;\n        font-size: 45px;\n        font-weight: bold;\n        color: #3D405A;\n    }\n\n    @media only screen and (max-width: 1000px) {\n        width: 60%;\n        min-width: 360px;\n    }\n`;\n\n\nconst Main = (props) => {\n\n    const path = useContext(PathContext);\n    const { history } = props;\n\n    useEffect(() => {\n        path.setDatatype('');\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const DatatypeBox = (props) => (\n            <StyledBox imgWidth={props.imgWidth}>\n                <div className='header'>{props.title}</div>\n                <button \n                    onClick={() => {\n                        path.setDatatype(props.datatype);\n                        history.push({pathname: `/${props.datatype}`});\n                    }}\n                    disabled={props.disabled}\n                >\n                    <div className='btn-content'>\n                        <img src={`/images/icons/${props.datatype}.png`} alt='icon'/>\n                        <div className='hover-cover'></div>\n                        <div className='hover-text'>{props.text}</div>\n                    </div>\n                </button>\n            </StyledBox>\n    );\n\n    return (\n        <MainStyle.Wrapper>\n            <MainStyle.HeaderGroup>\n                <h1>ORCESTRA</h1>   \n                <h2>Orchestration platform for reproducing multimodal data</h2>\n            </MainStyle.HeaderGroup>\n            <MainStyle.Row>\n                <DatatypeBox title='Pharmacogenomics Data' datatype={dataTypes.pharmacogenomics} text='GO' imgWidth='45%' />\n                <DatatypeBox title='Toxicogenomics Data' datatype={dataTypes.toxicogenomics} text='GO' imgWidth='70%'/>\n                <DatatypeBox title='Xenographic Pharmacogenomics Data' datatype={dataTypes.xenographic} text='GO' imgWidth='70%'/>\n            </MainStyle.Row>  \n            <MainStyle.Row>\n                <DatatypeBox title='Radiogenomics Data' datatype={dataTypes.radiogenomics} text='GO' imgWidth='45%'/>\n                <DatatypeBox title='Clinical Genomics Data' datatype={dataTypes.clinicalgenomics} text='GO'  imgWidth='45%'/>\n                <DatatypeBox title='Radiomics Data' datatype={dataTypes.radiomics} disabled={true} text='Coming Soon'  imgWidth='45%'/>\n            </MainStyle.Row>\n        </MainStyle.Wrapper>\n    );\n    \n}\n\nexport default Main;","import React from 'react';\nimport {Accordion,AccordionTab} from 'primereact/accordion';\n\nclass PSetToolAccordion extends React.Component {\n\n    render(){\n        const toolAccordionTabs = this.props.items.map((item) => \n            <AccordionTab key={item.name} header={item.name}>\n                {item.commands.length ? \n                    <ul>\n                        {item.commands.map((command) => \n                            <li key={command}>\n                                {command}\n                            </li>    \n                        )}\n                    </ul>\n                    :\n                    \"Not Available\"\n                }\n                   \n            </AccordionTab>\n        );\n        \n        return(\n            this.props.items.length ? \n                <Accordion multiple={true}>\n                    {toolAccordionTabs}\n                </Accordion>\n                :\n                <div className='subContent'>Not Available</div>\n        );\n    }\n\n}\n\nclass RNARefAccordion extends React.Component {\n    \n    render(){\n        const rnaRefAccordionTabs = this.props.items.map((item) => \n            <AccordionTab key={item.name} header={item.name}>\n                <ul>\n                    <li className='listItem-1'>\n                        <div>{item.name.length ? item.name : 'Currently not available'}</div>\n                        <div>{item.source.length ? <a href={item.source}>{item.source}</a> : 'Currently not available'}</div>\n                    </li>                    \n                </ul> \n            </AccordionTab>\n        );\n    \n        return(\n            this.props.items.length ? \n                <Accordion multiple={true}>\n                    {rnaRefAccordionTabs}\n                </Accordion>\n                :\n                <div className='subContent'>Not Available</div>\n        );\n    }\n    \n}\n\nclass DNARefAccordion extends React.Component {\n\n    render(){\n        const exomeRefAccordionTabs = this.props.items.map((item) => \n            <AccordionTab key={item.name} header={item.name}>\n                <ul>\n                    <li className='listItem-1'>\n                        <div>{item.name.length ? item.name: 'Currently not available'}</div>\n                        <div>{item.source.length ? <a href={item.source}>{item.source}</a> : 'Currently not available'}</div>\n                    </li>\n                    <li className='listItem-1'>\n                        <div>{item.cosmic.name}</div>\n                        <div><a href={item.cosmic.source}>{item.cosmic.source}</a> </div>\n                    </li>\n                    <li className='listItem-1'>\n                        <div>{item.exonTarget.name}</div>\n                        <div><a href={item.exonTarget.source}>{item.exonTarget.source}</a></div>\n                    </li>                       \n                </ul> \n            </AccordionTab>\n        );\n    \n        return(\n            this.props.items.length ? \n                <Accordion multiple={true}>\n                    {exomeRefAccordionTabs}\n                </Accordion>\n                :\n                <div className='subContent'>Not Available</div>\n        );\n    }\n\n}\n\nexport {\n    PSetToolAccordion,\n    RNARefAccordion,\n    DNARefAccordion\n}\n","import React from 'react';\nimport {Dialog} from 'primereact/dialog';\nimport {TabView,TabPanel} from 'primereact/tabview';\nimport {Accordion,AccordionTab} from 'primereact/accordion';\nimport styled from 'styled-components';\nimport {PSetToolAccordion, RNARefAccordion, DNARefAccordion} from '../../SingleDataset/PSet/PSetAccordion';\n\nconst TabContent = styled.div`\n    max-width: 700px;\n    max-height: 350px;\n    word-wrap: break-word;\n    overflow-y: scroll;\n`\n\nconst DatasetDialog = (props) => {\n    \n    const datasetAccordionTabs = props.dataset.map((item) => \n        <TabPanel key={item.label} header={item.label}>\n            <TabContent>\n                <Accordion multiple={true}>\n                    {item.versions.map((version) => \n                        <AccordionTab key={version.version} header={version.version}>\n                            <div className='tabContentSection'>\n                                <h3>Drug Sensitivity</h3>\n                                <h4 className='subContent'>Version: {version.drugSensitivity.version}</h4>\n                                <h4 className='subContent'>Source: {version.drugSensitivity.source ? <a href={version.drugSensitivity.source}>{version.drugSensitivity.source}</a> : 'Not available'}</h4>\n                            </div>\n                            <div className='tabContentSection'>\n                                <h3>Publication: </h3>\n                                <ul>\n                                    <div>    \n                                        {version.publication.length ? \n                                            version.publication.map((p) => \n                                                <li key={p.link} className='pubList'>\n                                                    <div className='subContent'>{p.citation}</div>\n                                                    <br />\n                                                    <div className='subContent'><a href={p.link}>{p.link}</a></div>\n                                                </li>\n                                            )\n                                            :\n                                            <div className=\"subContent\">\n                                                Not available.\n                                            </div>\n                                        }  \n                                    </div>\n                                </ul> \n                            </div>\n                        </AccordionTab>\n                    )}     \n                </Accordion>\n            </TabContent> \n        </TabPanel>\n    );\n    \n    return(\n        <Dialog header=\"Dataset Overview\" visible={props.visible} onHide={props.onHide} style={{minWidth: '50vw'}} >\n            <TabView>\n                {datasetAccordionTabs}\n            </TabView>\n        </Dialog>\n    )\n}\n\nconst RNADialog = (props) => {\n    return(\n        <Dialog header=\"RNA Pipeline Overview\" visible={props.visible} onHide={props.onHide} style={{minWidth: '50vw'}} >\n            <TabView renderActiveOnly={false}>\n                <TabPanel key='rnaTools' header=\"RNA Tools\">\n                    <h3>Available RNA Pipeline Tools</h3>\n                    <PSetToolAccordion items={props.rna.tool} />\n                </TabPanel>\n                <TabPanel key='rnaRef' header=\"RNA References\">\n                    <h3>Available RNA Transcriptome References</h3>\n                    <RNARefAccordion items={props.rna.ref} />\n                </TabPanel>\n            </TabView>\n        </Dialog>\n    )\n}\n\nconst DNADialog = (props) => {\n    return(\n        <Dialog header=\"DNA Sequence Alignment Overview\" visible={props.visible} onHide={props.onHide} style={{minWidth: '50vw'}} >\n            <TabView renderActiveOnly={false}>\n                <TabPanel key='dnaTools' header=\"DNA Tools\">\n                    <h3>Available DNA Pipeline Tools</h3>\n                    <PSetToolAccordion items={props.dna.tool} />\n                </TabPanel>\n                <TabPanel key='dnaRef' header=\"DNA References\">\n                    <h3>Available DNA Exome References</h3>\n                    <DNARefAccordion items={props.dna.ref} />\n                </TabPanel>\n            </TabView>\n        </Dialog>\n    )\n}\n\nexport {\n    DatasetDialog,\n    RNADialog,\n    DNADialog\n}","import React from 'react';\nimport * as MainStyle from '../MainStyle';\n\nconst CanonicalBox = (props) => (\n    <MainStyle.Item style={{ alignSelf: 'flex-start'}}>\n        <h3>{`Canonical ${props.datasetName}s`}</h3>\n        <div className='content'>\n            <div>{`The latest version of ${props.datasetName}s created by BHK Lab.`}</div>\n            <div className='link'>\n                <MainStyle.Button href={`/${props.datasetType}/canonical`}>{`View Canonical ${props.datasetName}s`}</MainStyle.Button>\n            </div>\n        </div>\n    </MainStyle.Item>\n);\n\nexport default CanonicalBox;","import React from 'react';\nimport * as MainStyle from '../MainStyle';\n\nconst RequestStatusBox = (props) => (\n    <MainStyle.Item style={{ alignSelf: 'flex-start'}}>\n        <h3>{`View ${props.datasetName} Request Status`}</h3>\n        <div className='content'>\n            <div>{`ORCESTRA is processing following ${props.datasetName} requests:`}</div>\n            <div className='line'>\n                <MainStyle.Number>{props.dashboard.pending}</MainStyle.Number> \n                <span>Requests in queue.</span>\n            </div>\n            <div className='line'>\n                <MainStyle.Number>{props.dashboard.inProcess}</MainStyle.Number> \n                <span >Requests in process.</span>\n            </div>\n            <div className='link'>\n                <MainStyle.Button href={`/${props.datasetType}/status`}>View Request Status</MainStyle.Button>\n            </div>\n        </div>\n    </MainStyle.Item>\n);\n\nexport default RequestStatusBox;","import React from 'react';\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport { Link } from 'react-router-dom';\nimport * as MainStyle from '../MainStyle';\nimport {dataTypes} from '../../Shared/Enums';\n\nconst PopularDatasetBox = (props) => {\n    \n    const nameColumnTemplate = (rowData, column) => {\n        let route = `/${props.datasetType}/${rowData.doi}`;\n        return(\n            <Link to={route} >{rowData.name}</Link>\n        );\n    };\n\n    return(\n        <MainStyle.Item>\n            <h3>{`${props.datasetName === dataTypes.pharmacogenomics ? 'Top 5 Popular' : 'Popular'} ${props.datasetName}s`}</h3>\n            <div className='content'>\n                <DataTable value={props.statsData} >\n                    <Column className='textField' field='download' header='Download' />\n                    <Column className='textField' field='name' header='Name' body={nameColumnTemplate}/>\n                </DataTable>\n                {\n                    !props.disableBtn &&\n                    <div className='link'>\n                        <MainStyle.Button href={`/${props.datasetType}/stats`}>View Statistics</MainStyle.Button>\n                        </div>\n                }\n            </div>\n        </MainStyle.Item> \n    );\n};\n\nexport default PopularDatasetBox;","import React from 'react';\nimport * as MainStyle from '../MainStyle';\n\nconst YourOwnDataBox = (props) => (\n    <MainStyle.Item>\n        <h3>{`Generate ${props.datasetName}s with Your Data`}</h3>\n        <div className='content'>\n            <p>\n                <b>{`You can generate ${props.datasetName}s using your own datasets.`}</b> <br /> \n                For more information, please read about <a href={`/app/documentation/datacontribution`}>contributing your data</a>.\n            </p>    \n        </div>\n    </MainStyle.Item> \n);\n\nexport default YourOwnDataBox;","import React, {useState, useEffect} from 'react';\nimport {DatasetDialog, RNADialog, DNADialog} from '../MainDialog/PharmacogenomicsDialog';\nimport * as MainStyle from '../MainStyle';\nimport CanonicalBox from '../MainBoxes/CanonicalBox';\nimport RequestStatusBox from '../MainBoxes/RequestStatusBox';\nimport PopularDatasetBox from '../MainBoxes/PopularDatasetBox';\nimport YourOwnDataBox from '../MainBoxes/YourOwnDataBox';\nimport {dataTypes} from '../../Shared/Enums';\n\nconst Pharmacogenomics = () => {\n    \n    const [statsData, setStatsData] = useState([]);\n    const [formData, setFormData] = useState({\n        dataset: [],\n        rnaTool: [],\n        dnaTool: [],\n        rnaRef: [],\n        dnaRef: []\n    });\n    const [dashboard, setDashboard] = useState({\n        pending: 0,\n        inProcess: 0\n    });\n    const [datasetVisible, setDatasetVisible] = useState(false);\n    const [rnaVisible, setRNAVisible] = useState(false);\n    const [dnaVisible, setDNAVisible] = useState(false);\n\n    useEffect(() => {\n        const fetchData = async (api) => {\n            const res = await fetch(api);\n            const json = await res.json();\n            const dataset = json.form.dataset; \n            let versionCombo = 0\n            for(let i = 0; i < dataset.length; i++){\n                versionCombo += dataset[i].versions.length\n            }\n            setStatsData(json.dataset);\n            setFormData({...json.form, versionCombo: versionCombo});\n            setDashboard(json.dashboard);\n        }\n        fetchData(`/api/${dataTypes.pharmacogenomics}/landing/data`);\n    }, []);\n\n    const showDialog = (type) => {\n        switch(type){\n            case 'dataset':\n                setDatasetVisible(true);\n                break;\n            case 'rna':\n                setRNAVisible(true);\n                break;\n            case 'dna':\n                setDNAVisible(true);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const hideDialog = (type) => {\n        switch(type){\n            case 'dataset':\n                setDatasetVisible(false);\n                break;\n            case 'rna':\n                setRNAVisible(false);\n                break;\n            case 'dna':\n                setDNAVisible(false);\n                break;\n            default:\n                break;\n        }\n    }\n\n    return (\n        <MainStyle.Wrapper>\n            <MainStyle.DatasetHeaderGroup>\n                <h1>ORCESTRA for Pharmacogenomics</h1>   \n                <h2>Explore and request multimodal Pharmacogenomic Datasets (PSets)</h2>\n            </MainStyle.DatasetHeaderGroup>\n            <MainStyle.Row>\n                <MainStyle.Column>\n                    <MainStyle.Item>\n                        <h3>Search and Request PSets</h3>\n                        <div className='content'>\n                            <div>Design your own PSet using:</div>\n                            <div className='line'>\n                                <MainStyle.Number>\n                                    <button onClick={() => {showDialog('dataset')}}>{formData.versionCombo}</button>\n                                </MainStyle.Number> \n                                <span>Dataset/Drug sensitivity combinations</span>\n                            </div>\n                            <div className='line'>\n                                <MainStyle.Number>\n                                    <button onClick={() => {showDialog('rna')}}>{formData.rnaTool.length}</button>\n                                </MainStyle.Number> \n                                <span>RNA pipelines.</span>\n                            </div>\n                            <div className='link'>\n                                <MainStyle.Button href={`/${dataTypes.pharmacogenomics}/search`}>Search and Request</MainStyle.Button>\n                            </div>\n                        </div>\n                    </MainStyle.Item>\n                </MainStyle.Column>\n                <MainStyle.Column>\n                    <CanonicalBox datasetName='PSet' datasetType={dataTypes.pharmacogenomics} />\n                    <RequestStatusBox datasetName='PSet' datasetType={dataTypes.pharmacogenomics} dashboard={dashboard}/>\n                </MainStyle.Column> \n                <MainStyle.Column>\n                    <PopularDatasetBox datasetName='PSet' datasetType={dataTypes.pharmacogenomics} statsData={statsData} />\n                    <YourOwnDataBox datasetName='PSet' datasetType={dataTypes.pharmacogenomics} />\n                </MainStyle.Column>    \n            </MainStyle.Row> \n            <DatasetDialog visible={datasetVisible} onHide={() => {hideDialog('dataset')}} dataset={formData.dataset} />\n            <RNADialog visible={rnaVisible} onHide={() => {hideDialog('rna')}} rna={{tool: formData.rnaTool, ref: formData.rnaRef}} />\n            <DNADialog visible={dnaVisible} onHide={() => {hideDialog('dna')}} dna={{tool: formData.dnaTool, ref: formData.dnaRef}} />  \n        </MainStyle.Wrapper>\n    );\n}\n\nexport default Pharmacogenomics;","import { useState } from 'react';\nimport axios from 'axios';\n\n/**\n * A custom hook that provides dataset search function\n * @param {*} datasetType \n * @returns \n */\nconst useDatasetSearch = (datasetType) => {\n    const [searchAll, setSeatchAll] = useState(true);\n\n    const search = async (parameters) => {\n        const res = await axios.post(\n            `/api/${datasetType}/search`, \n            {parameters: parameters}\n        );\n        let all = true;\n        Object.keys(parameters).forEach(key => {\n            if(Array.isArray(parameters[key]) && parameters[key].length > 0){\n                all = false;\n            }\n        });\n        setSeatchAll(all);\n        return res.data;\n    }\n    \n    return {\n        searchAll,\n        search\n    };\n}\n\nexport default useDatasetSearch;","import { createContext } from 'react';\n\nconst SearchReqContext = createContext(null);\n\nexport default SearchReqContext;","import React, {useContext} from 'react';\nimport axios from 'axios';\nimport {Button} from 'primereact/button';\nimport { AuthContext } from '../../../hooks/Context';\n\nconst SaveDatasetButton = (props) => {\n    const auth = useContext(AuthContext);\n    const {selectedDatasets, onSaveComplete, disabled} = props;\n    \n    const saveSelectedDatasets = async (event) => {\n        event.preventDefault();\n        if(auth.user && selectedDatasets.length){\n            let userDataset = { \n                username: auth.user.username,\n                datasetId: selectedDatasets.map(item => (item._id))\n            };\n            let res = null;\n            try{\n                res = await axios.post('/api/user/dataset/add', userDataset);\n                onSaveComplete(1, res.data);\n            }catch(err){\n                console.log(err);\n                onSaveComplete(0, res.data);\n            }\n        }\n    }\n\n    return(\n        <Button label='Save' onClick={saveSelectedDatasets} disabled={disabled}/>\n    );\n}\n\nexport default SaveDatasetButton;\n","import styled from 'styled-components';\n\nexport const SearchReqWrapper = styled.div`\n    display: flex;\n`;\n\nexport const Filter = styled.div`\n    width: 300px;\n    max-height: 620px;\n    color: #3D405A;\n    background-color: rgba(255, 255, 255, 0.8);\n    font-size: 12px;\n    padding-top: 5px;\n    padding-left: 20px;\n    padding-right: 20px;\n    padding-bottom: 20px;\n    border-radius: 10px;\n    .form-field {\n        margin-bottom: 20px;\n    }\n`;\n\nexport const MainPanel = styled.div`\n    width: 75%;\n    margin-left: 20px;\n`;\n\nexport const SearchReqPanel = styled.div`\n    display: flex;\n    justify-content: space-between;\n    max-width: 100%;\n    margin-bottom: 20px;\n    border-radius: 10px;\n    padding-left: 30px;\n    padding-right: 30px;\n    padding-bottom: 30px;\n    color: #3D405A;\n    background-color: rgba(255, 255, 255, 0.8);\n`;","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst SearchTableLoader = () => {\n    return(\n        <Container>\n            <Loader type=\"ThreeDots\" color=\"#3D405A\" height={100} width={100} />\n        </Container>\n    );\n}\n\nexport default SearchTableLoader;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledSearchSummary = styled.div`\n    margin-right: 20px;\n    .wrapper {\n        display: flex;\n        align-items: flex-end;\n        margin-top: -25px;\n        margin-bottom: 15px;\n    }\n    .number {\n        font-size: 100px;\n        font-weight: bold;\n    }\n    .text {\n        font-size: 20px;\n        margin-left: 5px;\n        padding-bottom: 15px;\n    }\n`;\n\nconst SearchSummary = (props) => {\n    const { title, searchAll, matchNum } = props;\n    return(\n        <StyledSearchSummary>\n            <h3>{title}</h3>\n            <div className='wrapper'>\n                <span className='number'>\n                    {matchNum}\n                </span> \n                <span className='text'>\n                    { searchAll ? 'dataset(s) available.' : `${(matchNum === 1 ? ' match' : ' matches')} found.` }\n                </span>\n            </div>\n        </StyledSearchSummary>\n    );\n}\n\nexport default SearchSummary;","import React from 'react';\nimport {InputSwitch} from 'primereact/inputswitch';\nimport styled from 'styled-components';\n\nconst FilterSet = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: 20px;\n    margin-bottom: 30px;\n    label{\n        margin-right: 10px;\n        font-weight: bold;\n    }\n`;\n\nconst FilterInputSwitch = (props) => {\n    const { label, checked, tooltip, onChange, disabled } = props;\n    \n    return(\n        <FilterSet>\n            <label>{label}</label> \n            <InputSwitch checked={checked} tooltip={tooltip} onChange={onChange} disabled={disabled} />\n        </FilterSet>\n    );\n}\n\nexport default FilterInputSwitch;","import React from 'react';\nimport {MultiSelect} from 'primereact/multiselect';\nimport {Dropdown} from 'primereact/dropdown';\nimport styled from 'styled-components';\n\nconst FilterSet = styled.div`\n    display: flex;\n    align-items: center;\n    // margin-top: 20px;\n    // margin-bottom: 20px;\n    label {\n        margin-right: 10px;\n    }\n    .dropdown {\n        flex-grow: 1;\n    }\n    .item-token {\n        padding-left: 3px;\n        padding-right: 3px;\n        margin-top: 2px;\n        margin-left: 2px;\n        margin-right: 2px;\n        border-radius: 2px;\n        background-color: #3D405A;\n        color: #ffffff;\n        font-weight: bold;\n        font-size: 12px;\n        display: inline-block;\n    }\n`;\n\nconst FilterDropdown = (props) => {\n    const { \n        id, \n        className,\n        hidden, \n        selectOne, \n        label, \n        options, \n        selected, \n        onChange, \n        disabled \n    } = props;\n\n    const dataTemplate =  (option) => {\n        return(\n            <div>\n                <span style={{fontSize:'1em',margin:'1em .5em 0 0'}}>{option.label}</span>\n            </div>\n        );\n    }\n\n    const selectedDataTemplate = (item) => {\n        if (item) {\n            return (\n                <div className=\"item-token\">\n                    <span>{item.label}</span>\n                </div>\n            );\n        }\n        else {\n            return <span>Select...</span>\n        }\n    }\n\n    if(hidden){\n        return(null);\n    }\n    if(selectOne){\n        return(\n            <FilterSet className={className}>\n                <label>{label}</label>\n                <Dropdown \n                    id={id} \n                    className='dropdown' \n                    optionLabel='label' \n                    value={selected}   \n                    options={options} \n                    onChange={onChange}\n                    filter={true} \n                    itemTemplate={dataTemplate}\n                    placeholder=\"Select one...\"\n                    disabled={disabled}\n                />\n            </FilterSet>\n        );\n    }\n    return(\n        <FilterSet className={className}>\n            <label>{label}</label>\n            <MultiSelect \n                id={id}\n                className='dropdown' \n                optionLabel='label' \n                value={selected} \n                options={options} \n                onChange={onChange}\n                filter={true} \n                itemTemplate={dataTemplate} \n                selectedItemTemplate={selectedDataTemplate}\n                disabled={disabled}\n            />\n        </FilterSet>\n    );\n}\n\nexport default FilterDropdown;","import React, {useState, useEffect, useContext} from 'react';\nimport SearchReqContext from '../SearchReqContext';\n\nimport {Filter} from '../SearchReqStyle';\nimport FilterInputSwitch from '../../Shared/FilterInputSwitch';\nimport CustomSelect from '../../Shared/CustomSelect';\nimport {dataTypes} from '../../Shared/Enums';\n\nconst ToxicoSetFilter = () => {\n    \n    const context = useContext(SearchReqContext);\n\n    const [datasetSelect, setDatasetSelect] = useState({selected: [], options: [], hidden: false});\n    const [ready, setReady] = useState(false);\n    \n    useEffect(() => {\n        const initialize = async () => {\n            const res = await fetch(`/api/${dataTypes.toxicogenomics}/formData`);\n            const form = await res.json();\n            setDatasetSelect({...datasetSelect, options: form.dataset});\n            setReady(true);\n        }\n        initialize();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    \n    return(\n        <React.Fragment>\n        {\n            ready&&\n            <Filter>\n                <h2>ToxicoSet Parameters</h2>\n                <FilterInputSwitch \n                    label='Request ToxicoSet:'\n                    checked={context.isRequest}\n                    tooltip='Currently unavailable'\n                    disabled={true}\n                />\n                <CustomSelect \n                    id='dataset' \n                    hidden={false} \n                    label='Dataset:' \n                    selectOne={context.isRequest}  \n                    options={datasetSelect.options} \n                    selected={datasetSelect.selected} \n                    onChange={(e) => {\n                        setDatasetSelect({...datasetSelect, selected: e.value}); \n                        context.setParameters(prev => ({...prev, dataset: e.value, search: true}));\n                    }} \n                />\n            </Filter>\n        }   \n        </React.Fragment>\n    );\n}\n\nexport default ToxicoSetFilter;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { dataTypes } from '../components/Shared/Enums';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n    font-size: 11px;\n    border: none;\n    background: none;\n    padding: 0px 0px;\n    color: #007ad9;\n    cursor: pointer;\n`;\n\n/**\n * A custom hook to be used for dataset tables.\n * Contains table cell templates and dataset download function for the download link.\n * @param {*} datasetType \n * @returns \n */\nconst useDataTable = (datasetType) => {\n\n    const downloadDataset = (doi, link) => async (event) => {\n        event.preventDefault();\n        console.log('download dataset');\n        await axios.post(`/api/${datasetType}/download`, {datasetDOI: doi});\n        const anchor = document.createElement('a');\n        anchor.setAttribute('download', null);\n        anchor.style.display = 'none';\n        anchor.setAttribute('href', link);\n        document.body.appendChild(anchor);\n        anchor.click();\n        document.body.removeChild(anchor);\n    }\n\n    const toolsRefTemplate = (rowData, column) => (\n        <div>\n            {rowData[column.field] ? rowData[column.field].map(item => <div key={item.name}>{item.label}</div>) : ''}\n        </div>\n    );\n\n    const dataTypeTemplate = (rowData, column) => {\n        if(datasetType === dataTypes.pharmacogenomics){\n            return(\n                <div>\n                    {\n                        rowData[column.field] ? \n                        rowData[column.field].map(item => \n                            <div key={item.name}>\n                                {item.name}{item.microarrayType ? ` [${item.microarrayType.label}]` : ''} ({item.type})\n                            </div>\n                        ) \n                        : ''\n                    }\n                </div>\n            );\n        }\n\n        if(datasetType === dataTypes.radiogenomics){\n            const dataTypes = rowData[column.field].filter(item => (item.name !== 'radiationSensitivity'));\n            return(\n                <div>{dataTypes.map(item => <div key={item.name}>{item.name} ({item.type})</div>)}</div>\n            );\n        }\n\n        const datatypeArray = rowData[column.field].filter(item => (item.name !== 'drugResponse'));\n        return(\n            <div>{datatypeArray.map(item => <div key={item.name}>{item.name} ({item.type})</div>)}</div>\n        );\n    }\n\n    const nameColumnTemplate = (rowData, column) => (\n        rowData.doi.length > 0 ? \n        <Link to={`/${datasetType}/${rowData.doi}`} target=\"_blank\">{rowData.name}</Link>\n        :\n        rowData.name\n    );\n\n    const nameColumnTemplateUserDataset = (rowData, column) => (\n        rowData.doi.length > 0 ? \n        <Link to={`/${rowData.datasetType.name}/${rowData.doi}`} target=\"_blank\">{rowData.name}</Link>\n        :\n        rowData.name\n    );\n\n    const downloadTemplate = (rowData, column) => {\n        return(\n            rowData.downloadLink ? \n            <StyledButton id={rowData._id} onClick={downloadDataset(rowData.doi, rowData.downloadLink)} >Download</StyledButton>\n            : \n            'Not Available'\n        );\n    };\n\n    const filteredTemplate = (rowData, column) => (\n        <div>{rowData.dataset.filteredSensitivity ? 'Yes' : 'No'}</div>\n    );\n\n    const canonicalTemplate = (rowData, column) => (\n        <div>{rowData[column.field] ? 'Yes' : ''}</div>\n    );\n\n    const drugSensitivityTemplate = (rowData, column) => {\n        const drugSensitivity = rowData[column.field].find(item => (item.name === 'drugResponse'));\n        return(\n            <div>{drugSensitivity ? drugSensitivity.version : 'Not Available'}</div>\n        );\n    }\n\n    const radiationSensitivityTemplate = (rowData, column) => {\n        const radiationSensitivity = rowData[column.field].find(item => (item.name === 'radiationSensitivity'));\n        return(\n            <div>{radiationSensitivity ? radiationSensitivity.version : 'Not Available'}</div>\n        );\n    }\n\n    const privateTemplate = (rowData, column) => (\n        <div>{rowData[column.field] ? 'Yes' : 'No'}</div>\n    );\n\n    return {\n        toolsRefTemplate,\n        dataTypeTemplate,\n        nameColumnTemplate,\n        nameColumnTemplateUserDataset,\n        downloadTemplate,\n        filteredTemplate,\n        canonicalTemplate,\n        drugSensitivityTemplate,\n        radiationSensitivityTemplate,\n        privateTemplate\n    };\n\n}\n\nexport default useDataTable;","import React, {useState, useEffect} from 'react';\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport {dataTypes} from '../../Shared/Enums';\nimport useDataTable from '../../../hooks/useDataTable';\n\nconst ToxicoSetTable = (props) => {\n    \n    const [state, setState] = useState({\n        rows: 10,\n        first: 0,\n        start: 0,\n        end: 10,\n        totalRecords: 0,\n        loading: true\n    });\n\n    const {\n        nameColumnTemplate,\n        downloadTemplate,\n        canonicalTemplate,\n        drugSensitivityTemplate,\n        dataTypeTemplate,\n    } = useDataTable(dataTypes.toxicogenomics);\n\n    useEffect(()=>{\n        setState({...state, loading: false});\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return(\n        <DataTable \n            value={props.tsets} \n            selection={props.selectedDatasets} \n            onSelectionChange={props.updateDatasetSelection} \n            paginator={props.tsets.length > 10} \n            rows={state.rows} \n            resizableColumns={true} \n            columnResizeMode=\"fit\"\n            scrollable={true} \n            scrollHeight={props.scrollHeight }\n        >\n            {props.authenticated && <Column selectionMode=\"multiple\" style={{width: '30px', textAlign: 'center'}} />}\n            <Column className='textField' field='name' header='Name' style={{width:'150px'}} body={nameColumnTemplate} sortable={true} />\n            <Column className='textField' field='dataset.label' header='Dataset' style={{width:'120px'}} sortable={true} />\n            <Column field='dataType' body={drugSensitivityTemplate} style={{width:'100px'}} header='Drug Response' />\n            <Column field='dataType' body={dataTypeTemplate} style={{width:'100px'}} header='Molecular Data' />\n            <Column field='canonical' body={canonicalTemplate} style={{width:'80px', textAlign: 'center'}} header='Canonical' />\n            <Column field='download' style={{width:'100px', textAlign: 'center'}} header='Number of Downloads' sortable={true} />\n            {props.download && <Column field='downloadLink' body={downloadTemplate} style={{width:'60px', textAlign: 'center'}} header='Download' /> }\n        </DataTable>\n    );\n\n}\n\nexport default ToxicoSetTable;","import React, {useState, useEffect, useContext} from 'react';\nimport {Messages} from 'primereact/messages';\nimport { AuthContext } from '../../../hooks/Context';\nimport useDatasetSearch from '../../../hooks/useDatasetSearch';\nimport SearchReqContext from '../SearchReqContext';\nimport {dataTypes} from '../../Shared/Enums';\nimport SaveDatasetButton from '../../Shared/Buttons/SaveDatasetButton';\n\nimport { SearchReqWrapper, MainPanel, SearchReqPanel } from '../SearchReqStyle';\nimport SearchTableLoader from '../SearchTableLoader';\nimport SearchSummary from '../SearchSummary';\nimport ToxicoSetFilter from './ToxicoSetFilter';\nimport ToxicoSetTable from './ToxicoSetTable';\n\nconst ToxicoSetSearch = () => {\n    \n    const auth = useContext(AuthContext);\n    const { searchAll, search } = useDatasetSearch(dataTypes.toxicogenomics);\n    \n    const [toxicoSets, setToxicoSets] = useState([]);\n    const [selectedTSets, setSelectedTSets] = useState([]);\n    const [isRequest, setIsRequest] = useState(false);\n    \n    const [parameters, setParameters] = useState({\n        dataset: [],\n        search: false\n    });\n\n    const [ready, setReady] = useState(false);\n\n    useEffect(() => {\n        const initializeView = async () => {\n            const tsets = await search({...parameters, status: 'complete', private: false});\n            console.log(tsets)\n            setToxicoSets(tsets);\n            setReady(true);\n        }\n        initializeView();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {   \n        async function searchTSets() {\n            console.log('search');\n            console.log(parameters);\n            const toxicoSets = await search({...parameters, status: 'complete', private: false});\n            setToxicoSets(toxicoSets);\n        }\n\n        if(parameters.search){\n            searchTSets();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [parameters]);\n\n    const showMessage = (status, data) => {\n        let severity = status ? 'success' : 'error';\n        ToxicoSetSearch.messages.show({severity: severity, summary: data.summary, detail: data.message, sticky: true});\n        setSelectedTSets([]);\n    }\n        \n    return(\n        <SearchReqContext.Provider \n            value={{ \n                parameters: parameters, \n                setParameters: setParameters, \n                isRequest: isRequest, \n                setIsRequest: setIsRequest\n            }}\n        >\n            <div className='pageContent'> \n                <div className='page-title'>ORCESTRA for Toxicogenomics</div>\n                <SearchReqWrapper>\n                    <ToxicoSetFilter />\n                    <MainPanel>\n                        <Messages ref={(el) => ToxicoSetSearch.messages = el} />\n                        <SearchReqPanel>\n                            <div>\n                                <SearchSummary \n                                    title='Explore multimodal Toxicogenomic Datasets (ToxicoSets)' \n                                    searchAll={searchAll} \n                                    matchNum={toxicoSets.length} \n                                />  \n                                {\n                                    auth.user ?\n                                    <SaveDatasetButton \n                                        selectedDatasets={selectedTSets} \n                                        disabled={selectedTSets.length > 0 ? false : true} \n                                        onSaveComplete={showMessage} \n                                    />\n                                    :\n                                    '*Login or register to save existing ToxicoSets to your profile.'\n                                }\n                            </div>\n                        </SearchReqPanel>\n                        {\n                            ready ?\n                            <ToxicoSetTable \n                                tsets={toxicoSets} \n                                selectedDatasets={selectedTSets} \n                                updateDatasetSelection={(e) => {setSelectedTSets(e.value)}} \n                                scrollHeight='600px'\n                                authenticated={auth.user ? true : false} \n                                download={true}\n                            /> \n                            :\n                            <SearchTableLoader />\n                        }  \n                    </MainPanel>\n                </SearchReqWrapper>\n            </div>\n        </SearchReqContext.Provider>\n    );\n}\n\nexport default ToxicoSetSearch;","import React, {useState, useEffect, useContext} from 'react';\nimport SearchReqContext from '../SearchReqContext';\n\nimport {Filter} from '../SearchReqStyle';\nimport FilterInputSwitch from '../../Shared/FilterInputSwitch';\nimport CustomSelect from '../../Shared/CustomSelect';\nimport {dataTypes} from '../../Shared/Enums';\n\nconst XevaSetFilter = () => {\n    const context = useContext(SearchReqContext);\n\n    const [datasetSelect, setDatasetSelect] = useState({selected: [], options: [], hidden: false});\n    const [ready, setReady] = useState(false);\n    \n    useEffect(() => {\n        const initialize = async () => {\n            const res = await fetch(`/api/${dataTypes.xenographic}/formData`);\n            const form = await res.json();\n            setDatasetSelect({...datasetSelect, options: form.dataset});\n            setReady(true);\n        }\n        initialize();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    \n    return(\n        <React.Fragment>\n        {\n            ready&&\n            <Filter>\n                <h2>XevaSet Parameters</h2>\n                <FilterInputSwitch \n                    label='Request XevaSet:'\n                    checked={context.isRequest}\n                    tooltip='Currently unavailable'\n                    onChange={(e) => {}}\n                    disabled={true}\n                />\n                <CustomSelect \n                    id='dataset' \n                    hidden={false} \n                    label='Dataset:' \n                    selectOne={context.isRequest}  \n                    options={datasetSelect.options} \n                    selected={datasetSelect.selected} \n                    onChange={(e) => {\n                        setDatasetSelect({...datasetSelect, selected: e.value}); \n                        context.setParameters(prev => ({...prev, dataset: e.value, search: true}));\n                    }} \n                />\n            </Filter>\n        }   \n        </React.Fragment>\n    );\n}\n\nexport default XevaSetFilter;","import React, {useState, useEffect} from 'react';\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport {dataTypes} from '../../Shared/Enums';\nimport useDataTable from '../../../hooks/useDataTable';\n\nconst XevaSetTable = (props) => {\n    \n    const [state, setState] = useState({\n        rows: 10,\n        first: 0,\n        start: 0,\n        end: 10,\n        totalRecords: 0,\n        loading: true\n    });\n\n    const {\n        nameColumnTemplate,\n        downloadTemplate,\n        canonicalTemplate,\n        drugSensitivityTemplate,\n        dataTypeTemplate,\n    } = useDataTable(dataTypes.xenographic);\n\n    useEffect(()=>{\n        setState({...state, loading: false});\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return(\n        <DataTable \n            value={props.xevasets} \n            selection={props.selectedDatasets} \n            onSelectionChange={props.updateDatasetSelection} \n            paginator={props.xevasets.length > 10} rows={state.rows} \n            resizableColumns={true} columnResizeMode=\"fit\"\n            scrollable={true} scrollHeight={props.scrollHeight }\n        >\n            {props.authenticated && <Column selectionMode=\"multiple\" style={{width: '30px', textAlign: 'center'}} />}\n            <Column className='textField' field='name' header='Name' style={{width:'150px'}} body={nameColumnTemplate} sortable={true} />\n            <Column className='textField' field='dataset.name' header='Dataset' style={{width:'100px'}} sortable={true} />\n            <Column field='dataType' body={drugSensitivityTemplate} style={{width:'100px'}} header='Drug Response' />\n            <Column field='dataType' body={dataTypeTemplate} style={{width:'100px'}} header='Molecular Data' />\n            <Column field='canonical' body={canonicalTemplate} style={{width:'90px', textAlign: 'center'}} header='Canonical' />\n            <Column field='download' style={{width:'100px', textAlign: 'center'}} header='Number of Downloads' sortable={true} />\n            {props.download && <Column field='downloadLink' body={downloadTemplate} style={{width:'60px', textAlign: 'center'}} header='Download' /> }\n        </DataTable>\n    );\n\n}\n\nexport default XevaSetTable;","import React, {useState, useEffect, useContext} from 'react';\nimport {Messages} from 'primereact/messages';\nimport { AuthContext } from '../../../hooks/Context';\nimport useDatasetSearch from '../../../hooks/useDatasetSearch';\nimport SearchReqContext from '../SearchReqContext';\nimport SaveDatasetButton from '../../Shared/Buttons/SaveDatasetButton';\n\nimport { SearchReqWrapper, MainPanel, SearchReqPanel } from '../SearchReqStyle';\nimport SearchTableLoader from '../SearchTableLoader';\nimport SearchSummary from '../SearchSummary';\nimport XevaSetFilter from './XevaSetFilter';\nimport XevaSetTable from './XevaSetTable';\nimport {dataTypes} from '../../Shared/Enums';\n\nconst XevaSetSearch = () => {\n    \n    const auth = useContext(AuthContext);\n    const { searchAll, search } = useDatasetSearch(dataTypes.xenographic);\n    \n    const [xevaSets, setXevaSets] = useState([]);\n    const [selectedXevaSets, setSelectedXevaSets] = useState([]);\n    const [isRequest, setIsRequest] = useState(false);\n    \n    const [parameters, setParameters] = useState({\n        dataset: [],\n        search: false\n    });\n\n    const [ready, setReady] = useState(false);\n\n    useEffect(() => {\n        const initializeView = async () => {\n            const xevasets = await search({...parameters, status: 'complete', private: false});\n            setXevaSets(xevasets);\n            setReady(true);\n        }\n        initializeView();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {   \n        async function searchXevaSets() {\n            const xevaSets = await search({...parameters, status: 'complete', private: false});\n            setXevaSets(xevaSets);\n        }\n\n        if(parameters.search){\n            searchXevaSets();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [parameters]);\n\n    const showMessage = (status, data) => {\n        let severity = status ? 'success' : 'error';\n        XevaSetSearch.messages.show({severity: severity, summary: data.summary, detail: data.message, sticky: true});\n        setSelectedXevaSets([]);\n    }\n        \n    return(\n        <SearchReqContext.Provider \n            value={{ \n                parameters: parameters, \n                setParameters: setParameters, \n                isRequest: isRequest, \n                setIsRequest: setIsRequest\n            }}\n        >\n            <div className='pageContent'>\n                <div className='page-title'>ORCESTRA for Xenographic Pharmacogenomics</div>   \n                <SearchReqWrapper>\n                    <XevaSetFilter />\n                    <MainPanel>\n                    <Messages ref={(el) => XevaSetSearch.messages = el} />\n                        <SearchReqPanel>\n                            <div>\n                                <SearchSummary \n                                    title='Explore Xenographic Pharmacogenomics Datasets (XevaSets)' \n                                    searchAll={searchAll} \n                                    matchNum={xevaSets.length} \n                                />\n                                {\n                                    auth.user ?\n                                    <SaveDatasetButton \n                                        selectedDatasets={selectedXevaSets} \n                                        disabled={selectedXevaSets.length > 0 ? false : true} \n                                        onSaveComplete={showMessage} \n                                    />\n                                    :\n                                    '*Login or register to save existing XevaSets to your profile.'\n                                }\n                            </div>\n                        </SearchReqPanel>\n                        {\n                            ready ?\n                            <XevaSetTable\n                                xevasets={xevaSets} \n                                selectedDatasets={selectedXevaSets} \n                                updateDatasetSelection={(e) => {setSelectedXevaSets(e.value)}} \n                                scrollHeight='600px'\n                                authenticated={auth.user ? true : false} \n                                download={true}\n                            /> \n                            :\n                            <SearchTableLoader />\n                        }  \n                    </MainPanel>\n                </SearchReqWrapper>\n            </div>\n        </SearchReqContext.Provider>\n    );\n}\n\nexport default XevaSetSearch;","import React, {useState, useEffect, useContext} from 'react';\nimport SearchReqContext from '../SearchReqContext';\n\nimport {Filter} from '../SearchReqStyle';\nimport FilterInputSwitch from '../../Shared/FilterInputSwitch';\nimport CustomSelect from '../../Shared/CustomSelect';\nimport {dataTypes} from '../../Shared/Enums';\n\nconst ClinGenSetFilter = () => {    \n    const context = useContext(SearchReqContext);\n\n    const [datasetSelect, setDatasetSelect] = useState({selected: [], options: [], hidden: false});\n    const [ready, setReady] = useState(false);\n    \n    useEffect(() => {\n        const initialize = async () => {\n            const res = await fetch(`/api/${dataTypes.clinicalgenomics}/formData`);\n            const form = await res.json();\n            setDatasetSelect({...datasetSelect, options: form.dataset});\n            setReady(true);\n        }\n        initialize();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    \n    return(\n        <React.Fragment>\n        {\n            ready&&\n            <Filter>\n                <h2>Clinical Genomics Dataset Parameters</h2>\n                <FilterInputSwitch \n                    label='Request Clinical Genomics Dataset:'\n                    checked={context.isRequest}\n                    tooltip='Currently unavailable'\n                    disabled={true}\n                />\n                <CustomSelect \n                    id='dataset' \n                    hidden={false} \n                    label='Dataset:' \n                    selectOne={context.isRequest}  \n                    options={datasetSelect.options} \n                    selected={datasetSelect.selected} \n                    onChange={(e) => {\n                        setDatasetSelect({...datasetSelect, selected: e.value}); \n                        context.setParameters(prev => ({...prev, dataset: e.value, search: true}));\n                    }} \n                />\n            </Filter>\n        }   \n        </React.Fragment>\n    );\n}\n\nexport default ClinGenSetFilter;","import React, {useState, useEffect} from 'react';\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport {dataTypes} from '../../Shared/Enums';\nimport useDataTable from '../../../hooks/useDataTable';\n\nconst ClinGenSetTable = (props) => {\n    \n    const [state, setState] = useState({\n        rows: 10,\n        first: 0,\n        start: 0,\n        end: 10,\n        totalRecords: 0,\n        loading: true\n    });\n\n    const {\n        nameColumnTemplate,\n        downloadTemplate,\n        canonicalTemplate,\n        drugSensitivityTemplate,\n        dataTypeTemplate,\n    } = useDataTable(dataTypes.clinicalgenomics);\n\n    useEffect(()=>{\n        setState({...state, loading: false});\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return(\n        <DataTable \n            value={props.datasets} \n            selection={props.selectedDatasets} \n            onSelectionChange={props.updateDatasetSelection} \n            paginator={props.datasets.length > 10} \n            rows={state.rows} \n            resizableColumns={true} \n            columnResizeMode=\"fit\"\n            scrollable={true} \n            scrollHeight={props.scrollHeight }\n        >\n            {props.authenticated && <Column selectionMode=\"multiple\" style={{width: '30px', textAlign: 'center'}} />}\n            <Column className='textField' field='name' header='Name' style={{width:'150px'}} body={nameColumnTemplate} sortable={true} />\n            <Column className='textField' field='dataset.name' header='Dataset' style={{width:'100px'}} sortable={true} />\n            <Column field='dataType' body={drugSensitivityTemplate} style={{width:'100px'}} header='Drug Response' />\n            <Column field='dataType' body={dataTypeTemplate} style={{width:'100px'}} header='Molecular Data' />\n            <Column field='canonical' body={canonicalTemplate} style={{width:'90px', textAlign: 'center'}} header='Canonical' />\n            <Column field='download' style={{width:'100px', textAlign: 'center'}} header='Number of Downloads' sortable={true} />\n            {props.download && <Column field='downloadLink' body={downloadTemplate} style={{width:'60px', textAlign: 'center'}} header='Download' /> }\n        </DataTable>\n    );\n\n}\n\nexport default ClinGenSetTable;","import React, {useState, useEffect, useContext} from 'react';\nimport {Messages} from 'primereact/messages';\nimport { AuthContext } from '../../../hooks/Context';\nimport useDatasetSearch from '../../../hooks/useDatasetSearch';\nimport SearchReqContext from '../SearchReqContext';\nimport SaveDatasetButton from '../../Shared/Buttons/SaveDatasetButton';\n\nimport { SearchReqWrapper, MainPanel, SearchReqPanel } from '../SearchReqStyle';\nimport SearchTableLoader from '../SearchTableLoader';\nimport SearchSummary from '../SearchSummary';\nimport ClinGenSetFilter from './ClinGenSetFilter';\nimport ClinGenSetTable from './ClinGenSetTable';\nimport {dataTypes} from '../../Shared/Enums';\n\nconst ClinGenSetSearch = () => {\n    \n    const auth = useContext(AuthContext);\n    const { searchAll, search } = useDatasetSearch(dataTypes.clinicalgenomics);\n    \n    const [datasets, setDatasets] = useState([]);\n    const [selectedDatasets, setSelectedDatasets] = useState([]);\n    const [isRequest, setIsRequest] = useState(false);\n    \n    const [parameters, setParameters] = useState({\n        dataset: [],\n        search: false\n    });\n\n    const [ready, setReady] = useState(false);\n\n    useEffect(() => {\n        const initializeView = async () => {\n            const res = await search({...parameters, status: 'complete', private: false});\n            setDatasets(res);\n            setReady(true);\n        }\n        initializeView();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {   \n        async function searchClinGenSets() {\n            console.log(parameters);\n            const result = await search({...parameters, status: 'complete', private: false});\n            setDatasets(result);\n        }\n\n        if(parameters.search){\n            searchClinGenSets();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [parameters]);\n\n    const showMessage = (status, data) => {\n        let severity = status ? 'success' : 'error';\n        ClinGenSetSearch.messages.show({severity: severity, summary: data.summary, detail: data.message, sticky: true});\n        setSelectedDatasets([]);\n    }\n        \n    return(\n        <SearchReqContext.Provider value={{ \n                parameters: parameters, \n                setParameters: setParameters, \n                isRequest: isRequest, \n                setIsRequest: setIsRequest\n            }}\n        >\n            <div className='pageContent'>\n                <div className='page-title'>ORCESTRA for Clinical Genomics</div>  \n                <SearchReqWrapper>\n                    <ClinGenSetFilter />\n                    <MainPanel>\n                        <Messages ref={(el) => ClinGenSetSearch.messages = el} />\n                        <SearchReqPanel>\n                            <div>\n                                <SearchSummary \n                                    title='Explore multimodal Clinical Genomics Datasets' \n                                    searchAll={searchAll} \n                                    matchNum={datasets.length} \n                                />\n                                {\n                                    auth.user ?\n                                    <SaveDatasetButton \n                                        selectedDatasets={selectedDatasets} \n                                        disabled={selectedDatasets.length > 0 ? false : true} \n                                        onSaveComplete={showMessage} \n                                    />\n                                    :\n                                    '*Login or register to save existing Clinical Genomics Datasets to your profile.'\n                                }\n                            </div>\n                        </SearchReqPanel>\n                        {\n                            ready ?\n                            <ClinGenSetTable \n                                datasets={datasets} \n                                selectedDatasets={selectedDatasets} \n                                updateDatasetSelection={(e) => {setSelectedDatasets(e.value)}} \n                                scrollHeight='600px'\n                                authenticated={auth.user ? true : false}  \n                                download={true}\n                            /> \n                            :\n                            <SearchTableLoader />\n                        }  \n                    </MainPanel>\n                </SearchReqWrapper>\n            </div>\n        </SearchReqContext.Provider>\n    );\n}\n\nexport default ClinGenSetSearch;","import React, {useState, useEffect, useContext} from 'react';\nimport SearchReqContext from '../SearchReqContext';\n\nimport {Filter} from '../SearchReqStyle';\nimport FilterInputSwitch from '../../Shared/FilterInputSwitch';\nimport CustomSelect from '../../Shared/CustomSelect';\nimport {dataTypes} from '../../Shared/Enums';\n\nconst RadioSetFilter = () => {\n    const context = useContext(SearchReqContext);\n    \n    const [datasetSelect, setDatasetSelect] = useState({selected: [], options: [], hidden: false});\n    const [ready, setReady] = useState(false);\n    \n    useEffect(() => {\n        const initialize = async () => {\n            const res = await fetch(`/api/${dataTypes.radiogenomics}/formData`);\n            const form = await res.json();\n            setDatasetSelect({...datasetSelect, options: form.dataset});\n            setReady(true);\n        }\n        initialize();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    \n    return(\n        <React.Fragment>\n        {\n            ready&&\n            <Filter>\n                <h2>RadioSet Parameters</h2>\n                <FilterInputSwitch \n                    label='Request RadioSet:'\n                    checked={context.isRequest}\n                    tooltip='Currently unavailable'\n                    disabled={true}\n                />\n                <CustomSelect \n                    id='dataset' \n                    hidden={false} \n                    label='Dataset:' \n                    selectOne={context.isRequest}  \n                    options={datasetSelect.options} \n                    selected={datasetSelect.selected} \n                    onChange={(e) => {\n                        setDatasetSelect({...datasetSelect, selected: e.value}); \n                        context.setParameters(prev => ({...prev, dataset: e.value, search: true}));\n                    }} \n                />\n            </Filter>\n        }   \n        </React.Fragment>\n    );\n}\n\nexport default RadioSetFilter;","import React, {useState, useEffect} from 'react';\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport {dataTypes} from '../../Shared/Enums';\nimport useDataTable from '../../../hooks/useDataTable';\n\nconst RadioSetTable = (props) => {\n    \n    const [state, setState] = useState({\n        rows: 10,\n        first: 0,\n        start: 0,\n        end: 10,\n        totalRecords: 0,\n        loading: true\n    });\n\n    const {\n        nameColumnTemplate,\n        downloadTemplate,\n        canonicalTemplate,\n        radiationSensitivityTemplate,\n        dataTypeTemplate,\n    } = useDataTable(dataTypes.radiogenomics);\n\n    useEffect(()=>{\n        setState({...state, loading: false});\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return(\n        <DataTable \n            value={props.datasets} \n            selection={props.selectedDatasets} \n            onSelectionChange={props.updateDatasetSelection} \n            paginator={props.datasets.length > 10} rows={state.rows} \n            resizableColumns={true} columnResizeMode=\"fit\"\n            scrollable={true} scrollHeight={props.scrollHeight }\n        >\n            {props.authenticated && <Column selectionMode=\"multiple\" style={{width: '30px', textAlign: 'center'}} />}\n            <Column className='textField' field='name' header='Name' style={{width:'150px'}} body={nameColumnTemplate} sortable={true} />\n            <Column className='textField' field='dataset.name' header='Dataset' style={{width:'100px'}} sortable={true} />\n            <Column field='dataType' body={radiationSensitivityTemplate} style={{width:'100px'}} header='Radation Sensitivity' />\n            <Column field='dataType' body={dataTypeTemplate} style={{width:'100px'}} header='Molecular Data' />\n            <Column field='canonical' body={canonicalTemplate} style={{width:'90px', textAlign: 'center'}} header='Canonical' />\n            <Column field='download' style={{width:'100px', textAlign: 'center'}} header='Number of Downloads' sortable={true} />\n            {props.download && <Column field='downloadLink' body={downloadTemplate} style={{width:'60px', textAlign: 'center'}} header='Download' /> }\n        </DataTable>\n    );\n\n}\n\nexport default RadioSetTable;","import React, {useState, useEffect, useContext} from 'react';\nimport {Messages} from 'primereact/messages';\nimport { AuthContext } from '../../../hooks/Context';\nimport useDatasetSearch from '../../../hooks/useDatasetSearch';\nimport SearchReqContext from '../SearchReqContext';\nimport SaveDatasetButton from '../../Shared/Buttons/SaveDatasetButton';\n\nimport { SearchReqWrapper, MainPanel, SearchReqPanel } from '../SearchReqStyle';\nimport SearchTableLoader from '../SearchTableLoader';\nimport SearchSummary from '../SearchSummary';\nimport RadioSetFilter from './RadioSetFilter';\nimport RadioSetTable from './RadioSetTable';\nimport {dataTypes} from '../../Shared/Enums';\n\nconst RadioSetSearch = () => {\n    \n    const auth = useContext(AuthContext);\n    const { searchAll, search } = useDatasetSearch(dataTypes.radiogenomics);\n    \n    const [datasets, setDatasets] = useState([]);\n    const [selectedDatasets, setSelectedDatasets] = useState([]);\n    const [isRequest, setIsRequest] = useState(false);\n    \n    const [parameters, setParameters] = useState({\n        dataset: [],\n        search: false\n    });\n\n    const [ready, setReady] = useState(false);\n\n    useEffect(() => {\n        const initializeView = async () => {\n            const res = await search({...parameters, status: 'complete', private: false});\n            console.log(res)\n            setDatasets(res);\n            setReady(true);\n        }\n        initializeView();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {   \n        async function searchRadioSet() {\n            console.log(parameters);\n            const result = await search({...parameters, status: 'complete', private: false});\n            setDatasets(result);\n        }\n\n        if(parameters.search){\n            searchRadioSet();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [parameters]);\n\n    const showMessage = (status, data) => {\n        let severity = status ? 'success' : 'error';\n        RadioSetSearch.messages.show({severity: severity, summary: data.summary, detail: data.message, sticky: true});\n        setSelectedDatasets([]);\n    }\n        \n    return(\n        <SearchReqContext.Provider \n            value={{ \n                parameters: parameters, \n                setParameters: setParameters, \n                isRequest: isRequest, \n                setIsRequest: setIsRequest\n            }}\n        >\n            <div className='pageContent'>\n                <div className='page-title'>ORCESTRA for Radiogenomics</div>  \n                <SearchReqWrapper>\n                    <RadioSetFilter />\n                    <MainPanel>\n                        <Messages ref={(el) => RadioSetSearch.messages = el} />\n                        <SearchReqPanel>\n                            <div>\n                                <SearchSummary \n                                    title='Explore multimodal Radiogenomic Datasets (RadioSets)' \n                                    searchAll={searchAll} \n                                    matchNum={datasets.length} \n                                />\n                                {\n                                    auth.user ?\n                                    <SaveDatasetButton \n                                        selectedDatasets={selectedDatasets} \n                                        disabled={selectedDatasets.length > 0 ? false : true} \n                                        onSaveComplete={showMessage} \n                                    />\n                                    :\n                                    '*Login or register to save existing RadioSets to your profile.'\n                                }\n                            </div>\n                        </SearchReqPanel>\n                        {\n                            ready ?\n                            <RadioSetTable \n                                datasets={datasets} \n                                selectedDatasets={selectedDatasets} \n                                updateDatasetSelection={(e) => {setSelectedDatasets(e.value)}} \n                                scrollHeight='600px'\n                                authenticated={auth.user ? true : false} \n                                download={true}\n                            />\n                            :\n                            <SearchTableLoader />\n                        }  \n                    </MainPanel>\n                </SearchReqWrapper>\n            </div>\n        </SearchReqContext.Provider>\n    );\n}\n\nexport default RadioSetSearch;","import React from 'react';\nimport {dataTypes} from '../Shared/Enums';\nimport Pharmacogenomics from './DatasetMainContent/Pharmacogenomics';\n// import Toxicogenomics from './DatasetMainContent/Toxicogenomics';\n// import Xenographic from './DatasetMainContent/Xenographic';\nimport ToxicoSetSearch from '../SearchRequest/ToxicoSet/ToxicoSetSearch';\nimport XevaSetSearch from '../SearchRequest/XevaSet/XevaSetSearch';\nimport ClinGenSearch from '../SearchRequest/ClinicalGenomics/ClinGenSetSearch';\nimport RadioSetSearch from '../SearchRequest/RadioSet/RadioSetSearch';\n\nconst DatasetMain = (props) => {\n    return(\n        <React.Fragment>\n            {props.match.params.datatype === dataTypes.pharmacogenomics && <Pharmacogenomics />}\n            {props.match.params.datatype === dataTypes.toxicogenomics && <ToxicoSetSearch />}\n            {props.match.params.datatype === dataTypes.xenographic && <XevaSetSearch />}\n            {props.match.params.datatype === dataTypes.clinicalgenomics && <ClinGenSearch />}\n            {props.match.params.datatype === dataTypes.radiogenomics && <RadioSetSearch />}\n        </React.Fragment>\n    );\n}\n\nexport default DatasetMain;\n","import React from 'react';\nimport {Checkbox} from 'primereact/checkbox';\nimport styled from 'styled-components';\n\nconst CheckBoxContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 30px;\n    .label{\n        margin-right: 10px;\n    }\n`\n\nconst PSetCheckbox = (props) => {\n    return(\n        <CheckBoxContainer>\n            <div className='label'>{props.label}</div>\n            <Checkbox inputId=\"filteredSens\" \n                onChange={props.onChange} \n                checked={props.checked}>\n            </Checkbox>\n        </CheckBoxContainer>\n    );\n}\n\nexport default PSetCheckbox;","import React, {useState, useEffect, useContext} from 'react';\nimport SearchReqContext from '../SearchReqContext';\n\nimport {Filter} from '../SearchReqStyle';\nimport FilterInputSwitch from '../../Shared/FilterInputSwitch';\nimport CustomSelect from '../../Shared/CustomSelect';\nimport CustomCheckbox from '../../Shared/CustomCheckbox';\nimport {dataTypes} from '../../Shared/Enums';\n\nconst PSetFilter = () => {\n    \n    const context = useContext(SearchReqContext);\n\n    const [datasetSelect, setDatasetSelect] = useState({selected: [], options: [], hidden: false});\n    const [dataTypeSelect, setDataTypeSelect] = useState({selected: [], options: [], hidden: false, searchOptions: []});\n    const [miArraySelect, setMiArraySelect] = useState({selected: [], options: [], hidden: true});\n    const [drugSensSelect, setDrugSensSelect] = useState({selected: [], options: [], hidden: false, disabled: true});\n    const [genomeSelect, setGenomeSelect] = useState({selected: [], options: [], hidden: false});\n    const [rnaToolSelect, setRNAToolSelect] = useState({selected: [], options: [], hidden: false});\n    const [rnaRefSelect, setRNARefSelect] = useState({selected: [], options: [], hidden: false});\n    const [checkBoxes, setCheckBoxes] = useState({canonicalOnly: false, filteredSensitivity: false});\n    \n    const [toolRefDisabled, setToolRefDisabled] = useState(false);\n    const [dataTypeDisabled, setDataTypeDisabled] = useState(false);\n    const [ready, setReady] = useState(false);\n    \n    useEffect(() => {\n        const initialize = async () => {\n            const res = await fetch(`/api/${dataTypes.pharmacogenomics}/formData`);\n            const form = await res.json();\n            console.log(form);\n            setDatasetSelect({...datasetSelect, options: form.dataset});\n            setDataTypeSelect({...dataTypeSelect, options: form.dataType, searchOptions: form.dataType});\n            setGenomeSelect({...genomeSelect, options: form.genome});\n            setRNAToolSelect({...rnaToolSelect, options: form.rnaTool});\n            setRNARefSelect({...rnaRefSelect, options: form.rnaRef});\n            setReady(true);\n        }\n        initialize();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        // set drug sensitivity options based on dataset selection.\n        if(context.isRequest){\n            // disable the drug sensitivity options if no dataset is selected.\n            let options = [];\n            if(typeof datasetSelect.selected !== 'undefined'){\n                options = options.concat(getDrugSensOptions(datasetSelect.selected));\n                onDatasetSelection(datasetSelect.selected);\n            }\n            setDrugSensSelect({\n                selected: [],\n                options: options,\n                disabled: typeof datasetSelect.selected === 'undefined' ? true : false     \n            });\n        }else{\n            // enable the drug sensitivity options only if at least one dataset is selected.\n            let options = [];\n            if(typeof datasetSelect.selected !== 'undefined'){\n                datasetSelect.selected.forEach(item => {\n                    options = options.concat(getDrugSensOptions(item));\n                });\n                setDrugSensSelect({\n                    selected: [],\n                    options: options,\n                    disabled: datasetSelect.selected.length > 0 ? false : true     \n                });\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [datasetSelect.selected]);\n\n    useEffect(() => {\n        if(context.isRequest){\n            // disable dataset option(s) that are not available to use for a PSet request.\n            let datasetOptions = datasetSelect.options.map(item => ({...item, disabled: item.unavailable ? true : false}));\n            setDatasetSelect({...datasetSelect, options: datasetOptions, selected: undefined});\n            setDataTypeSelect({...dataTypeSelect, selected: [], disabled: true, options: []});\n            setDataTypeDisabled(true);\n            setToolRefDisabled(true);\n            \n        }else{\n            setDatasetSelect({selected: [], hidden: false, options: datasetSelect.options.map(option => ({...option, disabled: false}))});\n            setDataTypeSelect({...dataTypeSelect, selected: [], disabled: false, hidden: false, options: dataTypeSelect.searchOptions.map(option => ({...option, hidden: false}))});\n            setDataTypeDisabled(false);\n            setToolRefDisabled(false);\n        }\n        setGenomeSelect({selected: [], hidden: false, options: genomeSelect.options});\n        setRNAToolSelect({selected: [], hidden: false, options: rnaToolSelect.options});\n        setRNARefSelect({selected: [], hidden: false, options: rnaRefSelect.options.map(option => ({...option, hidden: false}))});\n        setCheckBoxes({canonicalOnly: false, filteredSensitivity: false});\n        context.setParameters({\n            dataset: [],\n            drugSensitivity: [],\n            canonicalOnly: false,\n            filteredSensitivity: false,\n            genome: [],\n            dataType: [],\n            defaultData: [],\n            rnaTool: [],\n            rnaRef: [],\n            name: '',\n            email: '',\n            search: true\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [context.isRequest]);\n\n    useEffect(() => {\n        // Show rnaRef options that belong to a selected genome(s), and hide others.\n        let rnaRefOptions = [...rnaRefSelect.options];\n        // if genomes are not selected, show all rnaRef options\n        if(genomeSelect.selected.length === 0 || typeof genomeSelect.selected === 'undefined'){\n            rnaRefOptions = rnaRefOptions.map(item => ({...item, hidden: false}));\n        // if one or more genome is selected, show rnaRef options that belong to the selected genome(s)\n        }else{\n            if(Array.isArray(genomeSelect.selected)){\n                rnaRefOptions = rnaRefOptions.map(\n                    item => ({...item, hidden: (genomeSelect.selected.find(genome => (item.genome === genome.name)) ? false : true)})\n                );\n            }else{\n                rnaRefOptions = rnaRefOptions.map(item => ({...item, hidden: (item.genome === genomeSelect.selected.name) ? false : true}));\n            }\n        }\n        setRNARefSelect({...rnaRefSelect, options: rnaRefOptions});\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [genomeSelect.selected]);\n\n    useEffect(() => {\n        if(context.isRequest && typeof datasetSelect.selected !== 'undefined' && datasetSelect.selected.name === 'GDSC'){\n            let found = dataTypeSelect.selected.find(item => (item.name === 'microarray'));\n            if(miArraySelect.hidden && found){\n                setMiArraySelect({...miArraySelect, options: found.options, hidden: false});\n            }else if(!found){\n                setMiArraySelect({...miArraySelect, selected: undefined, options: [], hidden: true});\n                \n            }\n        }else{\n            setMiArraySelect({...miArraySelect, selected: undefined, options: [], hidden: true});\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dataTypeSelect.selected]);\n\n    const onDatasetSelection = (dataset) => {\n        // Handle form options depending on a selected dataset.\n        // Empty downstream selections everytime a different dataset it selected.\n        let defaultMolData = [];\n        switch(dataset.name){\n            case 'CCLE':\n                defaultMolData = dataTypeSelect.searchOptions.filter(item => (item.default));\n                setDataTypeSelect({...dataTypeSelect, selected: [], options: dataset.accompanyData, disabled: false});\n                setToolRefDisabled(false);\n                setDataTypeDisabled(false);\n                break;\n            case 'CTRPv2':\n                setDataTypeSelect({...dataTypeSelect, selected: [], options: [], disabled: true});\n                setToolRefDisabled(true);\n                setDataTypeDisabled(true);\n                break;\n            case 'FIMM':\n                setDataTypeSelect({...dataTypeSelect, selected: [], options: [], disabled: true});\n                setToolRefDisabled(true);\n                setDataTypeDisabled(true);\n                break;\n            case 'gCSI':\n                defaultMolData = dataTypeSelect.searchOptions.filter(item => (item.default));\n                setDataTypeSelect({...dataTypeSelect, selected: [], options: dataset.accompanyData, disabled: false});\n                setToolRefDisabled(false);\n                setDataTypeDisabled(false);\n                break;\n            case 'GDSC':\n                defaultMolData = dataTypeSelect.searchOptions.filter(item => (item.default));\n                setDataTypeSelect({...dataTypeSelect, selected: [], options: dataset.accompanyData, disabled: false});\n                setToolRefDisabled(false);\n                setDataTypeDisabled(false);\n                break;\n            default:\n                defaultMolData = dataTypeSelect.searchOptions.filter(item => (item.default));   \n                setDataTypeSelect({...dataTypeSelect, selected: [], options: dataset.accompanyData, disabled: dataset.accompanyData.length === 0}); \n                setToolRefDisabled(false);\n                setDataTypeDisabled(false);\n                break;\n        }\n        setGenomeSelect({...genomeSelect, selected: []});\n        setRNAToolSelect({...rnaToolSelect, selected: []});\n        setRNARefSelect(prev => ({...prev, selected: [], options: prev.options.map(item => ({...item, hidden: false}))}));\n        context.setParameters({\n            dataset: dataset,\n            drugSensitivity: [],\n            canonicalOnly: false,\n            filteredSensitivity: false,\n            genome: [],\n            dataType: [],\n            defaultData: defaultMolData,\n            rnaTool: [],\n            rnaRef: [],\n            name: '',\n            email: '',\n            search: true\n        });\n    }\n\n    const getDrugSensOptions = (dataset) => {\n        let options = [];\n        dataset.versions.forEach(version => {\n            if(!options.some(item => item.label === version.label)){\n                options.push(version);\n            }\n        });\n        return options;\n    }\n    \n    return(\n        <React.Fragment>\n        {\n            ready&&\n            <Filter>\n                <h2>PSet Parameters</h2>\n                <FilterInputSwitch \n                    label='Request PSet:'\n                    checked={context.isRequest}\n                    tooltip=\"Turn this on to request a PSet.\"\n                    onChange={(e) => {context.setIsRequest(e.value)}}\n                />\n                {\n                    !context.isRequest &&\n                    <CustomCheckbox \n                        label='Canonical PSets only: '\n                        onChange={(e) => {\n                            setCheckBoxes({...checkBoxes, canonicalOnly: e.checked});\n                            context.setParameters(prev => ({...prev, canonicalOnly: e.checked, search: true}));\n                        }} \n                        checked={checkBoxes.canonicalOnly} \n                    />\n                }\n                <CustomSelect \n                    id='dataset' \n                    className='form-field'\n                    hidden={false} \n                    label='Dataset:' \n                    selectOne={context.isRequest}  \n                    options={datasetSelect.options} \n                    selected={datasetSelect.selected} \n                    onChange={(e) => {\n                        setDatasetSelect({...datasetSelect, selected: e.value}); \n                        context.setParameters(prev => ({...prev, dataset: e.value, search: true}));\n                    }} \n                />\n                {\n                    (context.isRequest && !dataTypeDisabled) && \n                    <div className='form-field'>\n                        Molecular Data: \n                        {\n                            context.parameters.defaultData.length === 1 ?\n                            <span style={{marginLeft: '10px', fontWeight: 'bold'}}>{context.parameters.defaultData[0].label}</span>\n                            :\n                            <ul>\n                            {\n                                context.parameters.defaultData.map(data => {\n                                    return(<li key={Math.random()}>{data.label}</li>);\n                                })\n                            }\n                            </ul>\n                        } \n                    </div>\n                }\n                <CustomSelect \n                    id='dataType' \n                    className='form-field'\n                    hidden={dataTypeSelect.hidden} \n                    label={ context.isRequest ? 'Optional Molecular Data:' : 'Molecular Data Type:'}\n                    options={dataTypeSelect.options} \n                    disabled={dataTypeSelect.disabled}\n                    selected={dataTypeSelect.selected} \n                    onChange={(e) => {\n                        setDataTypeSelect({...dataTypeSelect, selected: e.value});\n                        context.setParameters(prev => ({...prev, dataType: e.value, search: true}));\n                    }} \n                />\n                <CustomSelect \n                    id='microarrayOptions' \n                    className='form-field'\n                    hidden={miArraySelect.hidden} \n                    label='Microarray Type:'\n                    selectOne={true}\n                    options={miArraySelect.options} \n                    disabled={miArraySelect.disabled}\n                    selected={miArraySelect.selected} \n                    onChange={(e) => {\n                        setMiArraySelect({...miArraySelect, selected: e.value});\n                        let dataType = JSON.parse(JSON.stringify(context.parameters.dataType));\n                        dataType.find(item => (item.name === 'microarray')).microarrayType = e.value;\n                        context.setParameters(prev => ({...prev, dataType: dataType, search: false}));\n                    }} \n                />\n                <CustomSelect \n                    id='drugSensitivity' \n                    className='form-field'\n                    hidden={drugSensSelect.hidden} \n                    label='Drug Sensitivity:' \n                    selectOne={context.isRequest} \n                    disabled={drugSensSelect.disabled}\n                    options={drugSensSelect.options} \n                    selected={drugSensSelect.selected} \n                    onChange={(e) => {\n                        setDrugSensSelect({...drugSensSelect, selected: e.value});\n                        context.setParameters(prev => ({...prev, drugSensitivity: e.value, search: true}));\n                    }} \n                />\n                \n                {\n                    context.isRequest ?\n                    !drugSensSelect.disabled &&\n                    <CustomCheckbox \n                        label='Standardize drug dose range and filter noisy sensitivity curves?'\n                        onChange={(e) => {\n                            setCheckBoxes({...checkBoxes, filteredSensitivity: e.checked});\n                            context.setParameters(prev => ({...prev, filteredSensitivity: e.checked}));\n                        }} \n                        checked={checkBoxes.filteredSensitivity} \n                    />\n                    :\n                    <CustomCheckbox \n                        label='Filtered sensitivity data only: '\n                        onChange={(e) => {\n                            setCheckBoxes({...checkBoxes, filteredSensitivity: e.checked});\n                            context.setParameters(prev => ({...prev, filteredSensitivity: e.checked, search: !context.isRequest}));\n                        }} \n                        checked={checkBoxes.filteredSensitivity} \n                    />\n                }\n                \n                <CustomSelect \n                    id='genome' \n                    className='form-field'\n                    disabled={toolRefDisabled} \n                    hidden={false} \n                    label='Genome:' \n                    selectOne={context.isRequest} \n                    options={genomeSelect.options} \n                    selected={genomeSelect.selected} \n                    onChange={(e) => {\n                        setGenomeSelect({...genomeSelect, selected: e.value});\n                        // onGenomeSelection(e.value)\n                        context.setParameters(prev => ({...prev, genome: e.value, search: true}));\n                    }} \n                />\n\n                <CustomSelect \n                    id='rnaTool' \n                    className='form-field'\n                    disabled={toolRefDisabled} \n                    label='RNA Tool:' \n                    options={rnaToolSelect.options} \n                    selected={rnaToolSelect.selected} \n                    onChange={(e) => {\n                        if(context.isRequest && e.value.length > 2){\n                            while(e.value.length > 2){ e.value.shift() }\n                        }\n                        setRNAToolSelect({...rnaToolSelect, selected: e.value});\n                        context.setParameters(prev => ({...prev, rnaTool: e.value, search: true}));\n                    }} \n                />\n\n                <CustomSelect \n                    id='rnaRef' \n                    className='form-field'\n                    disabled={toolRefDisabled} \n                    label='RNA Ref:' \n                    selectOne={context.isRequest} \n                    options={rnaRefSelect.options.filter(item => !item.hidden)} \n                    selected={rnaRefSelect.selected} \n                    onChange={(e) => {\n                        setRNARefSelect({...rnaRefSelect, selected: e.value});\n                        context.setParameters(prev => ({...prev, rnaRef: e.value, search: true}));\n                    }} \n                />\n            </Filter>\n        }   \n        </React.Fragment>\n    );\n}\n\nexport default PSetFilter;","import React from 'react';\nimport {InputText} from 'primereact/inputtext';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    font-size: 12px; \n    label {\n        width: 100px;\n        margin-right: 10px;\n    }\n`;\n\nconst StyledInputText = styled(InputText)`\n    flex-grow: 1;\n`;\n\nconst CustomInputText = (props) => {\n    const {label, id, className, name, value, onChange, disabled} = props;\n    return(\n        <Container className={className}>\n            <label>{label}</label>\n            <StyledInputText \n                id={id} \n                name={name}\n                value={value} \n                onChange={onChange}\n                disabled={disabled} \n            />\n        </Container>\n    );\n}\n\nexport default CustomInputText;","import React, { useState, useEffect, useContext } from 'react';\nimport SearchReqContext from '../SearchReqContext';\n\nimport CustomInputText from '../../Shared/CustomInputText';\nimport {Button} from 'primereact/button';\nimport Loader from 'react-loader-spinner';\nimport {usePromiseTracker} from \"react-promise-tracker\";\nimport {trackPromise} from 'react-promise-tracker';\nimport styled from 'styled-components';\n\nconst RequestForm = styled.div`\n    width: 300px;\n    div {\n        margin-top: 25px;\n    }\n`;\n\nconst LoaderContainer = styled.div`\n    height: 30px;\n    width: 100%;\n    display: flex;\n    justify-content: left;\n    align-items: center;\n`;\n\nfunction isSelected(reqParam){\n    if(typeof reqParam === 'undefined' || reqParam === null){\n        return(false);\n    }\n    if(Array.isArray(reqParam) && !reqParam.length){\n        return(false);\n    }\n    return(true);\n}\n\nfunction hasName(name){\n    if(typeof name === 'undefined' || name === null){\n        return(false);\n    }\n    if(name.length === 0){\n        return(false);\n    }\n    return(true);\n}\n\nfunction isValidEmail(email){\n    const regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if(typeof email === 'undefined' || email === null){\n        return(false);\n    }\n    if(email.length === 0){\n        return(false);\n    }\n    if(!regex.test(email)){\n        return(false);\n    }\n    return(true);\n}\n\nconst getReadyToSubmit = (request) => {\n    if(!isSelected(request.dataset)){\n        return(false)\n    }\n    if(!isSelected(request.drugSensitivity)){\n        return(false);\n    }\n    if(!hasName(request.name)){return(false)}\n\n    if(!isValidEmail(request.email)){return(false)}\n\n    if(!isSelected(request.genome) && !(request.dataset.name === 'CTRPv2' || request.dataset.name === 'FIMM')){\n        return(false);\n    }\n    if(!isSelected(request.rnaTool) && !(request.dataset.name === 'CTRPv2' || request.dataset.name === 'FIMM')){\n        return(false);\n    }\n    if(!isSelected(request.rnaRef) && !(request.dataset.name === 'CTRPv2' || request.dataset.name === 'FIMM')){\n        return(false);\n    }\n\n    return(true);\n}\n\nconst PSetRequestForm = (props) => {\n\n    const context = useContext(SearchReqContext);\n    const [readyToSubmit, setReadyToSubmit] = useState(false);\n\n    useEffect(() => {\n        setReadyToSubmit(getReadyToSubmit(context.parameters));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [context.parameters]);\n\n    const submitRequest = async event => {\n        event.preventDefault();\n        let dataset = {\n            name: context.parameters.dataset.name, \n            label: context.parameters.dataset.label, \n            versionInfo: context.parameters.drugSensitivity.version, \n            filteredSensitivity: context.parameters.filteredSensitivity\n        }\n        let reqData = {...context.parameters};\n        let dataType = context.parameters.defaultData.concat(context.parameters.dataType);\n        let rnaRef = {...context.parameters.rnaRef};\n\n        reqData.dataset = dataset;\n        reqData.dataType = dataType;\n        reqData.rnaRef = (Object.keys(rnaRef).length === 0 && rnaRef.constructor === Object ? [] : [rnaRef]);\n        \n        // delete any unnecessary fields for the database.\n        delete reqData.canonicalOnly;\n        delete reqData.drugSensitivity;\n        delete reqData.filteredSensitivity;\n        delete reqData.defaultData;\n        delete reqData.search;\n        reqData.dataType.forEach(dt => {\n            delete dt.hidden;\n            delete dt.options;\n        });\n        reqData.rnaRef.forEach(ref => {delete ref.hidden});\n\n        console.log(reqData);\n        \n        const res = await trackPromise(fetch('/api/pset/request', {\n                method: 'POST',\n                body: JSON.stringify({reqData: reqData}),\n                headers: {'Content-type': 'application/json'}\n            }));\n        const resData = await res.json();\n        props.onRequestComplete(res.ok, resData);\n        // props.onRequestComplete(true, {});\n    }\n\n    const SubmitRequestButton = () => {\n        const {promiseInProgress} = usePromiseTracker();\n        return(\n            promiseInProgress ? \n                <LoaderContainer>\n                    <Loader type=\"ThreeDots\" color=\"#3D405A\" height={100} width={100} />\n                </LoaderContainer>\n                :\n                <Button label='Submit Request' type='submit' disabled={!readyToSubmit} onClick={submitRequest}/>\n        );\n    }\n\n    return(\n        <RequestForm>\n            <h3>Request PSet</h3>\n            <CustomInputText \n                label='PSet Name:'\n                value={context.parameters.name || ''} \n                onChange={(e) => {context.setParameters({...context.parameters, name: e.target.value, search: false})}}\n            />\n            <CustomInputText \n                label='Email to receive DOI:'\n                value={context.parameters.email || ''} \n                onChange={(e) => {context.setParameters({...context.parameters, email: e.target.value, search: false})}}\n            />\n            <div>\n                <SubmitRequestButton />\n            </div>\n        </RequestForm>\n    );\n}\n\nexport default PSetRequestForm;","import React, {useState, useEffect} from 'react';\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport { dataTypes } from '../../Shared/Enums';\nimport useDataTable from '../../../hooks/useDataTable';\n\nconst PSetTable = (props) => {\n\n    const { \n        psets, \n        selectedPSets, \n        updatePSetSelection, \n        scrollHeight, \n        download, \n        authenticated, \n    } = props;\n\n    const {\n        toolsRefTemplate,\n        dataTypeTemplate,\n        nameColumnTemplate,\n        downloadTemplate,\n        filteredTemplate,\n        canonicalTemplate\n    } = useDataTable(dataTypes.pharmacogenomics);\n    \n    const [state, setState] = useState({\n        rows: 10,\n        first: 0,\n        start: 0,\n        end: 10,\n        totalRecords: 0,\n        loading: true\n    });\n\n    useEffect(()=>{\n        setState({...state, loading: false});\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return(\n        <DataTable \n            value={psets} \n            selection={selectedPSets} \n            onSelectionChange={updatePSetSelection} \n            paginator={true} \n            rows={state.rows} \n            resizableColumns={true} \n            columnResizeMode=\"fit\"\n            scrollable={true} \n            scrollHeight={scrollHeight}\n        >\n            {\n                authenticated && \n                <Column selectionMode=\"multiple\" style={{width: '40px', textAlign: 'center'}} />\n            }\n            <Column className='textField' field='name' header='Name' style={{width:'150px'}} body={nameColumnTemplate} sortable={true} />\n            <Column className='textField' field='dataset.name' header='Dataset' style={{width:'100px'}} sortable={true} />\n            <Column className='textField' field='dataset.versionInfo' header='Drug Sensitivity' style={{width:'120px'}} sortable={true} />\n            <Column field='dataset.filteredSensitivity' body={filteredTemplate} style={{width:'90px', textAlign: 'center'}} header='Filtered Drug Sensitivity' />\n            <Column field='rnaTool' body={toolsRefTemplate} style={{width:'120px'}} header='RNA Tool' sortable={true}  />\n            <Column field='rnaRef' body={toolsRefTemplate} style={{width:'120px'}} header='RNA Ref' sortable={true} />\n            <Column field='dataType' body={dataTypeTemplate} style={{width:'125px'}} header='Molecular Data' />\n            <Column field='canonical' body={canonicalTemplate} style={{width:'90px', textAlign: 'center'}} header='Canonical' />\n            {\n                download && \n                <Column field='downloadLink' body={downloadTemplate} style={{width:'90px', textAlign: 'center'}} header='Download' /> \n            }\n        </DataTable>\n    );\n\n}\n\nexport default PSetTable;","import React, {useState, useEffect, useContext} from 'react';\nimport { AuthContext } from '../../../hooks/Context';\nimport useDatasetSearch from '../../../hooks/useDatasetSearch';\nimport SearchReqContext from '../SearchReqContext';\n\nimport { SearchReqWrapper, MainPanel, SearchReqPanel } from '../SearchReqStyle';\nimport PSetFilter from './PSetFilter';\nimport PSetRequestForm from './PSetRequestForm';\nimport PSetTable from './PSetTable';\nimport SearchSummary from '../SearchSummary';\nimport SaveDatasetButton from '../../Shared/Buttons/SaveDatasetButton';\nimport SearchTableLoader from '../SearchTableLoader';\nimport {Messages} from 'primereact/messages';\nimport {dataTypes} from '../../Shared/Enums';\n\nconst PSetSearch = () => {\n    \n    const auth = useContext(AuthContext);\n    const { searchAll, search } = useDatasetSearch(dataTypes.pharmacogenomics);\n\n    const [psets, setPSets] = useState([]);\n    const [selectedPSets, setSelectedPSets] = useState([]);\n    const [isRequest, setIsRequest] = useState(false);\n    \n    const [parameters, setParameters] = useState({\n        dataset: [],\n        drugSensitivity: [],\n        canonicalOnly: false,\n        filteredSensitivity: false,\n        genome: [],\n        dataType: [],\n        defaultData: [],\n        rnaTool: [],\n        rnaRef: [],\n        name: '',\n        email: '',\n        search: false\n    });\n\n    const [ready, setReady] = useState(false)\n\n    useEffect(() => {\n        const initializeView = async () => {\n            const psets = await search({...parameters, status: 'complete', private: false});\n            console.log(psets);\n            setPSets(psets);\n            setReady(true);\n        }\n        initializeView();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {   \n        async function searchPSets() {\n            console.log('search');\n            console.log(parameters);\n            let copy = JSON.parse(JSON.stringify(parameters));\n            Object.keys(copy).forEach(key => {\n                if(!Array.isArray(copy[key]) && !(key === 'canonicalOnly' || key === 'filteredSensitivity' || key === 'search' || key === 'name' || key === 'email')){\n                    copy[key] = [copy[key]];\n                }\n            });\n            const psets = await search({...copy, status: 'complete', private: false});\n            setPSets(psets);\n        }\n\n        if(parameters.search){\n            searchPSets();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [parameters]);\n\n    const showMessage = (status, data) => {\n        let severity = status ? 'success' : 'error';\n        PSetSearch.messages.show({severity: severity, summary: data.summary, detail: data.message, sticky: true});\n        setSelectedPSets([]);\n    }\n        \n    return(\n        <SearchReqContext.Provider \n            value={{ \n                parameters: parameters, \n                setParameters: setParameters, \n                isRequest: isRequest, \n                setIsRequest: setIsRequest\n            }}\n        >\n            <div className='pageContent'>\n                <SearchReqWrapper>\n                    <PSetFilter />\n                    <MainPanel>\n                        <Messages ref={(el) => PSetSearch.messages = el} />\n                        <SearchReqPanel>\n                            <div>\n                                <SearchSummary \n                                    title='Search or Request Pharmacogenomic Datasets (PSets)' \n                                    searchAll={searchAll} \n                                    matchNum={psets.length} \n                                />\n                                {\n                                    auth.user ?\n                                    <SaveDatasetButton \n                                        selectedDatasets={selectedPSets} \n                                        disabled={selectedPSets.length > 0 ? false : true} \n                                        onSaveComplete={showMessage} \n                                    />\n                                    :\n                                    '*Login or register to save existing PSets to your profile.'\n                                }\n                            </div>\n                            {\n                                isRequest &&\n                                <PSetRequestForm onRequestComplete={showMessage} />\n                            }\n                        </SearchReqPanel>\n                        {\n                            ready ?\n                            <PSetTable \n                                psets={psets} \n                                selectedPSets={selectedPSets} \n                                updatePSetSelection={(e) => {setSelectedPSets(e.value)}} \n                                scrollHeight='600px'\n                                authenticated={auth.user ? true : false} \n                                download={true}\n                            /> \n                            :\n                            <SearchTableLoader />\n                        }  \n                    </MainPanel>\n                </SearchReqWrapper>\n            </div>\n        </SearchReqContext.Provider>\n    );\n}\n\nexport default PSetSearch;","import React from 'react';\nimport {dataTypes} from '../Shared/Enums';\nimport PSetSearch from './PSet/PSetSearch';\nimport ToxicoSetSearch from './ToxicoSet/ToxicoSetSearch';\nimport XevaSetSearch from './XevaSet/XevaSetSearch';\n\nconst SearchRequst = (props) => {\n    return(\n        <React.Fragment>\n            {props.match.params.datatype === dataTypes.pharmacogenomics && <PSetSearch />}\n            {props.match.params.datatype === dataTypes.toxicogenomics && <ToxicoSetSearch />}\n            {props.match.params.datatype === dataTypes.xenographic && <XevaSetSearch />}\n        </React.Fragment>\n    );\n}\n\nexport default SearchRequst;","import React from 'react';\nimport { Button } from 'primereact/button';\n\nconst DownloadButton = (props) => {\n\n    const { className, datasetType, doi, downloadLink, mode, disabled, label, tooltip } = props;\n\n    const download = async (event) => {\n        event.preventDefault();\n\n        const anchor = document.createElement('a');\n        anchor.setAttribute('download', null);\n        anchor.style.display = 'none';\n        anchor.setAttribute('href', downloadLink)\n        document.body.appendChild(anchor);\n        anchor.click();\n        document.body.removeChild(anchor);\n\n        if(mode === 'dataset'){\n            await fetch(`/api/${datasetType}/download`, {\n                method: 'POST',\n                body: JSON.stringify({datasetDOI: doi}),\n                headers: {'Content-type': 'application/json'}\n            });\n        }\n    }\n\n    return(\n        <Button \n            className={className} \n            label={label} \n            icon='pi pi-download'\n            disabled={disabled} \n            onClick={download}\n            tooltip={tooltip}\n        />\n    );\n}\n\nexport default DownloadButton;","import React, { useRef, useEffect } from 'react';\nimport { Messages } from 'primereact/messages';\nimport styled from 'styled-components';\n\nconst StyledMessages = styled(Messages)`\n    .p-message {\n        font-size: 12px;\n        .p-message-icon {\n            font-size: 18px;\n            font-weight: bold;\n        }\n        .p-message-summary {\n            font-size: 14px;\n            font-weight: bold;\n            padding-right: 10px;\n        }\n    }\n`;\n\nconst CustomMessages = (props) => {\n    const { trigger, message } = props;\n    const messages = useRef(null);\n\n    useEffect(() => {\n        if(trigger){\n            messages.current.show([\n                { \n                    severity: message.severity, \n                    summary: message.summary, \n                    detail: message.detail, \n                    sticky: message.sticky \n                }\n            ]);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [trigger]);\n\n    return(\n        <StyledMessages ref={messages} />\n    );\n}\n\nexport default CustomMessages;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { Button } from 'primereact/button';\nimport { Dialog } from 'primereact/dialog';\nimport { Accordion, AccordionTab } from 'primereact/accordion';\nimport Loader from 'react-loader-spinner';\nimport {usePromiseTracker} from \"react-promise-tracker\";\nimport {trackPromise} from 'react-promise-tracker';\n\nimport DownloadButton from '../components/Shared/Buttons/DownloadButton';\nimport CustomMessages from '../components/Shared/CustomMessages';\nimport { dataTypes } from '../components/Shared/Enums';\n\nconst Header = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    margin-bottom: 15px;\n    .title {\n        font-size: 20px;\n        font-weight: bold;\n    }\n    .left {\n        margin-right: 30px;\n    }\n`;\n\nconst StyledAccordion = styled(Accordion)`\n    width: 100%;\n    margin-top: 10px;\n    margin-bottom: 30px;\n    h4 {\n        margin-left: 20px;\n        font-size: 14px;\n        max-width: 90%;\n    }\n`;\n\nconst MessageContainer = styled.div`\n    margin-bottom: 10px;\n`;\n\nconst sharelinkMessage = {\n    severity: 'success',\n    summary: 'Sharable Link',\n    detail: '',\n    sticky: true\n}\n\nconst successMessage = {\n    severity: 'success',\n    summary: 'Dataset Published',\n    detail: 'Your dataset is now publicly available',\n    sticky: true\n}\n\nconst errorMessage = {\n    severity: 'error',\n    summary: 'Error Occurred',\n    detail: 'An error occurred on the server',\n    sticky: true\n}\n\nconst useSingleDataset = (datasetType, doi) => {\n    const {promiseInProgress} = usePromiseTracker();\n\n    const [dataset, setDataset] = useState({ready: false, data: {}});\n    const [publicView, setPublicView] = useState(false);\n    const [ownerView, setOwnerView] = useState(false);\n    const [showPublishDialog, setShowPublishDialog] = useState(false);\n    const [showMessage, setShowMessage] = useState(false);\n    const [message, setMessage] = useState();\n\n    const getLabel = () => {\n        switch(datasetType){\n            case dataTypes.pharmacogenomics:\n                return 'PSet';\n            case dataTypes.toxicogenomics:\n                return 'ToxicoSet';\n            case dataTypes.xenographic:\n                return 'XevaSet';\n            case dataTypes.radiogenomics:\n                return 'RadioSet';\n            case dataTypes.clinicalgenomics:\n                return 'ClinicalGenomics Dataset';\n            default:\n                return 'Dataset';\n        }\n    }\n    \n    const getDataset = async (shareToken=null) => {\n        try{\n            let url = shareToken ? `/api/${datasetType}/one/${doi}${shareToken}` : `/api/${datasetType}/one/${doi}`;\n            const res = await axios.get(url);\n            console.log(res.data);\n            setDataset({\n                ready: true,\n                data: res.data\n            });\n            if(res.data && !res.data.private){\n                setPublicView(true);\n            }\n            if(res.data && res.data.private && !shareToken){\n                setOwnerView(true);\n            }\n        }catch(error){\n            console.log(error);\n        }\n    }\n\n    const publishDataset = async (e) => {\n        e.preventDefault();\n        let res;\n        try{\n            setShowPublishDialog(false);\n            res = await trackPromise(axios.get(`/api/${datasetType}/publish/${doi}`));\n            console.log(res.data);\n        }catch(error){\n            console.log(error);\n        }finally{\n            setMessage(res.data ? successMessage : errorMessage);\n            setShowMessage(Math.random());\n            if(res.data){\n                setPublicView(true);\n            }\n        }\n    }\n\n    const getShareLink = async (e) => {\n        e.preventDefault();\n        let res;\n        try{\n            res = await axios.get(`/api/${datasetType}/share_link/${doi}`);\n            console.log(res.data);\n        }catch(error){\n            console.log(error);\n        }finally{\n            let message = res.data ? {...sharelinkMessage, detail: `Anyone with this link can view your dataset: ${res.data}`} : errorMessage;\n            setMessage(message);\n            setShowMessage(Math.random());\n        }\n    }\n\n    const getHeader = () => {\n        return(\n            <Header>\n                <div className='title left'>\n                    Explore {getLabel()} - {dataset.data.name}\n                </div>\n                {\n                    publicView &&\n                    <DownloadButton \n                        className='left' \n                        disabled={false} \n                        datasetType={datasetType} \n                        doi={dataset.data.doi}\n                        downloadLink={dataset.data.downloadLink}\n                        mode='dataset'\n                        label='Download Dataset'\n                        tooltip={`Donwload ${dataset.data.name} as an R object`}\n                    />\n                }\n                {\n                    publicView && dataset.data.bioComputeObject &&\n                    <DownloadButton \n                        className='left' \n                        disabled={false} \n                        datasetType={datasetType} \n                        doi={dataset.data.bioComputeObject.doi}\n                        downloadLink={dataset.data.bioComputeObject.downloadLink}\n                        mode='bioCompute'\n                        label='Download BioCompute Object'\n                        tooltip={`Donwload the BioCompute object of the pipleine used to create ${dataset.data.name}`}\n                    />\n                }\n                { \n                    ownerView && \n                    <Button \n                        className='left'\n                        label='Get sharable link' \n                        icon='pi pi-share-alt' \n                        onClick={getShareLink}\n                        tooltip={`Generates a link you can share with others to access this page.`}\n                    /> \n                }\n                { \n                    ownerView ?\n                        promiseInProgress ?\n                        <Loader type=\"ThreeDots\" color=\"#3D405A\" height={50} width={50} />\n                        :\n                        <Button \n                            className='p-button-success'\n                            label='Publish' \n                            icon='pi pi-check' \n                            onClick={(e) => {\n                                e.preventDefault();\n                                setShowPublishDialog(true);\n                            }}\n                            tooltip={`Makes ${dataset.data.name} publicly available.`}\n                        /> \n                    :\n                    ''\n                }\n            </Header>\n        );\n    }\n\n    const getGeneralInfoAccordion = (data) => {\n        return(\n            <StyledAccordion className='generalInfoAccordion' activeIndex={0}>\n                <AccordionTab header=\"General Information\">\n                    <h4>Name: {data.name}</h4>\n                    <div>\n                        <h4>Dataset DOI:  <a href={`http://doi.org/${data.doi}`} target=\"_blank\" rel='noreferrer'>{data.doi}</a></h4>\n                        {\n                            data.bioComputeDOI &&\n                            <h4>BioCompute Object DOI:  <a href={`http://doi.org/${data.bioComputeDOI}`} target=\"_blank\" rel='noreferrer'>{data.bioComputeDOI}</a></h4>\n                        }\n                    </div>\n                    <h4>Date Created: {data.dateCreated.split('T')[0]}</h4>\n                    {\n                        data.createdBy && <h4>Created By {data.createdBy} { data.canonical ? '(Canonical)' : '' }</h4>\n                    }\n                </AccordionTab>    \n            </StyledAccordion>    \n        );\n    }\n\n    const publishDialog = () => {\n        const footer = (\n            <div>\n                <Button label='Yes' onClick={publishDataset} />\n                <Button label='No' className='p-button-secondary' onClick={(e) => {setShowPublishDialog(false)}}/>\n            </div>\n        )\n        return(\n            <Dialog \n                header={`Publish ${dataset.data.name}?`} \n                footer={footer}\n                visible={showPublishDialog} \n                modal \n                onHide={(e) => {setShowPublishDialog(false)}}\n            >\n                Would you like to publish your dataset?\n                This step is irreversible.\n            </Dialog>\n        );\n    }\n    \n    const datasetMessage = (\n        <MessageContainer>\n            <CustomMessages trigger={showMessage} message={message} />\n        </MessageContainer>\n    );\n    \n    return {\n        getDataset,\n        getHeader,\n        getGeneralInfoAccordion,\n        publishDialog,\n        datasetMessage,\n        dataset\n    };\n}\n\nexport default useSingleDataset;","import styled from 'styled-components';\nimport {Accordion} from 'primereact/accordion';\n\nexport const TabContainer = styled.div`\n    width: 100%;\n`;\n\nexport const TabHeader = styled.h1`\n    margin-left: 20px;\n`;\n\nexport const TabContent = styled.div`\n    margin-left: 40px;\n    margin-right: 20px;\n`;\n\nexport const TabContentSection = styled.div`\n    margin-top: 30px;\n    margin-bottom: 20px;\n    h3 {\n        font-size: 16px;\n    }\n    .pubList {\n        margin-bottom: 10px;\n    }\n    .subContent {\n        margin-left: 20px;\n        font-size: 12px;\n        max-width: 90%;\n        .subContentHeader {\n            color: #3D405A;\n            font-weight: bold;\n            font-size: 14px;\n        }\n        td {\n            padding: 10px;\n        }\n        .code {\n            font-family: courier new;\n            font-weight: bold;\n        }\n    }\n`;\n\nexport const StyledAccordion = styled(Accordion)`\n    width: 100%;\n    margin-top: 10px;\n    margin-bottom: 30px;\n    h4 {\n        margin-left: 20px;\n        font-size: 14px;\n        max-width: 90%;\n    }\n`;","import React from 'react';\nimport { TabHeader, TabContent, TabContentSection} from '../../SingleDatasetStyle';\n\nclass DatasetTabContent extends React.Component{\n\n    render(){          \n        const publication = (\n            <div>    \n            {this.props.metadata.dataset.versionInfo.publication.length ? \n                this.props.metadata.dataset.versionInfo.publication.map((item) => \n                    <li key={item.link} className='pubList'>\n                        <div className='subContent'>{item.citation}</div>\n                        <br />\n                        <div className='subContent'><a href={item.link}>{item.link}</a></div>\n                    </li>\n                )\n                :\n                <div className=\"subContent\">\n                    Not available.\n                </div>\n                }  \n            </div> \n        );\n        \n        return(\n            <React.Fragment>\n                <TabHeader>Dataset: {this.props.metadata.dataset.label}</TabHeader>\n                <TabContent>\n                    <TabContentSection>\n                        <h3>Drug Sensitivity</h3>\n                        <h4 className='subContent'>Source: {\n                            this.props.metadata.dataset.versionInfo.drugSensitivity.source ? \n                            <a href={this.props.metadata.dataset.versionInfo.drugSensitivity.source}>{this.props.metadata.dataset.versionInfo.drugSensitivity.source}</a> \n                            : 'Not available'\n                            }\n                        </h4>\n                        <h4 className='subContent'>Version: {this.props.metadata.dataset.versionInfo.drugSensitivity.version}</h4>\n                        <h4 className='subContent'>Filtered Sensitivity Data: {this.props.metadata.dataset.filteredSensitivity ? 'YES' : 'NO'}</h4>\n                    </TabContentSection>\n                    \n                    <TabContentSection>\n                        <h3>Publication: </h3>\n                        <ul>\n                            {publication}\n                        </ul> \n                    </TabContentSection>\n                    {\n                        this.props.metadata.dataset.acknowledgement &&\n                        <TabContentSection>\n                            <h3>Acknowledgement</h3>\n                            <div className='subContent'>{ this.props.metadata.dataset.acknowledgement }</div>\n                        </TabContentSection>\n                    }\n                    <TabContentSection>\n                        <h3>Genome Version</h3>\n                        <div className='subContent'>{this.props.metadata.genome.name ? this.props.metadata.genome.name : \"Not Available\"}</div>\n                    </TabContentSection>\n                </TabContent> \n            </React.Fragment>\n        );\n    }\n}\n\nexport default DatasetTabContent;","import React from 'react';\nimport { TabContent, TabContentSection} from '../../SingleDatasetStyle';\n\nconst DisclaimerTabContent = (props) => {\n    const { notes } = props;\n    return(\n        <TabContent>\n            <TabContentSection>\n                <h3>Disclaimer</h3>\n                {\n                    <div dangerouslySetInnerHTML={{__html: notes.disclaimer}}></div>\n                }\n            </TabContentSection>\n            <TabContentSection>\n                <h3>Data Usage Policy</h3>\n                {\n                    <div dangerouslySetInnerHTML={{__html: notes.usagePolicy}}></div>\n                }\n            </TabContentSection>\n            <TabContentSection>\n                <h3>Please cite the following when using these data</h3>\n                {\n                    notes.citations.map((item, i) => (\n                        <div className='pubList' key={i} dangerouslySetInnerHTML={{__html: item}}></div>\n                    ))\n                }\n            </TabContentSection>\n        </TabContent> \n    );\n}\n\nexport default DisclaimerTabContent;","import React from 'react';\nimport { TabContentSection} from '../../SingleDatasetStyle';\n\nconst getType = function(type){\n    switch(type){\n        case 'rna':\n            return 'Microarray'\n        case 'cnv':\n            return 'Copy Number Variation'\n        case 'mut':\n            return 'Mutation'\n        case 'fusion':\n            return 'Fusion'\n        default:\n            return ''\n    }\n}\n\nconst AccompanyDataTabContent = props => {\n    \n    return(\n        <React.Fragment>\n            {\n                props.data.map(d => {\n                    return(\n                        <div key={Math.random()}>\n                        {\n                            Array.isArray(d.source) ?\n                            d.source.map(s => {\n                                return(\n                                    <TabContentSection key={Math.random()}>\n                                        <h3>{s.label}</h3>\n                                        <h4 className='subContent'>Source: {s.source.length > 0 ? <a href={s.source}>{s.source}</a> : 'Not available'}</h4>\n                                    </TabContentSection>\n                                )\n                            })\n                            :\n                            <TabContentSection key={Math.random()}>\n                                <h3>{getType(d.type)}</h3>\n                                <h4 className='subContent'>Source: {d.source.length > 0 ? <a href={d.source}>{d.source}</a> : 'Not available'}</h4>\n                            </TabContentSection>\n                        }\n                        </div>\n                    )\n                })\n            }\n        </React.Fragment>    \n    )\n}\n\nexport default AccompanyDataTabContent","import React from 'react';\nimport {PSetToolAccordion, RNARefAccordion} from '../PSetAccordion';\nimport AccompanyDataTabContent from './AccompanyDataTabContent';\nimport { TabHeader, TabContent, TabContentSection} from '../../SingleDatasetStyle';\n\nconst RNATabContent = props => {\n    const rawSeqDataRNA = props.metadata.find(x => x.name === 'rawSeqDataRNA')\n    const rnaRef = props.metadata.find(x => x.name === 'rnaRef')\n    const rnaTool = props.metadata.find(x => x.name === 'rnaTool')\n    const accRNA = props.metadata.find(x => x.name === 'accRNA')\n\n    return(\n        <React.Fragment>\n            <TabHeader>RNA Data</TabHeader>\n            <TabContent>\n                {\n                    rawSeqDataRNA &&\n                    <TabContentSection>\n                        <h3>Raw Data Source: </h3>\n                        <div className='subContent'>\n                        {\n                            rawSeqDataRNA.value ? \n                            <a href={rawSeqDataRNA.value}>{rawSeqDataRNA.value}</a>\n                            :\n                            'Not Available'\n                        }\n                        </div>\n                    </TabContentSection>\n                }\n                {\n                    rnaRef &&\n                    <TabContentSection>\n                        <h3>RNA Transcriptome</h3>\n                        <RNARefAccordion items={rnaRef.value} />\n                    </TabContentSection>\n                }\n                {\n                    rnaTool &&\n                    <TabContentSection>\n                        <h3>Tools and Commands Used</h3>\n                        <PSetToolAccordion items={rnaTool.value} />\n                    </TabContentSection>\n                }\n                {\n                    rnaTool &&\n                    <TabContentSection>\n                        <h3>Data Transformations Applied</h3>\n                        <div className='subContent'>\n                            <table>\n                                <tbody>\n                                    <tr className='subContentSection'>\n                                        <td><span className='subContentHeader'>Gene TPM Values:</span></td>\n                                        <td>After estimation by the tool detailed above, gene TPM values are transformed by <span className='code'>log2(x + 0.001)</span>.</td>\n                                    </tr>\n                                    <tr className='subContentSection'>\n                                        <td><span className='subContentHeader'>Gene Count Values:</span></td>\n                                        <td>After estimation by the tool detailed above, gene count values are transformed by <span className='code'>log2(x + 1)</span>.</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </TabContentSection>\n                }\n                {\n                    accRNA &&\n                    <AccompanyDataTabContent data={accRNA.value} />\n                }\n            </TabContent>\n        </React.Fragment>\n    );\n}\n\nexport default RNATabContent;","import React from 'react';\nimport {PSetToolAccordion, DNARefAccordion} from '../PSetAccordion';\nimport AccompanyDataTabContent from './AccompanyDataTabContent';\nimport { TabHeader, TabContent, TabContentSection} from '../../SingleDatasetStyle';\n\nconst DNATabContent = props => {\n    const rawSeqDataDNA = props.metadata.find(x => x.name === 'rawSeqDataDNA')\n    const dnaRef = props.metadata.find(x => x.name === 'dnaRef')\n    const dnaTool = props.metadata.find(x => x.name === 'dnaTool')\n    const accDNA = props.metadata.find(x => x.name === 'accDNA')\n\n    return(\n        <React.Fragment>\n            <TabHeader>DNA Data</TabHeader>\n            <TabContent>\n                {\n                    rawSeqDataDNA &&\n                    <TabContentSection>\n                        <h3>Raw Data Source: </h3>\n                        <div className='subContent'>\n                            <a href={rawSeqDataDNA.value}>{rawSeqDataDNA.value}</a>\n                        </div>\n                    </TabContentSection>\n                }\n                {\n                    dnaRef &&\n                    <TabContentSection>\n                        <h3>Exome Reference</h3>\n                        <DNARefAccordion items={dnaRef.value} />\n                    </TabContentSection>\n                }\n                {\n                    dnaTool &&\n                    <TabContentSection>\n                        <h3>Tools and Commands Used</h3>\n                        <PSetToolAccordion items={dnaTool.value} />\n                    </TabContentSection>\n                }\n                {\n                    accDNA &&\n                    <AccompanyDataTabContent data={accDNA.value} />\n                }\n            </TabContent>\n        </React.Fragment>\n    );\n}\n\nexport default DNATabContent;","import React from 'react';\nimport { TabHeader, TabContent, StyledAccordion} from '../../SingleDatasetStyle';\nimport { AccordionTab } from 'primereact/accordion';\nimport styled from 'styled-components';\n\nconst PipelineContent = styled.div`\n    display: flex;\n    align-items: ${props => props.alignTop ? 'baseline' : 'center'};\n    h3 {\n        margin-right: 10px;\n    }\n    .pipeline-execution {\n        margin-left: 10px;\n        line-height: 15px;\n    }\n`\n\nconst PipelineTabContent = props => {\n    return(\n        <React.Fragment>\n            <TabHeader>Pipeline Data</TabHeader>\n            <TabContent>\n                <PipelineContent>\n                    <h3>Pachyderm CommitID:</h3>\n                    <div>{props.data.commitID}</div>\n                </PipelineContent>\n                <PipelineContent alignTop={true}>\n                    <h3>Pipeline Execution:</h3>\n                    <div className='pipeline-execution'> \n                        All ORCESTRA pipelines and associated repositories can be found here: <a href='https://github.com/BHKLAB-Pachyderm'>https://github.com/BHKLAB-Pachyderm</a>. <br />\n                        Pipeline repositories are denoted by a \"pipelines\" suffix in the GitHub repository name. <br />\n                        Pipelines within these repositories are JSON files that are executed by running the following Pacyderm command: <b>pachctl create-pipeline -f pipeline_file.json</b>. <br />\n                        Each JSON file has specified inputs that are accessed by the pipeline, along with a command section that runs a given script.\n                    </div>\n                </PipelineContent>\n                <PipelineContent>\n                    <h3>Docker Image: </h3>\n                    <a target=\"_blank\" rel='noreferrer' href={'https://hub.docker.com/r/' + props.data.config.transform.image.split(':')[0]}>\n                        {props.data.config.transform.image}\n                    </a>\n                </PipelineContent>\n                <PipelineContent>\n                    <h3>Pipeline Repository: </h3>\n                    <a target=\"_blank\" rel='noreferrer' href={props.data.config.input.cross[0].git.url}>{props.data.config.input.cross[0].git.url}</a>\n                </PipelineContent>\n                <StyledAccordion>\n                    <AccordionTab header='Pipeline Configuration File'>\n                        <pre>\n                            {JSON.stringify(props.data.config, null, 2)}\n                        </pre>\n                    </AccordionTab>\n                </StyledAccordion>\n            </TabContent>\n        </React.Fragment> \n    )\n}\n\nexport default PipelineTabContent","import React from 'react';\n// import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n// import DatasetTabContent from './DatasetTabContent';\n// import ReleaseNoteTableGroup from './ReleaseNoteTableGroup';\n\n\nconst StyledReleaseNotes = styled.div`\n    width: 95%;\n    margin-left: auto;\n    margin-right: auto;\n`\n\n// const StyledMetricsPanel = styled.div`\n//     margin-bottom: 30px;\n// `\n\n// const StyledMetricGroupMenu = styled.div`\n//     display: flex;\n//     margin-top: 15px;\n//     padding-top: 10px;\n//     padding-bottom: 10px;\n//     .menuItem {\n//         margin-right: 10px;\n//         padding-bottom: 5px;\n//         button {\n//             border: none;\n//             background: none;\n//             cursor: pointer;\n//             font-size: 16px;\n//             color: #3D405A;\n//         }\n//         button:focus {\n//             outline: none;\n//         }\n//     }\n//     .selected {\n//         button {\n//             font-weight: bold;\n//         }\n//         border-bottom: 3px solid rgb(241, 144, 33);\n//     }\n// `\n\nconst StyledMetricDataGroup = styled.div`\n    margin-top: 20px;    \n    margin-bottom: 20px;\n    table {\n        td {\n            padding: 0.3rem;\n            font-size: 14px;\n            .number {\n                color: #3D405A;\n                font-weight: bold;\n                font-size: 16px;\n            }\n        }\n        .title {\n            font-weight: bold;\n            color: #3D405A;\n        }\n    }\n`\n\nconst AdditionalInformation = styled.div`\n    margin-bottom: 20px;\n    table {\n        td {\n            padding: 0.3rem;\n            font-size: 14px;\n            .number {\n                color: #3D405A;\n                font-weight: bold;\n                font-size: 16px;\n            }\n        }\n        .title {\n            font-weight: bold;\n            color: #3D405A;\n        }\n    }\n`\n\nconst ReleaseNoteTabContent = (props) => {\n\n    //const [display, setDisplay] = useState('cellLines');\n\n    const getMetricDataText = (key, label, count) => {\n        switch(key){\n            case 'current':\n                return `${label}${count > 1 ? 's' : ''} in this dataset.`;\n            case 'new':\n                return `newly added ${label}${count > 1 ? 's' : ''}.`;\n            case 'removed':\n                return `${label}${count > 1 ? 's' : ''} ${count > 1 ? 'were' : 'was'} removed from previous version.`;\n            default:\n                return '';\n        }\n    }\n\n    const getMolDataName = (key) => {\n        switch(key){\n            case 'rnaSeq':\n                return 'RNA-seq: ';\n            case 'microarray': \n                return 'Microarray: ';\n            case 'mutation':\n                return 'Mutation: ';\n            case 'mutationExome':\n                return 'Mutation (Exome): ';\n            case 'cnv':\n                return 'CNV: ';\n            case 'fusion':\n                return 'Fusion: ';\n            case 'methylation':\n                return 'Methylation: ';\n            default:\n                return '';\n        }\n    }\n\n    const metricDataGroup = (title, name, label, data, renderRow) => (\n        <StyledMetricDataGroup>\n            <h2>{title}</h2>\n            <table>\n                <tbody>\n                    { renderRow(name, data, label) }\n                </tbody>\n            </table>\n        </StyledMetricDataGroup>\n    );\n\n    const renderDataRow = (name=null, data, label) => (\n        Object.keys(data).map(key => (\n            data[key] > 0 &&\n            <tr key={key}>\n                <td><span className='number'>{ data[key] }</span></td>\n                <td className='text'>{ getMetricDataText(key, label, data[key]) }</td>\n            </tr>\n        ))\n    );\n\n    const renderMolDataRow = (name, data) => (\n        Object.keys(data).map(key => (\n            key === 'mutationExome' ? name === 'GDSC' && molDataTableRow(key, data) :  molDataTableRow(key, data)\n        ))\n    );\n\n    const molDataTableRow = (key, data) => (\n        <tr key={key}>\n            <td className='title'>{getMolDataName(key)}</td>\n            <td>\n                {\n                    data[key].available ?  \n                    <span><span className='number'>{data[key].count}</span> cell lines {data[key].noUpdates && '(no updates from previous version)'}</span>\n                    : 'Not available for this dataset.'\n                }\n            </td>\n        </tr>\n    );\n\n    return(\n        <StyledReleaseNotes>\n            {metricDataGroup('Cell Lines', props.data.name, 'cell line', props.data.releaseNotes.cellLines, renderDataRow)} \n            {metricDataGroup('Drugs', props.data.name, 'drug', props.data.releaseNotes.drugs, renderDataRow)} \n            {metricDataGroup('Drug Sensitivity Experiments', props.data.name, 'experiment', props.data.releaseNotes.experiments, renderDataRow)} \n            {metricDataGroup('Molecular Data', props.data.name, '', props.data.releaseNotes.molData, renderMolDataRow)} \n            {\n                props.data.name === 'GDSC' &&\n                <AdditionalInformation>\n                    <h2>Additional Information</h2>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td className='title'>GDSC Official Release Notes: </td>\n                                <td>\n                                    <a href={props.data.releaseNotes.additional.link} target=\"_blank\" rel=\"noopener noreferrer\">{props.data.releaseNotes.additional.link}</a>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </AdditionalInformation>\n            }\n            {/* <StyledMetricsPanel>\n                <StyledMetricGroupMenu>\n                    <div className={display === 'cellLines' ? 'menuItem selected' : 'menuItem'}>\n                        <button type='button' onClick={() => setDisplay('cellLines')}>Cell Lines</button>\n                    </div>\n                    <div className={display === 'drugs' ? 'menuItem selected' : 'menuItem'}>\n                        <button type='button' onClick={() => setDisplay('drugs')}>Drugs</button>\n                    </div>    \n                    <div className={display === 'experiments' ? 'menuItem selected' : 'menuItem'}>\n                        <button type='button' onClick={() => setDisplay('experiments')}>Experiments</button>\n                    </div>\n                    <div className={display === 'molData' ? 'menuItem selected' : 'menuItem'}>\n                        <button type='button' onClick={() => setDisplay('molData')}>Molecular Data</button>\n                    </div>\n                </StyledMetricGroupMenu>\n                {display === 'cellLines' && <ReleaseNoteTableGroup dataset={{name: props.data.name, version: props.data.version}} type='cellLines'/>}\n                {display === 'drugs' && <ReleaseNoteTableGroup dataset={{name: props.data.name, version: props.data.version}} type='drugs'/>}\n                {display === 'experiments' && <ReleaseNoteTableGroup dataset={{name: props.data.name, version: props.data.version}} type='experiments'/>}\n                {display === 'molData' && molDataGroup(props.data.molData)}\n            </StyledMetricsPanel> */}\n        </StyledReleaseNotes>\n    );\n}\n\nexport default ReleaseNoteTabContent;","import React from 'react';\nimport { TabView,TabPanel } from 'primereact/tabview';\nimport DatasetTabContent from './TabContents/DatasetTabContent';\nimport DisclaimerTabContent from './TabContents/DisclaimerTabContent';\nimport RNATabContent from './TabContents/RNATabContent';\nimport DNATabContent from './TabContents/DNATabContent';\nimport PipelineTabContent from './TabContents/PipelineTabContent';\nimport ReleaseNoteTabContent from './TabContents/ReleaseNoteTabContent';\nimport { TabContainer } from '../SingleDatasetStyle';\n\nconst PSet = (props) => {\n    const { dataset } = props;\n    return(\n        <React.Fragment>\n            <TabContainer>\n                <TabView renderActiveOnly={false}>\n                    {\n                        dataset.tabData.map(td => (\n                            <TabPanel key={Math.random()} header={td.header}>\n                                {td.header === 'Dataset' && <DatasetTabContent metadata={td.data} />}\n                                {td.header === 'Disclaimer' && <DisclaimerTabContent notes={td.data.notes} />}\n                                {td.header === 'RNA' && <RNATabContent metadata={td.data} />}\n                                {td.header === 'DNA' && <DNATabContent metadata={td.data} />}\n                                {td.header === 'Pipeline' && <PipelineTabContent data={td.data} />}\n                                {td.header === 'Release Notes' && <ReleaseNoteTabContent data={td.data} />}\n                            </TabPanel>\n                        ))\n                    }\n                </TabView>\n            </TabContainer>\n        </React.Fragment>\n    );\n}\n\nexport default PSet;","import React from 'react';\nimport { TabHeader, TabContent, TabContentSection} from '../../SingleDatasetStyle';\n\nconst DatasetTabContent = (props) => {\n\n    const dataList = (data) => (\n        <div>    \n        {data.length ? \n            <li key={data} className='pubList'>\n                <div className='subContent'>\n                    <a href={data}>{data}</a>\n                </div>\n            </li>\n            :\n            <div className=\"subContent\">\n                Not available.\n            </div>\n            }  \n        </div> \n    );\n\n    const drugResponse = (data) => (\n        <div>    \n        {data ? \n            <li key={data} className='pubList'>\n                <div className='subContent'>\n                    Version: {data.version}\n                </div>\n                <div className='subContent'>\n                    Source: <a href={data.source}>{data.source}</a>\n                </div>\n            </li>\n            :\n            <div className=\"subContent\">\n                No drug response data in this dataset.\n            </div>\n            }  \n        </div> \n    );\n\n    const publication = (\n        <div>    \n        {props.metadata.dataset.versionInfo.publication.length ? \n            props.metadata.dataset.versionInfo.publication.map((item) => \n                <li key={item.link} className='pubList'>\n                    <div className='subContent'>{item.citation}</div>\n                    <br />\n                    <div className='subContent'><a href={item.link}>{item.link}</a></div>\n                </li>\n            )\n            :\n            <div className=\"subContent\">\n                Not available.\n            </div>\n            }  \n        </div> \n    );\n    \n    return(\n        <React.Fragment>\n            <TabHeader>Dataset: {props.metadata.dataset.label}</TabHeader>\n            <TabContent>\n                <TabContentSection>\n                    <h3>Microarray Data: </h3>\n                    <ul>\n                        {dataList(props.metadata.dataset.versionInfo.data.rawMicroarrayData)}\n                    </ul> \n                </TabContentSection>\n                <TabContentSection>\n                    <h3>Drug Response Data: </h3>\n                    <ul>\n                        {drugResponse(props.metadata.dataset.versionInfo.data.drugResponseData)}\n                    </ul> \n                </TabContentSection>\n                <TabContentSection>\n                    <h3>Publication: </h3>\n                    <ul>\n                        {publication}\n                    </ul> \n                </TabContentSection>\n            </TabContent> \n        </React.Fragment>\n    );\n}\n\nexport default DatasetTabContent;","import React from 'react';\nimport styled from 'styled-components';\n\n\nconst StyledReleaseNotes = styled.div`\n    width: 95%;\n    margin-left: auto;\n    margin-right: auto;\n`\n\nconst StyledMetricDataGroup = styled.div`\n    margin-top: 20px;    \n    margin-bottom: 20px;\n    table {\n        td {\n            padding: 0.3rem;\n            font-size: 14px;\n            .number {\n                color: #3D405A;\n                font-weight: bold;\n                font-size: 16px;\n            }\n        }\n        .title {\n            font-weight: bold;\n            color: #3D405A;\n        }\n    }\n`\n\nconst ReleaseNoteTabContent = (props) => {\n\n    const getMetricDataText = (key, label, count) => {\n        switch(key){\n            case 'current':\n                return `${label}${count > 1 ? 's' : ''} in this dataset.`;\n            case 'new':\n                return `newly added ${label}${count > 1 ? 's' : ''}.`;\n            case 'removed':\n                return `${label}${count > 1 ? 's' : ''} ${count > 1 ? 'were' : 'was'} removed from previous version.`;\n            default:\n                return '';\n        }\n    }\n\n    const metricDataGroup = (title, label, data, renderRow) => (\n        <StyledMetricDataGroup>\n            <h2>{title}</h2>\n            <table>\n                <tbody>\n                    { renderRow(data, label) }\n                </tbody>\n            </table>\n        </StyledMetricDataGroup>\n    );\n\n    const renderDataRow = (data, label) => {\n        if(data){\n            return(\n                Object.keys(data).map(key => (\n                    data[key] > 0 &&\n                    <tr key={key}>\n                        <td><span className='number'>{ data[key] }</span></td>\n                        <td className='text'>{ getMetricDataText(key, label, data[key]) }</td>\n                    </tr>\n                ))\n            );\n        }else{\n            return(\n                <tr>\n                    <td>Not Available</td>\n                    <td className='text'></td>\n                </tr>\n            );\n        }\n    }\n\n    return(\n        <StyledReleaseNotes>\n            {\n                metricDataGroup('Cell Lines', 'cell line', props.data.releaseNotes.cellLines, renderDataRow)\n            } \n            {\n                metricDataGroup('Drugs', 'drug', props.data.releaseNotes.drugs, renderDataRow)\n            } \n            {\n                metricDataGroup('Drug Sensitivity Experiments', 'experiment', props.data.releaseNotes.experiments, renderDataRow)\n            } \n        </StyledReleaseNotes>\n    );\n}\n\nexport default ReleaseNoteTabContent;","import React from 'react';\nimport { TabView,TabPanel } from 'primereact/tabview';\nimport DatasetTabContent from './TabContents/DatasetTabContent';\nimport DisclaimerTabContent from '../PSet/TabContents/DisclaimerTabContent';\nimport PipelineTabContent from '../PSet/TabContents/PipelineTabContent';\nimport ReleaseNoteTabContent from './TabContents/ReleaseNoteTabContent';\nimport { TabContainer } from '../SingleDatasetStyle';\n\nconst ToxicoSet = (props) => {\n    const { dataset } = props;\n    return(\n        <React.Fragment>\n            <TabContainer>\n                <TabView renderActiveOnly={false}>\n                    {\n                        dataset.tabData.map(td => (\n                            <TabPanel key={Math.random()} header={td.header}>\n                                {td.header === 'Dataset' && <DatasetTabContent metadata={td.data} />}\n                                {td.header === 'Disclaimer' && <DisclaimerTabContent notes={td.data.notes} />}\n                                {td.header === 'Pipeline' && <PipelineTabContent data={td.data} />}\n                                {td.header === 'Release Notes' && <ReleaseNoteTabContent data={td.data} />}\n                            </TabPanel>\n                        ))\n                    }\n                </TabView>\n            </TabContainer>\n        </React.Fragment>\n    );\n}\n\nexport default ToxicoSet;","import React from 'react';\nimport { TabHeader, TabContent, TabContentSection} from '../../SingleDatasetStyle';\n\nconst DatasetTabContent = (props) => {\n\n    const dataListDrugResponse = (data) => (\n        <div>     \n            <li key={data} className='pubList'>\n            <div className='subContent'>\n                    Version: {data.version}\n                </div>\n                <div className='subContent'>\n                    Source: <a href={data.source}>{data.source}</a>\n                </div>\n                <div className='subContent'>\n                    Data: <a href={data.data}>{data.data}</a>\n                </div>\n            </li>\n        </div> \n    );\n\n    const publication = (\n        <div>    \n        {props.metadata.dataset.versionInfo.publication.length ? \n            props.metadata.dataset.versionInfo.publication.map((item) => \n                <li key={item.link} className='pubList'>\n                    <div className='subContent'>{item.citation}</div>\n                    <br />\n                    <div className='subContent'><a href={item.link}>{item.link}</a></div>\n                </li>\n            )\n            :\n            <div className=\"subContent\">\n                Not available.\n            </div>\n            }  \n        </div> \n    );\n    \n    return(\n        <React.Fragment>\n            <TabHeader>Dataset: {props.metadata.dataset.label}</TabHeader>\n            <TabContent>\n                <TabContentSection>\n                    <h3>Drug Response Data: </h3>\n                    <ul>\n                        {dataListDrugResponse(props.metadata.dataset.versionInfo.drugSensitivity)}\n                    </ul> \n                </TabContentSection>\n                <TabContentSection>\n                    <h3>Publication: </h3>\n                    <ul>\n                        {publication}\n                    </ul> \n                </TabContentSection>\n            </TabContent> \n        </React.Fragment>\n    );\n}\n\nexport default DatasetTabContent;","import React from 'react';\nimport {Accordion,AccordionTab} from 'primereact/accordion';\n\nclass PSetToolAccordion extends React.Component {\n\n    render(){\n        const toolAccordionTabs = this.props.items.map((item) => \n            <AccordionTab key={item.name} header={item.name}>\n                {item.commands.length ? \n                    <ul>\n                        {item.commands.map((command) => \n                            <li key={command}>\n                                {command}\n                            </li>    \n                        )}\n                    </ul>\n                    :\n                    \"Not Available\"\n                }\n                   \n            </AccordionTab>\n        );\n        \n        return(\n            this.props.items.length ? \n                <Accordion multiple={true}>\n                    {toolAccordionTabs}\n                </Accordion>\n                :\n                <div className='subContent'>Not Available</div>\n        );\n    }\n\n}\n\nclass RNARefAccordion extends React.Component {\n    \n    render(){\n        const rnaRefAccordionTabs = this.props.items.map((item) => \n            <AccordionTab key={item.name} header={item.name}>\n                <ul>\n                    <li className='listItem-1'>\n                        <div>{item.name.length ? item.name : 'Currently not available'}</div>\n                        <div>{item.source.length ? <a href={item.source}>{item.source}</a> : 'Currently not available'}</div>\n                    </li>                    \n                </ul> \n            </AccordionTab>\n        );\n    \n        return(\n            this.props.items.length ? \n                <Accordion multiple={true}>\n                    {rnaRefAccordionTabs}\n                </Accordion>\n                :\n                <div className='subContent'>Not Available</div>\n        );\n    }\n    \n}\n\nclass DNARefAccordion extends React.Component {\n\n    render(){\n        const exomeRefAccordionTabs = this.props.items.map((item) => \n            <AccordionTab key={item.name} header={item.name}>\n                <ul>\n                    <li className='listItem-1'>\n                        <div>{item.name.length ? item.name: 'Currently not available'}</div>\n                        <div>{item.source.length ? <a href={item.source}>{item.source}</a> : 'Currently not available'}</div>\n                    </li>\n                    <li className='listItem-1'>\n                        <div>{item.cosmic.name}</div>\n                        <div><a href={item.cosmic.source}>{item.cosmic.source}</a> </div>\n                    </li>\n                    <li className='listItem-1'>\n                        <div>{item.exonTarget.name}</div>\n                        <div><a href={item.exonTarget.source}>{item.exonTarget.source}</a></div>\n                    </li>                       \n                </ul> \n            </AccordionTab>\n        );\n    \n        return(\n            this.props.items.length ? \n                <Accordion multiple={true}>\n                    {exomeRefAccordionTabs}\n                </Accordion>\n                :\n                <div className='subContent'>Not Available</div>\n        );\n    }\n\n}\n\nexport {\n    PSetToolAccordion,\n    RNARefAccordion,\n    DNARefAccordion\n}","import React from 'react';\nimport { TabContentSection} from '../../SingleDatasetStyle';\n\nconst getType = function(type){\n    switch(type){\n        case 'rnaseq':\n            return 'RNA Sequence'\n        case 'rna':\n            return 'Microarray'\n        case 'cnv':\n            return 'Copy Number Variation'\n        case 'mut':\n            return 'Mutation'\n        case 'fusion':\n            return 'Fusion'\n        default:\n            return ''\n    }\n}\n\nconst AccompanyDataTabContent = props => {\n    \n    return(\n        <React.Fragment>\n            {\n                props.data.map(d => {\n                    return(\n                        <div key={Math.random()}>\n                        {\n                            Array.isArray(d.source) ?\n                            d.source.map(s => {\n                                return(\n                                    <TabContentSection key={Math.random()}>\n                                        <h3>{s.label}</h3>\n                                        <h4 className='subContent'>Source: {<a href={s.source}>{s.source}</a>}</h4>\n                                    </TabContentSection>\n                                )\n                            })\n                            :\n                            <TabContentSection key={Math.random()}>\n                                <h3>{getType(d.type)}</h3>\n                                <h4 className='subContent'>Source: {<a href={d.source}>{d.source}</a>}</h4>\n                            </TabContentSection>\n                        }\n                        </div>\n                    )\n                })\n            }\n        </React.Fragment>    \n    )\n}\n\nexport default AccompanyDataTabContent","import React from 'react';\nimport {PSetToolAccordion, RNARefAccordion} from '../PSetAccordion';\nimport AccompanyDataTabContent from './AccompanyDataTabContent';\nimport { TabHeader, TabContent, TabContentSection} from '../../SingleDatasetStyle';\n\nconst RNATabContent = props => {\n    const rawSeqDataRNA = props.metadata.find(x => x.name === 'rawSeqDataRNA')\n    const rnaRef = props.metadata.find(x => x.name === 'rnaRef')\n    const rnaTool = props.metadata.find(x => x.name === 'rnaTool')\n    const accRNA = props.metadata.find(x => x.name === 'accRNA')\n\n    return(\n        <React.Fragment>\n            <TabHeader>RNA Data</TabHeader>\n            <TabContent>\n                {\n                    rawSeqDataRNA &&\n                    <TabContentSection>\n                        <h3>Raw Data Source: </h3>\n                        <div className='subContent'>\n                            <a href={rawSeqDataRNA.value}>{rawSeqDataRNA.value}</a>\n                        </div>\n                    </TabContentSection>\n                }\n                {\n                    rnaRef &&\n                    <TabContentSection>\n                        <h3>RNA Transcriptome</h3>\n                        <RNARefAccordion items={rnaRef.value} />\n                    </TabContentSection>\n                }\n                {\n                    rnaTool &&\n                    <TabContentSection>\n                        <h3>Tools and Commands Used</h3>\n                        <PSetToolAccordion items={rnaTool.value} />\n                    </TabContentSection>\n                }\n                {\n                    accRNA &&\n                    <AccompanyDataTabContent data={accRNA.value} />\n                }\n            </TabContent>\n        </React.Fragment>\n    );\n}\n\nexport default RNATabContent;","import React from 'react';\nimport {PSetToolAccordion, DNARefAccordion} from '../PSetAccordion';\nimport AccompanyDataTabContent from './AccompanyDataTabContent';\nimport { TabHeader, TabContent, TabContentSection} from '../../SingleDatasetStyle';\n\nconst DNATabContent = props => {\n    const rawSeqDataDNA = props.metadata.find(x => x.name === 'rawSeqDataDNA')\n    const dnaRef = props.metadata.find(x => x.name === 'dnaRef')\n    const dnaTool = props.metadata.find(x => x.name === 'dnaTool')\n    const accDNA = props.metadata.find(x => x.name === 'accDNA')\n\n    return(\n        <React.Fragment>\n            <TabHeader>DNA Data</TabHeader>\n            <TabContent>\n                {\n                    rawSeqDataDNA &&\n                    <TabContentSection>\n                        <h3>Raw Data Source: </h3>\n                        <div className='subContent'>\n                            <a href={rawSeqDataDNA.value}>{rawSeqDataDNA.value}</a>\n                        </div>\n                    </TabContentSection>\n                }\n                {\n                    dnaRef &&\n                    <TabContentSection>\n                        <h3>Exome Reference</h3>\n                        <DNARefAccordion items={dnaRef.value} />\n                    </TabContentSection>\n                }\n                {\n                    dnaTool &&\n                    <TabContentSection>\n                        <h3>Tools and Commands Used</h3>\n                        <PSetToolAccordion items={dnaTool.value} />\n                    </TabContentSection>\n                }\n                {\n                    accDNA &&\n                    <AccompanyDataTabContent data={accDNA.value} />\n                }\n            </TabContent>\n        </React.Fragment>\n    );\n}\n\nexport default DNATabContent;","import React from 'react';\nimport styled from 'styled-components';\n\n\nconst StyledReleaseNotes = styled.div`\n    width: 95%;\n    margin-left: auto;\n    margin-right: auto;\n`\n\nconst StyledMetricDataGroup = styled.div`\n    margin-top: 20px;    \n    margin-bottom: 20px;\n    table {\n        td {\n            padding: 0.3rem;\n            font-size: 14px;\n            .number {\n                color: #3D405A;\n                font-weight: bold;\n                font-size: 16px;\n            }\n        }\n        .title {\n            font-weight: bold;\n            color: #3D405A;\n        }\n    }\n`\n\nconst ReleaseNoteTabContent = (props) => {\n\n    const getMetricDataText = (key, label, count) => {\n        switch(key){\n            case 'current':\n                return `${label}${count > 1 ? 's' : ''} in this dataset.`;\n            case 'new':\n                return `newly added ${label}${count > 1 ? 's' : ''}.`;\n            case 'removed':\n                return `${label}${count > 1 ? 's' : ''} ${count > 1 ? 'were' : 'was'} removed from previous version.`;\n            default:\n                return '';\n        }\n    }\n\n    const metricDataGroup = (title, label, data, renderRow) => (\n        <StyledMetricDataGroup>\n            <h2>{title}</h2>\n            <table>\n                <tbody>\n                    { renderRow(data, label) }\n                </tbody>\n            </table>\n        </StyledMetricDataGroup>\n    );\n\n    const renderDataRow = (data, label) => {\n        if(data){\n            return(\n                Object.keys(data).map(key => (\n                    data[key] > 0 &&\n                    <tr key={key}>\n                        <td><span className='number'>{ data[key] }</span></td>\n                        <td className='text'>{ getMetricDataText(key, label, data[key]) }</td>\n                    </tr>\n                ))\n            );\n        }else{\n            return(\n                <tr>\n                    <td>Not Available</td>\n                    <td className='text'></td>\n                </tr>\n            );\n        }\n    }\n\n    return(\n        <StyledReleaseNotes>\n            {\n                metricDataGroup('Models', 'model', props.data.releaseNotes.models, renderDataRow)\n            } \n            {\n                metricDataGroup('Patients', 'patient', props.data.releaseNotes.patients, renderDataRow)\n            }\n            {\n                metricDataGroup('Drugs', 'drug', props.data.releaseNotes.drugs, renderDataRow)\n            } \n            {\n                metricDataGroup('Drug Sensitivity Experiments', 'experiment', props.data.releaseNotes.experiments, renderDataRow)\n            } \n        </StyledReleaseNotes>\n    );\n}\n\nexport default ReleaseNoteTabContent;","import React from 'react';\nimport { TabView,TabPanel } from 'primereact/tabview';\nimport DatasetTabContent from './TabContents/DatasetTabContent';\nimport RNATabContent from './TabContents/RNATabContent';\nimport DNATabContent from './TabContents/DNATabContent';\nimport PipelineTabContent from '../PSet/TabContents/PipelineTabContent';\nimport ReleaseNoteTabContent from './TabContents/ReleaseNoteTabContent';    \nimport { TabContainer } from '../SingleDatasetStyle';\n\nconst XevaSet = (props) => {\n    const { dataset } = props;\n    return(\n        <React.Fragment>\n            <TabContainer>\n                <TabView renderActiveOnly={false}>\n                    {\n                        dataset.tabData.map(td => (\n                            <TabPanel key={Math.random()} header={td.header}>\n                                {td.header === 'Dataset' && <DatasetTabContent metadata={td.data} />}\n                                {td.header === 'RNA' && <RNATabContent metadata={td.data} />}\n                                {td.header === 'DNA' && <DNATabContent metadata={td.data} />}\n                                {td.header === 'Pipeline' && <PipelineTabContent data={td.data} />}\n                                {td.header === 'Release Notes' && <ReleaseNoteTabContent data={td.data} />}\n                            </TabPanel>\n                        ))\n                    }\n                </TabView>\n            </TabContainer>\n        </React.Fragment>\n    );\n}\n\nexport default XevaSet;","import React from 'react';\nimport { TabHeader, TabContent, TabContentSection} from '../../SingleDatasetStyle';\n\nconst DatasetTabContent = (props) => {\n\n    const dataList = (data) => (\n        <div>    \n        {data.length ? \n            <li key={data} className='pubList'>\n                <div className='subContent'>\n                    <a href={data}>{data}</a>\n                </div>\n            </li>\n            :\n            <div className=\"subContent\">\n                Not available.\n            </div>\n            }  \n        </div> \n    );\n\n    const drugResponse = (data) => (\n        <div>    \n        {data ? \n            <li key={data} className='pubList'>\n                <div className='subContent'>\n                    Version: {data.version}\n                </div>\n                <div className='subContent'>\n                    Source: <a href={data.source}>{data.source}</a>\n                </div>\n            </li>\n            :\n            <div className=\"subContent\">\n                No drug response data in this dataset.\n            </div>\n            }  \n        </div> \n    );\n\n    const publication = (\n        <div>    \n        {props.metadata.dataset.versionInfo.publication.length ? \n            props.metadata.dataset.versionInfo.publication.map((item) => \n                <li key={item.link} className='pubList'>\n                    <div className='subContent'>{item.citation}</div>\n                    <br />\n                    <div className='subContent'><a href={item.link}>{item.link}</a></div>\n                </li>\n            )\n            :\n            <div className=\"subContent\">\n                Not available.\n            </div>\n            }  \n        </div> \n    );\n    \n    return(\n        <React.Fragment>\n            <TabHeader>Dataset: {props.metadata.dataset.label}</TabHeader>\n            <TabContent>\n                <TabContentSection>\n                    <h3>Microarray Data: </h3>\n                    <ul>\n                        {dataList(props.metadata.dataset.versionInfo.data.rawMicroarrayData)}\n                    </ul> \n                </TabContentSection>\n                <TabContentSection>\n                    <h3>Drug Response Data: </h3>\n                    <ul>\n                        {drugResponse(props.metadata.dataset.versionInfo.data.drugResponseData)}\n                    </ul> \n                </TabContentSection>\n                <TabContentSection>\n                    <h3>Publication: </h3>\n                    <ul>\n                        {publication}\n                    </ul> \n                </TabContentSection>\n            </TabContent> \n        </React.Fragment>\n    );\n}\n\nexport default DatasetTabContent;","import React from 'react';\nimport styled from 'styled-components';\n\n\nconst StyledReleaseNotes = styled.div`\n    width: 95%;\n    margin-left: auto;\n    margin-right: auto;\n`\n\nconst StyledMetricDataGroup = styled.div`\n    margin-top: 20px;    \n    margin-bottom: 20px;\n    table {\n        td {\n            padding: 0.3rem;\n            font-size: 14px;\n            .number {\n                color: #3D405A;\n                font-weight: bold;\n                font-size: 16px;\n            }\n        }\n        .title {\n            font-weight: bold;\n            color: #3D405A;\n        }\n    }\n`\n\nconst ReleaseNoteTabContent = (props) => {\n\n    const getMetricDataRowText = (key) => {\n        switch(key){\n            case 'current':\n                return('Currently Available:');\n            case 'new':\n                return('Newly Added:');\n            case 'removed':\n                return('Removed from Previous Version:');\n            default: \n                return '';\n        }\n    }\n\n    const metricDataGroup = (title, data, renderRow) => (\n        <StyledMetricDataGroup>\n            <h2>{title}</h2>\n            <table>\n                <tbody>\n                    { renderRow(data) }\n                </tbody>\n            </table>\n        </StyledMetricDataGroup>\n    );\n\n    const renderDataRow = (data) => {\n        if(data){\n            return(\n                    Object.keys(data).map(key => (\n                        data[key] !== null &&\n                        <tr key={key}>\n                            <td>\n                                {getMetricDataRowText(key)}\n                            </td>\n                            <td>\n                                <span className='number'>{ data[key].samples }</span> samples in <span className='number'>{ data[key].datasets }</span> datasets\n                            </td>\n                        </tr>\n                    )\n                )\n            );\n        }else{\n            return(\n                <tr>\n                    <td>Not Available</td>\n                    <td className='text'></td>\n                </tr>\n            );\n        }\n    }\n\n    return(\n        <StyledReleaseNotes>\n            {\n                metricDataGroup('Number of Samples', props.data.releaseNotes.samples, renderDataRow)\n            } \n        </StyledReleaseNotes>\n    );\n}\n\nexport default ReleaseNoteTabContent;","import React from 'react';\nimport { TabView,TabPanel } from 'primereact/tabview';\nimport DatasetTabContent from './TabContents/DatasetTabContent';\nimport PipelineTabContent from '../PSet/TabContents/PipelineTabContent';\nimport ReleaseNoteTabContent from './TabContents/ReleaseNoteTabContent';\nimport { TabContainer } from '../SingleDatasetStyle';\n\nconst ClinicalGenomics = (props) => {\n    const { dataset } = props;\n    return(\n        <React.Fragment>\n            <TabContainer>\n                <TabView renderActiveOnly={false}>\n                    {\n                        dataset.tabData.map(td => (\n                            <TabPanel key={Math.random()} header={td.header}>\n                                {td.header === 'Dataset' && <DatasetTabContent metadata={td.data} />}\n                                {td.header === 'Pipeline' && <PipelineTabContent data={td.data} />}\n                                {td.header === 'Release Notes' && <ReleaseNoteTabContent data={td.data} />}\n                            </TabPanel>\n                        ))\n                    }\n                </TabView>\n            </TabContainer>\n        </React.Fragment>\n    );\n}\n\nexport default ClinicalGenomics;","import React from 'react';\nimport { TabHeader, TabContent, TabContentSection} from '../../SingleDatasetStyle';\n\nconst DatasetTabContent = (props) => {\n         \n    const publication = (\n        <div>    \n        {props.metadata.dataset.versionInfo.publication.length ? \n            props.metadata.dataset.versionInfo.publication.map((item) => \n                <li key={item.link} className='pubList'>\n                    <div className='subContent'>{item.citation}</div>\n                    <br />\n                    <div className='subContent'><a href={item.link}>{item.link}</a></div>\n                </li>\n            )\n            :\n            <div className=\"subContent\">\n                Not available.\n            </div>\n            }  \n        </div> \n    );\n        \n    return(\n        <React.Fragment>\n            <TabHeader>Dataset: {props.metadata.dataset.label}</TabHeader>\n            <TabContent>\n                <TabContentSection>\n                    <h3>Radiation Sensitivity</h3>\n                    <h4 className='subContent'>Source: \n                    {\n                        props.metadata.dataset.versionInfo.radiationSensitivity ? \n                        <a href={props.metadata.dataset.versionInfo.radiationSensitivity.source}>{props.metadata.dataset.versionInfo.radiationSensitivity.source}</a> \n                        : 'Not available'\n                    }\n                    </h4>\n                    <h4 className='subContent'>Version: {props.metadata.dataset.versionInfo.radiationSensitivity.version}</h4>\n                </TabContentSection>\n                \n                <TabContentSection>\n                    <h3>Publication: </h3>\n                    <ul>\n                        {publication}\n                    </ul> \n                </TabContentSection>\n                \n                <TabContentSection>\n                    <h3>Genome Version</h3>\n                    <div className='subContent'>{props.metadata.genome.name ? props.metadata.genome.name : \"Not Available\"}</div>\n                </TabContentSection>\n            </TabContent> \n        </React.Fragment>\n    );\n}\n\nexport default DatasetTabContent;","import React from 'react';\nimport {Accordion,AccordionTab} from 'primereact/accordion';\n\nclass PSetToolAccordion extends React.Component {\n\n    render(){\n        const toolAccordionTabs = this.props.items.map((item) => \n            <AccordionTab key={item.name} header={item.name}>\n                {item.commands.length ? \n                    <ul>\n                        {item.commands.map((command) => \n                            <li key={command}>\n                                {command}\n                            </li>    \n                        )}\n                    </ul>\n                    :\n                    \"Not Available\"\n                }\n                   \n            </AccordionTab>\n        );\n        \n        return(\n            this.props.items.length ? \n                <Accordion multiple={true}>\n                    {toolAccordionTabs}\n                </Accordion>\n                :\n                <div className='subContent'>Not Available</div>\n        );\n    }\n\n}\n\nclass RNARefAccordion extends React.Component {\n    \n    render(){\n        const rnaRefAccordionTabs = this.props.items.map((item) => \n            <AccordionTab key={item.name} header={item.name}>\n                <ul>\n                    <li className='listItem-1'>\n                        <div>{item.name.length ? item.name : 'Currently not available'}</div>\n                        <div>{item.source.length ? <a href={item.source}>{item.source}</a> : 'Currently not available'}</div>\n                    </li>                    \n                </ul> \n            </AccordionTab>\n        );\n    \n        return(\n            this.props.items.length ? \n                <Accordion multiple={true}>\n                    {rnaRefAccordionTabs}\n                </Accordion>\n                :\n                <div className='subContent'>Not Available</div>\n        );\n    }\n    \n}\n\nclass DNARefAccordion extends React.Component {\n\n    render(){\n        const exomeRefAccordionTabs = this.props.items.map((item) => \n            <AccordionTab key={item.name} header={item.name}>\n                <ul>\n                    <li className='listItem-1'>\n                        <div>{item.name.length ? item.name: 'Currently not available'}</div>\n                        <div>{item.source.length ? <a href={item.source}>{item.source}</a> : 'Currently not available'}</div>\n                    </li>\n                    <li className='listItem-1'>\n                        <div>{item.cosmic.name}</div>\n                        <div><a href={item.cosmic.source}>{item.cosmic.source}</a> </div>\n                    </li>\n                    <li className='listItem-1'>\n                        <div>{item.exonTarget.name}</div>\n                        <div><a href={item.exonTarget.source}>{item.exonTarget.source}</a></div>\n                    </li>                       \n                </ul> \n            </AccordionTab>\n        );\n    \n        return(\n            this.props.items.length ? \n                <Accordion multiple={true}>\n                    {exomeRefAccordionTabs}\n                </Accordion>\n                :\n                <div className='subContent'>Not Available</div>\n        );\n    }\n\n}\n\nexport {\n    PSetToolAccordion,\n    RNARefAccordion,\n    DNARefAccordion\n}\n","import React from 'react';\nimport { TabContentSection} from '../../SingleDatasetStyle';\n\nconst getType = function(type){\n    switch(type){\n        case 'rna':\n            return 'Microarray'\n        case 'cnv':\n            return 'Copy Number Variation'\n        case 'mut':\n            return 'Mutation'\n        case 'fusion':\n            return 'Fusion'\n        default:\n            return ''\n    }\n}\n\nconst AccompanyDataTabContent = props => {\n    \n    return(\n        <React.Fragment>\n            {\n                props.data.map(d => {\n                    return(\n                        <div key={Math.random()}>\n                        {\n                            Array.isArray(d.source) ?\n                            d.source.map(s => {\n                                return(\n                                    <TabContentSection key={Math.random()}>\n                                        <h3>{s.label}</h3>\n                                        <h4 className='subContent'>Source: {<a href={s.source}>{s.source}</a>}</h4>\n                                    </TabContentSection>\n                                )\n                            })\n                            :\n                            <TabContentSection key={Math.random()}>\n                                <h3>{getType(d.type)}</h3>\n                                <h4 className='subContent'>Source: {<a href={d.source}>{d.source}</a>}</h4>\n                            </TabContentSection>\n                        }\n                        </div>\n                    )\n                })\n            }\n        </React.Fragment>    \n    )\n}\n\nexport default AccompanyDataTabContent","import React from 'react';\nimport {PSetToolAccordion, RNARefAccordion} from '../PSetAccordion';\nimport AccompanyDataTabContent from './AccompanyDataTabContent';\nimport { TabHeader, TabContent, TabContentSection} from '../../SingleDatasetStyle';\n\nconst RNATabContent = props => {\n    const rawSeqDataRNA = props.metadata.find(x => x.name === 'rawSeqDataRNA')\n    const rnaRef = props.metadata.find(x => x.name === 'rnaRef')\n    const rnaTool = props.metadata.find(x => x.name === 'rnaTool')\n    const accRNA = props.metadata.find(x => x.name === 'accRNA')\n\n    return(\n        <React.Fragment>\n            <TabHeader>RNA Data</TabHeader>\n            <TabContent>\n                {\n                    rawSeqDataRNA &&\n                    <TabContentSection>\n                        <h3>Raw Data Source: </h3>\n                        <div className='subContent'>\n                            <a href={rawSeqDataRNA.value}>{rawSeqDataRNA.value}</a>\n                        </div>\n                    </TabContentSection>\n                }\n                {\n                    rnaRef &&\n                    <TabContentSection>\n                        <h3>RNA Transcriptome</h3>\n                        <RNARefAccordion items={rnaRef.value} />\n                    </TabContentSection>\n                }\n                {\n                    rnaTool &&\n                    <TabContentSection>\n                        <h3>Tools and Commands Used</h3>\n                        <PSetToolAccordion items={rnaTool.value} />\n                    </TabContentSection>\n                }\n                {\n                    rnaTool &&\n                    <TabContentSection>\n                        <h3>Data Transformations Applied</h3>\n                        <div className='subContent'>\n                            <table>\n                                <tbody>\n                                    <tr className='subContentSection'>\n                                        <td><span className='subContentHeader'>Gene TPM Values:</span></td>\n                                        <td>After estimation by the tool detailed above, gene TPM values are transformed by <span className='code'>log2(x + 0.001)</span>.</td>\n                                    </tr>\n                                    <tr className='subContentSection'>\n                                        <td><span className='subContentHeader'>Gene Count Values:</span></td>\n                                        <td>After estimation by the tool detailed above, gene count values are transformed by <span className='code'>log2(x + 1)</span>.</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </TabContentSection>\n                }\n                {\n                    accRNA &&\n                    <AccompanyDataTabContent data={accRNA.value} />\n                }\n            </TabContent>\n        </React.Fragment>\n    );\n}\n\nexport default RNATabContent;","import React from 'react';\nimport {PSetToolAccordion, DNARefAccordion} from '../PSetAccordion';\nimport AccompanyDataTabContent from './AccompanyDataTabContent';\nimport { TabHeader, TabContent, TabContentSection} from '../../SingleDatasetStyle';\n\nconst DNATabContent = props => {\n    const rawSeqDataDNA = props.metadata.find(x => x.name === 'rawSeqDataDNA')\n    const dnaRef = props.metadata.find(x => x.name === 'dnaRef')\n    const dnaTool = props.metadata.find(x => x.name === 'dnaTool')\n    const accDNA = props.metadata.find(x => x.name === 'accDNA')\n\n    return(\n        <React.Fragment>\n            <TabHeader>DNA Data</TabHeader>\n            <TabContent>\n                {\n                    rawSeqDataDNA &&\n                    <TabContentSection>\n                        <h3>Raw Data Source: </h3>\n                        <div className='subContent'>\n                            <a href={rawSeqDataDNA.value}>{rawSeqDataDNA.value}</a>\n                        </div>\n                    </TabContentSection>\n                }\n                {\n                    dnaRef &&\n                    <TabContentSection>\n                        <h3>Exome Reference</h3>\n                        <DNARefAccordion items={dnaRef.value} />\n                    </TabContentSection>\n                }\n                {\n                    dnaTool &&\n                    <TabContentSection>\n                        <h3>Tools and Commands Used</h3>\n                        <PSetToolAccordion items={dnaTool.value} />\n                    </TabContentSection>\n                }\n                {\n                    accDNA &&\n                    <AccompanyDataTabContent data={accDNA.value} />\n                }\n            </TabContent>\n        </React.Fragment>\n    );\n}\n\nexport default DNATabContent;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledReleaseNotes = styled.div`\n    width: 95%;\n    margin-left: auto;\n    margin-right: auto;\n`\n\nconst StyledMetricDataGroup = styled.div`\n    margin-top: 20px;    \n    margin-bottom: 20px;\n    table {\n        td {\n            padding: 0.3rem;\n            font-size: 14px;\n            .number {\n                color: #3D405A;\n                font-weight: bold;\n                font-size: 16px;\n            }\n        }\n        .title {\n            font-weight: bold;\n            color: #3D405A;\n        }\n    }\n`\n\nconst ReleaseNoteTabContent = (props) => {\n\n    const getMetricDataText = (key, label, count) => {\n        switch(key){\n            case 'current':\n                return `${label}${count > 1 ? 's' : ''} in this dataset.`;\n            case 'new':\n                return `newly added ${label}${count > 1 ? 's' : ''}.`;\n            case 'removed':\n                return `${label}${count > 1 ? 's' : ''} ${count > 1 ? 'were' : 'was'} removed from previous version.`;\n            default: \n                return '';\n        }\n    }\n\n    const metricDataGroup = (title, name, label, data, renderRow) => (\n        <StyledMetricDataGroup>\n            <h2>{title}</h2>\n            <table>\n                <tbody>\n                    { renderRow(name, data, label) }\n                </tbody>\n            </table>\n        </StyledMetricDataGroup>\n    );\n\n    const renderDataRow = (name=null, data, label) => (\n        Object.keys(data).map(key => (\n            data[key] > 0 &&\n            <tr key={key}>\n                <td><span className='number'>{ data[key] }</span></td>\n                <td className='text'>{ getMetricDataText(key, label, data[key]) }</td>\n            </tr>\n        ))\n    );\n\n    return(\n        <StyledReleaseNotes>\n            {metricDataGroup('Samples', props.data.name, 'sample', props.data.releaseNotes.samples, renderDataRow)} \n            {metricDataGroup('Radiation Types', props.data.name, 'radiation type', props.data.releaseNotes.radiationTypes, renderDataRow)} \n        </StyledReleaseNotes>\n    );\n}\n\nexport default ReleaseNoteTabContent;","import React from 'react';\nimport { TabView,TabPanel } from 'primereact/tabview';\nimport DatasetTabContent from './TabContents/DatasetTabContent';\nimport RNATabContent from './TabContents/RNATabContent';\nimport DNATabContent from './TabContents/DNATabContent';\nimport PipelineTabContent from '../PSet/TabContents/PipelineTabContent';\nimport ReleaseNoteTabContent from './TabContents/ReleaseNoteTabContent';\nimport { TabContainer } from '../SingleDatasetStyle';\n\nconst RadioSet = (props) => {\n    const { dataset } = props;\n    return(\n        <React.Fragment>\n            <TabContainer>\n                <TabView renderActiveOnly={false}>\n                    {\n                        dataset.tabData.map(td => (\n                            <TabPanel key={Math.random()} header={td.header}>\n                                {td.header === 'Dataset' && <DatasetTabContent metadata={td.data} />}\n                                {td.header === 'RNA' && <RNATabContent metadata={td.data} />}\n                                {td.header === 'DNA' && <DNATabContent metadata={td.data} />}\n                                {td.header === 'Pipeline' && <PipelineTabContent data={td.data} />}\n                                {td.header === 'Release Notes' && <ReleaseNoteTabContent data={td.data} />}\n                            </TabPanel>\n                        ))\n                    }\n                </TabView>\n            </TabContainer>\n        </React.Fragment>\n    );\n}\n\nexport default RadioSet;","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport useSingleDataset from '../../hooks/useSingleDataset';\nimport {dataTypes} from '../Shared/Enums';\nimport PSet from './PSet/PSet';\nimport ToxicoSet from './ToxicoSet/ToxicoSet';\nimport XevaSet from './XevaSet/XevaSet';\nimport ClinicalGenomics from './ClinicalGenomics/ClinicalGenomics';\nimport RadioSet from './RadioSet/RadioSet';\n\nconst SingleDataset = (props) => {\n    const location = useLocation();\n    const { \n        getDataset, \n        getHeader,\n        getGeneralInfoAccordion,\n        datasetMessage, \n        publishDialog,\n        dataset \n    } = useSingleDataset(props.match.params.datatype, `${props.match.params.id1}/${props.match.params.id2}`);\n\n    useEffect(() => {\n        const getData = async () => {\n            await getDataset(location.search);\n        }\n        getData();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return(\n        <div className='pageContent'>\n            {\n                dataset.ready &&\n                <React.Fragment>\n                    { \n                        datasetMessage \n                    }\n                    { \n                        getHeader() \n                    }\n                    { \n                        publishDialog() \n                    }\n                    { \n                        getGeneralInfoAccordion(dataset.data.generalInfo) \n                    }\n                    <React.Fragment>\n                        { \n                            props.match.params.datatype === dataTypes.pharmacogenomics && <PSet dataset={dataset.data} /> \n                        }\n                        { \n                            props.match.params.datatype === dataTypes.toxicogenomics && <ToxicoSet dataset={dataset.data} /> \n                        }\n                        { \n                            props.match.params.datatype === dataTypes.xenographic && <XevaSet dataset={dataset.data} /> \n                        }\n                        { \n                            props.match.params.datatype === dataTypes.clinicalgenomics && <ClinicalGenomics dataset={dataset.data} /> \n                        }\n                        { \n                            props.match.params.datatype === dataTypes.radiogenomics && <RadioSet dataset={dataset.data} /> \n                        }\n                    </React.Fragment>\n                </React.Fragment>\n            } \n            { !dataset.data && <h3>Dataset with the specified DOI could not be found</h3> }\n        </div>\n    );\n}\n\nexport default SingleDataset;","import React, {useState, useEffect, useContext} from 'react';\nimport './RequestStatus.css';\nimport Loader from 'react-loader-spinner';\nimport {Messages} from 'primereact/messages';\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport { AuthContext } from '../../hooks/Context';\n\nconst RequestStatus = () => {\n    \n    const auth = useContext(AuthContext);\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const getData = async () => {\n            const res = await fetch('/api/pset/search', {\n                method: 'POST',\n                body: JSON.stringify({parameters: {status: ['pending', 'in-process']}}),\n                headers: {'Content-type': 'application/json'}\n            });\n            const json = await res.json();\n            console.log(json);\n            setData(json);\n            setLoading(false);\n        }\n        getData();\n    }, []);\n\n    const show = (message) => {\n        RequestStatus.messages.show(message);\n    }\n\n    const submitRequest = async (id) => {\n        const result = await fetch(\n            '/api/pset/process', \n            { \n                method: 'POST', \n                body: JSON.stringify({id: id}), \n                headers: {'Content-type': 'application/json'} \n            }\n        );\n        const json = await result.json();\n        return({ok: result.ok, data: json});\n    }\n    \n    const onSubmit = async (event) => {\n        event.preventDefault();\n        console.log(event.target.id);\n        const result = await submitRequest(event.target.id);\n        if(result.ok){\n            show({severity: 'success', summary: result.data.summary, detail: result.data.message, sticky: true});\n        }else{\n            show({severity: 'error', summary: result.data.summary, detail: result.data.message, sticky: true});\n        }\n        const res = await fetch('/api/pset/search', {\n            method: 'POST',\n            body: JSON.stringify({parameters: {status: ['pending', 'in-process']}}),\n            headers: {'Content-type': 'application/json'}\n        });\n        const json = await res.json();\n        console.log(json);\n        setData(json);\n    }\n\n    const dateTimeTemplate = (rowData, column) => {\n        let dateTimeStr = '';\n        if(rowData[column.field]){\n            dateTimeStr = new Date(rowData[column.field]).toLocaleString(undefined, {dateStyle: 'long', timeStyle: 'medium'});\n        }\n        return(<div>{dateTimeStr}</div>)\n    }\n\n    const buttonTemplate = (rowData, column) => {\n        let button = '';\n        if(rowData.status === 'pending'){\n            button = <button id={rowData._id} onClick={onSubmit} className='dashboardBtn' type='button'>Submit</button>\n        }\n        return(<div className='dashBoardBtnContainer'>{button}</div>)\n    }\n\n    return(\n        <div className='pageContent'>\n            <div className='dashboardWrapper'>\n                <Messages ref={(el) => RequestStatus.messages = el }></Messages>\n                <div className='dashboardSummary'>\n                    <h2>Request Status</h2>\n                    <div className='dashboardSummaryContainer'>\n                        <div className='dashboardSummarySection'>\n                            <span className='number'>{ data.filter(d => d.status === 'pending').length }</span> pending request(s).\n                        </div>\n                        <div className='dashboardSummarySection'>\n                            <span className='number'>{ data.filter(d => d.status === 'in-process').length }</span> request(s) in process.\n                        </div>    \n                    </div>    \n                </div>\n                <div className='dashboardTable'>\n                    {\n                        !loading ?\n                            data.length > 0 ?\n                            <DataTable value={data} paginator={true}  scrollable={true} rows={10} >\n                                <Column className='textField' field='status' header='Status' style={{width:'2em'}} sortable={true} />\n                                <Column className='textField' field='name' header='Name' style={{width:'5em'}} sortable={true} />\n                                <Column className='textField' field='dateSubmitted' header='Submitted Date' body={dateTimeTemplate} style={{width:'4em'}} sortable={true} />\n                                <Column className='textField' field='dateProcessed' header='Process Start Date' body={dateTimeTemplate} style={{width:'4em'}} sortable={true} />\n                                { auth.user.isAdmin && <Column body={buttonTemplate} style={{width:'1.5em'}}/> }\n                            </DataTable>\n                            :\n                            <h3>There are no pending or in-process requests.</h3>\n                        :   \n                        <div className='dashboardTableLoaderContainer'>\n                            <Loader type=\"ThreeDots\" color=\"#3D405A\" height={100} width={100} />\n                        </div>\n                    } \n                </div> \n            </div>   \n        </div>  \n    );\n}\n\nexport default RequestStatus;","import React from 'react';\nimport Plotly from \"plotly.js-basic-dist\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nconst Plot = createPlotlyComponent(Plotly);\n\nconst UpsetPlot = (props) => {\n\n    return(\n        <div className='upsetPlot'>\n            {\n                Object.keys(props.data).length && \n                <React.Fragment>\n                    <Plot\n                        data= {props.data.bars}\n                        layout={ {\n                            autosize: true,\n                            xaxis: {\n                                showgrid: false,\n                                zeroline: false,\n                                showticklabels: false,\n                                range: [-1, props.data.bars.length + 1]\n                            },\n                            yaxis: {\n                                tickfont: {\n                                    size: 12\n                                },\n                                showgrid: true,\n                                showticklabels: true\n                            },\n                            margin: {t: 10, b: 0, l: 120, r: 10},\n                            showlegend: false\n                        } }\n                        style = {{width: '2000px', height: '250px'}}\n                        useResizeHandler = {true}\n                        config = {{displayModeBar: false}}\n                    />\n                    <Plot\n                        data= {props.data.points}\n                        layout={ {\n                            autosize: true,\n                            xaxis: {\n                                showgrid: false,\n                                zeroline: false,\n                                showticklabels: false,\n                                range: [-1, props.data.points.length + 1]\n                            },\n                            yaxis: {\n                                showgrid: true,\n                                tickfont: {\n                                    size: 12\n                                },\n                                showticklabels: true\n                            },\n                            margin: {t: 0, b: 10, l: 120, r: 10},\n                            showlegend: false\n                        } }\n                        style = {{ width: '2000px', height: '200px'}}\n                        useResizeHandler = {true}\n                        config = {{displayModeBar: false}}\n                    />\n                </React.Fragment>\n            }\n        </div>\n    )\n}\n\nexport default UpsetPlot","import React, {useEffect, useState} from 'react';\nimport Plotly from \"plotly.js-basic-dist\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nimport {Checkbox} from 'primereact/checkbox';\nimport {RadioButton} from 'primereact/radiobutton';\nimport UpsetPlot from './UpsetPlot'\nimport Loader from 'react-loader-spinner';\nconst Plot = createPlotlyComponent(Plotly);\n\nconst DatasetChart = () => {\n\n    const metricSet = [\n        {name: 'Number of Cell Lines', value: 'cellLines'},\n        {name: 'Number of Drugs', value: 'drugs'},\n        {name: 'Number of Tissue Types', value: 'tissues'},\n        {name: 'Number of Drug Experiments ', value: 'experiments'},\n        {name: 'Number of Genes', value: 'genes'}\n    ]\n    const [upsetData, setUpsetData] = useState({})\n    const [barData, setBarData] = useState([])\n    const [parameters, setParameters] = useState({\n        datasets: [],\n        metricName: '',\n        ready: false\n    });\n    const [isPlotReady, setIsPlotReady] = useState(false)\n\n    useEffect(() => {\n        const getData = async () => {\n            const res = await fetch('/api/stats/metrics/options')\n            const json = await res.json()\n            console.log(json)\n            setParameters({\n                datasets: json,\n                metricName: 'cellLines',\n                ready: true\n            });\n        } \n        getData();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        const updateData = async () => {\n            const res = await fetch('/api/stats/metrics/data', {\n                method: 'POST',\n                body: JSON.stringify({parameters: parameters}),\n                headers: {'Content-type': 'application/json'}\n            })\n            const json = await res.json()\n\n            if(parameters.metricName === 'cellLines' || parameters.metricName === 'drugs' || parameters.metricName === 'tissues'){\n                let points = []\n                let bars = []\n                let data = json.upsetData.data\n                console.log(json.upsetData)\n                for(let i = 0; i < data.length; i++){\n                    let datasets = []\n                    let colors = []\n                    for(let j = 0; j < data[i].setIndices.length; j++){\n                        let index = data[i].setIndices[j]\n                        datasets.push(json.upsetData.sets[index].name)\n                        colors.push(json.upsetData.sets[index].color)\n                    }\n                    data[i].datasets = datasets\n                    data[i].colors = colors\n                }\n\n                for(let i = 0; i < data.length; i++){\n\n                    points.push({\n                            x: new Array(data[i].datasets.length).fill(i),\n                            y: data[i].datasets,\n                            mode: data[i].datasets.length > 1 ? 'lines+markers' : 'markers',\n                            type: 'scatter',\n                            marker: {\n                                size: 10,\n                                color: data[i].colors\n                            },\n                            line: {\n                                color: '#777777'\n                            },\n                            hoverinfo: 'text'\n                    }) \n\n                    bars.push({\n                            x: [i, i],\n                            y: [0, data[i].names.length],\n                            mode: 'markers+lines',\n                            type: 'scatter',\n                            line: {\n                                color: data[i].colors.length > 1 ? '#777777' : data[i].colors[0],\n                                width: 10\n                            },\n                            marker: {\n                                color: data[i].colors.length > 1 ? '#777777' : data[i].colors[0],\n                                symbol: 'line-ew',\n                                size: 10\n                            },\n                            text: data[i].names.length,\n                            hoverinfo: 'text'\n                    })\n                }\n                setUpsetData({points: points, bars: bars})\n            }else{\n                const barDatasets = json.barData\n                barDatasets.sort((a, b) => (a.value > b.value) ? 1: -1)\n\n                setBarData([{\n                    x: barDatasets.map((item) => {return item.value}), \n                    y: barDatasets.map((item) => {return item.name}), \n                    type: 'bar',\n                    orientation: 'h',\n                    marker: {\n                        color: barDatasets.map((item) => {return item.color})\n                    }\n                }])\n            }\n            setIsPlotReady(true)\n        }\n        setIsPlotReady(false)\n        if(parameters.ready){\n            console.log(parameters)\n            updateData()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [parameters])\n    \n    return (\n        <React.Fragment>\n            <h4>Select Dataset Metrics to View</h4>\n            <div className='stats-dataset-metric-control'>\n                {\n                    metricSet.map((metric) => {\n                        return(\n                            <div className='stats-chart-control-checkbox' key={metric.value}>\n                                <RadioButton inputId={metric.name} value={metric.value} checked={parameters.metricName === metric.value}\n                                    onChange={e => {\n                                        let params = {...parameters}\n                                        params.metricName = e.value\n                                        setParameters(params)\n                                    }\n                                }></RadioButton>\n                                <div>{metric.name}</div>\n                            </div>\n                        )\n                    })\n                }\n            </div>    \n            <div className='stats-dataset-chart'>\n                {isPlotReady ? \n                    <div className='stats-dataset-plot'>\n                        {\n                            parameters.metricName === 'experiments' || parameters.metricName === 'cellLineDrugPairs' || parameters.metricName === 'genes' ?\n                            <Plot\n                                data= {barData}\n                                layout={ {\n                                    autosize: true,\n                                    margin: {t: 50, b: 50, l: 130, r: 10},\n                                    showlegend: false\n                                } }\n                                style = {{width: \"100%\", height: '300px'}}\n                                useResizeHandler = {true}\n                                config = {{displayModeBar: false}}\n                            />\n                            :\n                            <UpsetPlot data={upsetData} />\n                        }\n                    </div>\n                    :\n                    <div className='componentLoaderContainer'>\n                        <Loader type=\"ThreeDots\" color=\"#3D405A\" height={100} width={100} />\n                    </div>\n                }\n                <div className='stats-dataset-chart-control'>\n                    <h4>Select Dataset(s) to View</h4>\n                    {\n                        parameters.datasets.map((dataset) => {\n                            return(\n                                <div className='stats-chart-control-checkbox dataset-checkbox' key={dataset.name}>\n                                    <Checkbox inputId={dataset.name} value={dataset.name} checked={dataset.checked}\n                                        onChange={e => {\n                                            let params = {...parameters}\n                                            let index = params.datasets.findIndex(item => item.name === dataset.name)\n                                            params.datasets[index].checked = e.checked\n                                            setParameters(params)\n                                        }\n                                    }></Checkbox>\n                                    <label htmlFor={dataset.name}>{dataset.name}</label>\n                                </div>\n                            )\n                        })\n                    }\n                </div>  \n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default DatasetChart;","import React, {useState, useEffect} from 'react';\nimport './Stats.css';\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport { Link } from 'react-router-dom';\nimport DatasetChart from './DatasetChart';\nimport Loader from 'react-loader-spinner';\nimport {dataTypes} from '../Shared/Enums';\n\nconst Stats = () => {\n\n    const [psets, setPSets] = useState([])\n    const [chartData] = useState([])\n    const [isReady, setIsReady] = useState(false)\n\n    useEffect(() => {\n        const getData = async () => {\n            const res = await fetch(`/api/${dataTypes.pharmacogenomics}/stats/data`)\n            const json = await res.json()\n            console.log(json)\n            setPSets(json.psets)\n            setIsReady(true)\n        }\n        getData()\n    }, [])\n    \n    const nameColumnTemplate = (rowData, column) => {\n        let route = `/${dataTypes.pharmacogenomics}/${rowData.doi}`;\n        return(\n            <Link to={route} target=\"_blank\">{rowData.name}</Link>\n        );\n    }\n        \n    return(\n        <div className='pageContent'>\n            {\n                isReady ?\n                <div className='statContainer'>\n                    <div className='container downloadHistogram'>\n                        <h3>Dataset Metrics and Usage Statistics</h3>\n                        <DatasetChart chartData={chartData} />\n                    </div>\n                    <div className='container rankingTable'>\n                        <h3>Download Ranking</h3>\n                        <DataTable \n                            value={psets} paginator={true} rows={10} scrollable={true} \n                            resizableColumns={true} columnResizeMode=\"fit\"\n                        >\n                            <Column className='textField' field='download' header='Number of Downloads' style={{width:'5%', textAlign:'center'}} sortable={true} />\n                            <Column className='textField' field='name' header='Name' style={{width:'7%', textAlign:'center'}} body={nameColumnTemplate} sortable={true} />\n                            <Column className='textField' field='dataset' header='Dataset' style={{width:'5%', textAlign:'center'}} sortable={true} />\n                            <Column className='textField' field='version' header='Drug Sensitivity' style={{width:'5%', textAlign:'center'}} sortable={true} />\n                        </DataTable>\n                    </div>  \n                </div>\n                :\n                <div className='componentLoaderContainer'>\n                    <Loader type=\"ThreeDots\" color=\"#3D405A\" height={100} width={100} />\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default Stats;","import React from 'react';\n\nconst Overview = () => {\n    return(\n        <div className='documentation'>\n            <h2>Overview</h2>\n\n                <div>\n                    <h3>Introduction</h3>\n                    <p>\n                        <b>ORCESTRA</b> is a new web application that enables users to search, request and manage pharmacogenomic datasets (PSets).\n                        <br />\n                        PSets are generated with an automated pipeline by using a version controlling platform called Pachyderm. Upon completion of the pipeline, a newly generated PSet is uploaded to Zenodo, a data-sharing platform, and is assigned a DOI.\n                        <br />\n                        With Pachyderm's strict version controlling system, coupled with the DOI assignment, ORCESTRA ensures that your experiments with PSets are transparent and easily reproducible.\n                    </p>\n                    <h3>System Overview</h3>  \n                    <p>\n                        The <b>ORCESTRA</b> system consists of three main layers:   \n                    </p>  \n                    <ol>\n                        <li><b>Web application layer</b> which allows users to view and submit PSet requests</li>\n                        <li><b>Data processing layer</b> which utilizes a version control software called Pachyderm to process requested data</li>\n                        <li><b>Data sharing layer</b> which utilizes Zenodo to ensure that the generated dataset is tagged with a DOI</li>\n                    </ol>     \n                    <div className='img-architecture'>\n                        <img src={process.env.PUBLIC_URL + \"/images/documentation/architecture.png\"} alt=''/>\n                    </div>\n                    <div className='bottom-fill'></div>  \n                </div>  \n        </div>    \n    );\n}\n\nexport default Overview","import React from 'react';\n\nconst Search = () => {\n    return(\n        <div className='documentation'>\n            <h2>Search</h2>\n                <div>\n                    <h3>How to search existing PSets</h3>\n                    <p>\n                        Existing PSets can be searched on <a href='/pset/search'>Search and Request</a> page.<br />\n                        User can select different pipeline parameters uder PSet Parameters pane. Each selection of parameters triggers a database search. The search result is displayed on the data table as shown in the figure below.\n                    </p> \n                    <div className='img-full'>\n                        <img src={process.env.PUBLIC_URL + \"/images/documentation/search.png\"} alt='' />\n                    </div>  \n                    <h3>How to view metadata of a PSet</h3>\n                    <p>\n                        Metadata of a PSet can be viewed by clicking a dataset name on the search table.<br />\n                        Explore PSet view is displayed as in the figure below where user can view publications associated with the dataset, and command lines used in the pipeline to generate the PSet.\n                    </p> \n                    <div className='img-full'>\n                        <img src={process.env.PUBLIC_URL + \"/images/documentation/explore_pset.png\"} alt='' />\n                    </div>\n                    <div className='bottom-fill'></div> \n                </div>      \n        </div>    \n    );\n}\n\nexport default Search","import React from 'react';\n\nconst Request = () => {\n    return(\n        <div className='documentation'>\n            <h2>Request</h2> \n                <div>\n                    <h3>How to request a PSet</h3>\n                    <p>\n                        To request a PSet, turn on the Request mode on <a href='/pset/search'>Search and Request</a> view with the toggle button on top of the PSet Parameters pane. In the requets mode, two text fields to enter the PSet name and email address to receive pipeline completion notification will be displayed.<br />\n                        Once all the information is filled out, including the PSet name and email address, the Submit Request button becomes active.<br />\n                        PSet request is submitted upon clicking the Submit button.\n                    </p> \n                    <div className='img-full'>\n                        <img src={process.env.PUBLIC_URL + \"/images/documentation/request.png\"} alt='' />\n                    </div>  \n                    <h3>How to check status of your request</h3>\n                    <p>\n                        Status of your pipeline request can be viewed at <a href='/pset/status'>Request Status</a> view.<br /> \n                        Status of your request can either be \"pending\" or \"in-process\". Pending requests are the ones that have been successfully submitted, and will be processed once the Pachyderm cluster is online. In-process requests have been successfully submitted, and the pipeline execution has been started.\n                    </p> \n                    <div className='img-full'>\n                        <img src={process.env.PUBLIC_URL + \"/images/documentation/request_status.png\"} alt='' />\n                    </div> \n                    <div className='bottom-fill'></div>\n                </div>\n        </div>    \n    );\n}\n\nexport default Request","import React from 'react';\n\nconst UserProfile = () => {\n    return(\n        <div className='documentation'>\n            <h2>User Profile and Usage Statistics</h2>\n            <div>\n                <h3>What you can do with your profile</h3>\n                <p>\n                    <b>ORCESTRA</b> comes with user account feature which allows registred users to:\n                </p>\n                <ul>\n                    <li>Save existing PSets as \"favorites\".</li>\n                    <li>Keep track of the user's PSet reguqest status.</li>\n                </ul>\n                <p>\n                    To register for the user account, simply click on the \"Login/Register\" button on navigation \n                    bar, and enter your email address and password.\n                </p> \n            </div>\n            <div>\n                <h3>Usage Statistics</h3>\n                <p>\n                    <b>ORCESTRA</b>'s usage metrics can be viewed at <a href='http://orcestra.ca/pset/stats'>Statistics</a> page.<br />\n                    <b>ORCESTRA</b> currently provides the download ranking of the existing PSets.\n                </p>   \n            </div>\n        </div>    \n    );\n}\n\nexport default UserProfile","import React from 'react';\nimport styled from 'styled-components';\nimport download from 'downloadjs';\n\nconst StyledTable = styled.table`\n    text-align: left;\n    font-size: 14px;\n    .download {\n        border: none;\n        background: none;\n        font-size: 16px;\n        cursor: pointer;\n        color: #3D405A;\n    }\n`;\n\nconst DocHeader = styled.div`\n    margin-top: 20px;\n    .title {\n        display: inline-block;\n        font-size: 20px;\n        font-weight: bold;\n        border-bottom: 3px solid rgb(241, 144, 33);\n    }\n`;\n\nconst DocSection = styled.div`\n    margin-top: 10px;\n    margin-bottom: 30px;\n    .docContent {\n        margin-left: 20px;\n    }\n`;\n\nconst DataContribution = () => {\n\n    const exampleFilesTable = (files) => (\n        <StyledTable>\n            <thead>\n                <tr>\n                    <th>Download Example File(s):</th>\n                </tr> \n            </thead>\n            <tbody>\n            {\n                files.map(file => (\n                    <tr key={file}>\n                        <td>{file}</td>\n                        <td>\n                            <button className='download' title='Download' onClick={(e) => {\n                                e.preventDefault();\n                                downloadFile(file);\n                            }}>\n                                <i className=\"pi pi-fw pi-download\"></i>\n                            </button>\n                        </td>\n                    </tr>\n                ))\n            } \n            </tbody>  \n        </StyledTable>\n    );\n\n    const downloadFile = async (file) => {\n        const res = await fetch('/api/example-download/' + file);\n        const blob = await res.blob();\n        download(blob, file);\n    }\n\n    return(\n        <div className='documentation'>\n            <DocHeader>\n                <div className='title'>Contributing Your Data</div>\n                <p>\n                    You can submit your data to ORCESTRA to be processed into a version-controlled multi-modal datasets via <a href='/app/data_submission'>Data Submission page</a>.<br />\n                    Please ensure your data submission includes the following files, in the format of the example CSV files provided below:\n                </p>\n            </DocHeader>\n            <div>\n                <DocSection>\n                    <h3>1. Sample annotation</h3>\n                    <div className='docContent'>\n                        {exampleFilesTable(['example_sample_annotation.csv'])}\n                        <p>\n                            File (.CSV) that includes each sample with respective unique ID's (unique.sample.id). For cell lines, please also provide Cellosaurus Accession IDs. If a cell line is not present in Cellosaurus, indicate with NA. In addition, please include tissue types (tissue.id) for each sample and any other sample metadata in the CSV that you would like to include in your data object.\n                            <br />\n                            Cellosaurus: <a href='https://web.expasy.org/cellosaurus/'>https://web.expasy.org/cellosaurus/</a>\n                        </p> \n                    </div> \n                </DocSection> \n                <DocSection>\n                    <h3>2. Drug annotation</h3>\n                    <div className='docContent'>\n                        {exampleFilesTable(['example_drug_annotation.csv'])}\n                        <p>\n                            File (.CSV) that includes each drug compound with respective unique ID's (unique.drug.id). Please also provide PubChem CID for each drug compound. If a drug is not present in PubChem, indicate CID with NA. In addition, include any other drug metadata in the CSV that you would like to include in your data object.\n                            <br />\n                            PubChem: <a href='https://pubchem.ncbi.nlm.nih.gov'>https://pubchem.ncbi.nlm.nih.gov</a>\n                        </p>\n                    </div>  \n                </DocSection>\n                <DocSection>\n                    <h3>3. Raw treatment sensitivity data</h3>\n                    <div className='docContent'>\n                        {exampleFilesTable(['example_drug_annotation.csv', 'example_raw_drug_viability.csv'])}\n                        <ol>\n                            <li>\n                                File (.CSV) that contains the doses (in micromolar) utilized each drug compound and sample pair. A unique experiment ID must be used for each drug compound and sample pair, which follows the following format (unique.sampleid_unique.drugid) - refer to example_raw_drug_dose.csv\n                            </li>\n                            <li>\n                                File (.CSV) that contains the viability (in percentage %) for each dose of the respective unique experiment ID (unique.sampleid_unique.drugid) - refer to example_raw_drug_viability.csv\n                            </li>\n                        </ol>\n                        <p>\n                            *NOTE: If an experiment was performed more than once for a given drug compound and sample pair (unique.sampleid_unique.drugid), ensure that the unique unique experiment ID reflects this by appending \"_number\" to the end of the unique experiment ID (e.g. 380_XMD8-85_1; 380_XMD8-85_2; 380_XMD8-85_3) \n                        </p>\n                    </div>\n                </DocSection>\n                <DocSection>\n                    <h3>4. Treatment sensitivity info</h3>\n                    <div className='docContent'>\n                        {exampleFilesTable(['example_sensitivity_info.csv'])}\n                        <p>\n                            File (.CSV) that contains the minimum and maximum drug dose (in micromolar) used for each unique experiment ID (unique.sampleid_unique.drugid), along with the respective unique.sample.id and unique.drug.id.\n                        </p>\n                    </div>\n                </DocSection> \n                <DocSection>\n                    <h3>5. Processed molecular profile data</h3>\n                    <div className='docContent'>\n                        {exampleFilesTable(['example_rnaseq.csv '])}\n                        <p>\n                            We accept processed RNA-seq, microarray, mutation, and CNV data. For each datatype, ensure rows are denoted as gene, transcript, or probe ID's, while columns are denoted as samples (unique.sample.id). Please also indicate which tools and their versions were used to process your molecular data (e.g. Kallisto v.0.43.1 for RNA-seq), including information about all accompanying files required to process your data (e.g. Gencode v33 transcriptome for RNA-seq; SureSelectHumanAllExonV5 BED file for mutation calling).\n                        </p> \n                    </div>\n                </DocSection>\n                <DocSection>\n                    <h3>6. Other metadata to include in ORCESTRA</h3>\n                    <div className='docContent'>\n                        <p>\n                            If your data is associated with specific publications, please provide us with respective publication links for each data source (drug sensivitity data, molecular profiles).\n                        </p>\n                    </div> \n                </DocSection>\n            </div>\n        </div>    \n    );\n}\n\nexport default DataContribution","import React, {useState, useEffect} from 'react';\nimport {ScrollPanel} from 'primereact/scrollpanel';\n\nconst AvailablePSets = () => {\n    \n    const [data, setData] = useState([])\n\n    useEffect(() => {\n        const getData = async () => {\n            const res = await fetch('/api/psets/canonical')\n            const data = await res.json()\n            setData(JSON.stringify(data, null, 2))\n        }\n        getData()\n    }, [])\n    \n    return(\n        <div className='documentation'>\n            <h2>List of Available Datasets</h2>\n            <p>\n                This RESTful API call restrieves a list of available datasets in the database:<br />\n                <code className='code'>curl http://api.orcestra.ca/[dataset type]/[dataset classification]</code> or,<br />\n                <code className='code'>curl https://www.orcestra.ca/[dataset type]/[dataset classification]</code><br />\n                Input Parameters:<br />\n                <div className='code'>\n                    <b>Dataset Type:</b> Accepts one of <code>psets</code>, <code>toxicosets</code>, <code>xevasets</code>, <code>clinicalgenomics</code>, and <code>radiosets</code>. <br />\n                    <b>Dataset Classification:</b> Accepts one of <code>canonical</code> or <code>available</code>.<br />\n                    \"Canonical\" returns the latest datasets created by BHK Lab and are recommended for analysis.<br />\n                    \"Available\" returns all datasets currently available in ORCESTRA.<br />\n                </div>\n                Example:<br />\n                <code className='code'>curl http://api.orcestra.ca/psets/canonical</code><br />\n                Current result of the successful API call is as follows:<br />\n            </p>\n            <ScrollPanel className='documentation-scroll'>\n                <div>\n                    <pre>\n                        {data}\n                    </pre>    \n                </div>\n            </ScrollPanel>\n        </div>    \n    );\n}\n\nexport default AvailablePSets","import React, {useState, useEffect} from 'react';\nimport {ScrollPanel} from 'primereact/scrollpanel';\n\nconst PSetMetadata = () => {\n    const [data, setData] = useState([])\n\n    useEffect(() => {\n        const getData = async () => {\n            const res = await fetch('/api/pset/10.5281/zenodo.3905462')\n            const data = await res.json()\n            console.log(data)\n            setData(JSON.stringify(data, null, 2))\n        }\n        getData()\n    }, [])\n    \n    return(\n        <div className='documentation'>\n            <h2>Single Dataset</h2>\n            <p>\n                This RESTful API call restrieves a dataset associated with specified DOI:<br /> \n                <code className='code'>curl http://api.orcestra.ca/[dataset type]/[ DOI ]</code> or,<br />\n                <code className='code'>curl https://wwww.orcestra.ca/[dataset type]/[ DOI ]</code><br />\n                Input Parameters:<br />\n                <div className='code'>\n                    <b>Dataset Type:</b> Accepts one of <code>pset</code>, <code>toxicoset</code>, <code>xevaset</code>, <code>clinicalgenomics</code>, and <code>radioset</code>. <br />\n                </div>\n                Example:<br />\n                <code className='code'>curl http://api.orcestra.ca/pset/10.5281/zenodo.3905462</code><br />\n                Current result of the successful API call is as follows:<br />\n            </p>\n            <ScrollPanel className='documentation-scroll'>\n            <div>\n                <pre>\n                    {data}\n                </pre>    \n            </div>\n            </ScrollPanel>\n        </div>    \n    );\n}\n\nexport default PSetMetadata","import React, {useState, useEffect} from 'react';\nimport {ScrollPanel} from 'primereact/scrollpanel';\n\nconst StatisticsAPI = () => {\n    const [data, setData] = useState([])\n\n    useEffect(() => {\n        const getData = async () => {\n            const res = await fetch('/api/psets/statistics/metrics/all')\n            const data = await res.json()\n            setData(JSON.stringify(data, null, 2))\n        }\n        getData()\n    }, [])\n    \n    return(\n        <div className='documentation'>\n            <h2>Statistics</h2>\n            <p>\n                This RESTful API call restrieves a list of datasets ordered by the number of downloads:<br />\n                <code className='code'>curl http://api.orcestra.ca/[dataset type]/statistics/download/[ number of datasets to be returned ]</code> or,<br />\n                <code className='code'>curl https://www.orcestra.ca/[dataset type]/statistics/download/[ number of datasets to be returned ]</code><br />\n                Input Parameters:<br />\n                <div className='code'>\n                    <b>Dataset Type:</b> Accepts one of <code>psets</code>, <code>toxicosets</code>, <code>xevasets</code>, <code>clinicalgenomics</code>, and <code>radiosets</code>. <br />\n                </div>\n                Example:<br />\n                <code className='code'>curl http://api.orcestra.ca/psets/statistics/download/5</code><br />\n            </p>\n            <p>\n                This RESTful API call returns metric data for each PSet:<br />\n                <code className='code'>curl http://api.orcestra.ca/[dataset type]/statistics/metrics/[ name of dataset OR 'all' for all dataset metrics]</code> or,<br />\n                <code className='code'>curl https://www.orcestra.ca/[dataset type]/statistics/metrics/[ name of dataset OR 'all' for all dataset metrics]</code><br />\n                Input Parameters:<br />\n                <div className='code'>\n                    <b>Dataset Type:</b> Accepts one of <code>psets</code>, <code>toxicosets</code>, <code>xevasets</code>, <code>clinicalgenomics</code>, and <code>radiosets</code>. <br />\n                </div>\n                Example:<br />\n                <code className='code'>curl http://api.orcestra.ca/psets/statistics/metrics/all</code><br />\n                Current result of the successful metrics API call is as follows:<br />\n            </p>\n            <ScrollPanel className='documentation-scroll'>\n            <div>\n                <pre>\n                    {data}\n                </pre>    \n            </div>\n            </ScrollPanel>\n        </div>    \n    );\n}\n\nexport default StatisticsAPI","import React, { useState } from 'react';\nimport './Documentation.css';\n\nimport Overview from './DocFunctionality/Overview';\nimport Search from './DocFunctionality/Search';\nimport Request from './DocFunctionality/Request';\nimport UserProfile from './DocFunctionality/UserProfile';\nimport DataContribution from './DocFunctionality/DataContribution';\nimport AvailablePSets from './DocAPI/AvailablePSets';\nimport PSetMetadata from './DocAPI/PSetMetadata';\nimport StatisticsAPI from './DocAPI/StatisticsAPI';\n\nconst Documentation = (props) => {\n    \n    const [display, setDisplay] = useState(props.match.params.section);\n\n    return(\n        <div className='pageContent'>\n            <div className='documentationContent'>\n                <nav className='documentationNav'>\n                    <h3>Functionality</h3>\n                    <ul>\n                        <li className={display === 'overview' ? 'selected' : undefined}>\n                            <button type='button' onClick={() => setDisplay('overview')}>Overview</button>\n                        </li>\n                        <li className={display === 'search' ? 'selected' : undefined}>\n                            <button type='button' onClick={() => setDisplay('search')}>Search</button>\n                        </li>    \n                        <li className={display === 'request' ? 'selected' : undefined}>\n                            <button type='button' onClick={() => setDisplay('request')}>Request</button>\n                        </li>\n                        <li className={display === 'userProfile' ? 'selected' : undefined}>\n                            <button type='button' onClick={() => setDisplay('userProfile')}>Profile/Statistics</button>\n                        </li>\n                    </ul> \n                    <h3>Support</h3>\n                    <ul>\n                        <li className={display === 'datacontribution' ? 'selected' : undefined}>\n                            <button type='button' onClick={() => setDisplay('datacontribution')}>Contributing Your Data</button>\n                        </li>   \n                    </ul>\n                    <h3>API</h3>\n                    <ul>\n                        <li className={display === 'api-psets-available' ? 'selected' : undefined}>\n                            <button type='button' onClick={() => setDisplay('api-psets-available')}>Available Datasets</button>\n                        </li>\n                        <li className={display === 'api-pset-single' ? 'selected' : undefined}>\n                            <button type='button' onClick={() => setDisplay('api-pset-single')} >Single Dataset</button>\n                        </li>\n                        <li className={display === 'api-statistics' ? 'selected' : undefined}>\n                            <button type='button' onClick={() => setDisplay('api-statistics')}>Statistics</button>\n                        </li>    \n                    </ul>\n                </nav>\n                {display === 'overview' && <Overview /> }\n                {display === 'search' && <Search /> }\n                {display === 'request' && <Request /> }\n                {display === 'userProfile' && <UserProfile /> }\n                {display === 'datacontribution' && <DataContribution /> }\n                {display === 'api-psets-available' && <AvailablePSets /> }\n                {display === 'api-pset-single' && <PSetMetadata /> }\n                {display === 'api-statistics' && <StatisticsAPI /> }\n            </div>\n        </div>\n    );\n}\n\nexport default Documentation;","import React from 'react';\nimport styled from 'styled-components';\nimport { Button } from 'primereact/button';\nimport CustomInputText from '../Shared/CustomInputText';\nimport CustomSelect from '../Shared/CustomSelect';\n\nconst StyledMolecularDataForm = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 20px;\n`;\n\nconst StyledFormContainer = styled.div`\n    display: flex;\n    aling-items: center;\n    flex-wrap: wrap;\n    margin-left: 10px;\n    margin-bottom: 10px;\n    .datatype {\n        margin-right: 20px;\n    }\n    .filename {\n        width: 250px;\n        margin-right: 20px;\n    }\n    .repo-url {\n        width: 350px;\n    }\n`;\n\nconst StyledButtonField = styled.div`\n    margin-left: 20px;\n    .btn {\n        margin-left: 10px;\n    }\n`;\n\nconst molecularDataOptions = [\n    { label: 'RNA Sequence', value: 'rnaseq' },\n    { label: 'Microarray', value: 'microarray' },\n    { label: 'CNV', value: 'cnv' },\n    { label: 'Fusion', value: 'fusion' },\n    { label: 'Mutation', value: 'mutation' },\n];\n\nconst MolecularDataForm = (props) => {\n    const { \n        length,\n        index, \n        molecularData, \n        handleInputChange,\n        handleReset,\n        handleAddClick,\n        handleRemoveClick \n    } = props;\n\n    return(\n        <StyledMolecularDataForm>\n            <div>\n                <StyledFormContainer>\n                    <CustomSelect \n                        className='datatype'\n                        label='Data Type:'\n                        name='name'\n                        optionLabel='label'\n                        selected={molecularData.name} \n                        options={molecularDataOptions}\n                        onChange={(e) => {handleInputChange(e, index, 'name')}}\n                        selectOne={true}\n                    />\n                    <CustomInputText \n                        className='filename'\n                        label='Filename:'\n                        name='filename'\n                        value={molecularData.filename} \n                        onChange={(e) => {handleInputChange(e, index, 'filename')}}\n                    />\n                    <CustomInputText \n                        className='repo-url'\n                        label='Repository URL:'\n                        name='repoURL'\n                        value={molecularData.repoURL} \n                        onChange={(e) => {handleInputChange(e, index, 'repoURL')}}\n                    />\n                </StyledFormContainer>\n                <StyledFormContainer>\n                    <CustomInputText \n                        className='filename'\n                        label='Processing Tool:'\n                        name='filename'\n                        value={molecularData.toolname}\n                        onChange={(e) => {handleInputChange(e, index, 'toolname')}}\n                    />\n                    <CustomInputText \n                        className='filename'\n                        label='Tool Version:'\n                        name='filename'\n                        value={molecularData.toolversion}\n                        onChange={(e) => {handleInputChange(e, index, 'toolversion')}}\n                    />\n                </StyledFormContainer>\n                <StyledFormContainer>\n                    <CustomInputText \n                        className='filename'\n                        label='Reference Filename:'\n                        name='filename'\n                        value={molecularData.refname}\n                        onChange={(e) => {handleInputChange(e, index, 'refname')}}\n                    />\n                    <CustomInputText \n                        className='repo-url'\n                        label='Repository URL:'\n                        name='filename'\n                        value={molecularData.refURL}\n                        onChange={(e) => {handleInputChange(e, index, 'refURL')}}\n                    />\n                </StyledFormContainer>\n            </div>\n            <StyledButtonField>\n                { \n                    index > 0 && \n                    <Button \n                        icon='pi pi-times' \n                        tooltip='Remove' \n                        className='btn p-button-danger'\n                        onClick={(e) => {handleRemoveClick(e, index)}}\n                    /> \n                }\n                { \n                    index === length - 1 && \n                    <Button \n                        icon='pi pi-plus' \n                        tooltip='Add another molecular profile' \n                        className='btn'\n                        onClick={handleAddClick}\n                        disabled={molecularData.name.length === 0 || molecularData.filename.length === 0 || molecularData.repoURL.length === 0}\n                    /> \n                }\n                <Button \n                    icon='pi pi-replay' \n                    tooltip='Reset' \n                    className='btn p-button-secondary' \n                    onClick={(e) => {handleReset(e, index)}}\n                />\n            </StyledButtonField>\n        </StyledMolecularDataForm>\n    );\n}\n\nexport default MolecularDataForm;","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nimport { Button } from 'primereact/button';\nimport { Checkbox } from 'primereact/checkbox';\nimport CustomInputText from '../Shared/CustomInputText';\nimport CustomSelect from '../Shared/CustomSelect';\nimport CustomMessages from '../Shared/CustomMessages';\nimport MolecularDataForm from './MolecularDataForm';\nimport { dataTypes } from '../Shared/Enums'; \n\nconst StyledDataSubmission = styled.div`\n    width: 100%;\n    background-color: rgba(255, 255, 255, 0.8);\n    border-radius: 10px;\n    padding-left: 20px;\n    padding-right: 20px;\n    padding-top: 20px;\n    padding-bottom: 10px;\n    font-size: 12px;\n    .title {\n        font-size: 20px;\n        font-weight: bold;\n    }\n`;\n\nconst SubmissionPanel = styled.div`\n    display: flex;\n    align-items: center;\n    .left {\n        width: 300px;\n        margin-right: 20px;\n    }\n`;\n\nconst DocSection = styled.div`\n    margin-top: 10px;\n    margin-bottom: 20px;\n    .subtitle {\n        font-size: 14px;\n        font-weight: bold;\n        margin-bottom: 10px;\n    }\n    .form-container {\n        display: flex;\n        aling-items: center;\n        flex-wrap: wrap;\n        width: 100%;\n        margin-left: 10px;\n        margin-bottom: 10px;\n        .version {\n            margin-right: 20px;\n        }\n        .filename {\n            width: 250px;\n            margin-right: 20px;\n        }\n        .repo-url {\n            width: 400px;\n        }\n        .publication-citation {\n            width: 500px;\n        }\n        .publication-link {\n            width: 250px;\n        }\n    }\n    .description {\n        margin-left: 10px;\n    }\n`;\n\nconst datasetTypeOptions = [\n    { label: 'Pharmacogenomics', value: dataTypes.pharmacogenomics},\n    { label: 'Toxicogenomics', value: dataTypes.toxicogenomics },\n    { label: 'Xenographic Pharmacogenomics', value: dataTypes.xenographic},\n    { label: 'Cinical Genomics', value: dataTypes.clinicalgenomics},\n    { label: 'Radiogenomics', value: dataTypes.radiogenomics},\n];\n\nconst dataSubmissionSuccessMessage = {\n    severity: 'success', \n    summary: 'Data Submitted', \n    detail: 'Your data has been submitted for curation. You will be notified via email once your dataset is processed.', \n    sticky: true \n}\n\nconst dataSubmissionErrorMessage = {\n    severity: 'error', \n    summary: 'Error Occurred', \n    detail: 'There was an error in the server. Please try again, or contact support@orcestra.ca', \n    sticky: true \n}\n\nconst DataSubmission = () => {\n\n    const [info, setInfo] = useState({ name: '', datasetType: '',  private: false });\n    const [sampleAnnotation, setSampleAnnotation] = useState({filename: '', repoURL: ''});\n    const [drugAnnotation, setDrugAnnotation] = useState({filename: '', repoURL: ''});\n    const [rawTreatmentData, setRawTreatmentData] = useState({\n        version: '', \n        filename: '', \n        repoURL: '', \n        publication: {citation: '', link: ''}\n    });\n    const [treatmentInfo, setTreatmentInfo] = useState({filename: '', repoURL: ''});\n    const [molecularData, setMolecularData] = useState([\n        {\n            name: '', \n            filename: '', \n            repoURL: '',\n            toolname: '', toolversion: '',\n            refname: '', refURL: ''\n        }\n    ]);\n    const [showMsg, setShowMsg] = useState(false);\n    const [submitMessage, setSubmitMessage] = useState({});\n    const [dataVersionOptions, setDataVersionOptions] = useState([]);\n\n    useEffect(() => {\n        let yearOptions = [];\n        let currentYear = new Date().getFullYear();\n        let minYear = currentYear - 4;\n        for(let current = currentYear; current >= minYear; current--){\n            yearOptions.push({label: current, value: current});\n        }\n        setDataVersionOptions(yearOptions);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const submit = async (e) => {\n        e.preventDefault();\n        const submission = {\n            info: info,\n            sampleAnnotation: sampleAnnotation,\n            drugAnnotation: drugAnnotation,\n            rawTreatmentData: {...rawTreatmentData, version: rawTreatmentData.version.value},\n            treatmentInfo: treatmentInfo,\n            molecularData: molecularData\n        };\n        console.log(submission);\n        const res = await axios.post('/api/user/dataset/submit', submission);\n        if(res.status === 200){\n            setSubmitMessage(dataSubmissionSuccessMessage);\n        }else{\n            setSubmitMessage(dataSubmissionErrorMessage);\n        }\n        setShowMsg(Math.random());\n        setInfo({ name: '', datasetType: '' });\n        setSampleAnnotation({filename: '', repoURL: ''});\n        setDrugAnnotation({filename: '', repoURL: ''});\n        setRawTreatmentData({version: '', filename: '', repoURL: '', publication: {citation: '', link: ''}});\n        setTreatmentInfo({filename: '', repoURL: ''});\n        setMolecularData([{name: '', filename: '', repoURL: ''}]);\n    }\n\n    const handleMolecularDataInput = (e, index, field) => {\n        let value = '';\n        if(field === 'name'){\n            value = e.value;\n        }else{\n            value = e.target.value;\n        }\n        const list = [...molecularData];\n        list[index][field] = value;\n        setMolecularData(list);\n    }\n\n    const handleMolecularDataReset = (e, index) => {\n        const list = [...molecularData];\n        list[index] = {\n            name: '', \n            filename: '', \n            repoURL: '',\n            toolname: '', toolversion: '',\n            refname: '', refURL: ''\n        };\n        setMolecularData(list);\n    }\n\n    const handleMolecularDataAdd = (e) => {\n        e.preventDefault();\n        setMolecularData([...molecularData, {name: '', filename: '', repoURL: ''}]);\n    }\n\n    const handleMolecularDataRemove = (e, index) => {\n        const list = [...molecularData];\n        list.splice(index, 1);\n        setMolecularData(list);\n    }\n\n    const isSubmitDisabled = () => {\n        if(info.name.length === 0 || info.datasetType.length === 0){\n            return true;\n        }\n        if(sampleAnnotation.filename.length === 0 || sampleAnnotation.repoURL.length === 0){\n            return true;\n        }\n        if(drugAnnotation.filename.length === 0 || drugAnnotation.repoURL.length === 0){\n            return true;\n        }\n        if(rawTreatmentData.version.length === 0 || rawTreatmentData.filename.length === 0 || rawTreatmentData.repoURL.length === 0){\n            return true;\n        }\n        if(treatmentInfo.filename.length === 0 || treatmentInfo.repoURL.length === 0){\n            return true;\n        }\n        for(const item of molecularData){\n            if(item.name.length === 0 || item.filename.length === 0 || item.repoURL.length === 0){\n                return true;\n            }\n        }\n        return false;\n    }\n\n    return(\n        <div className='pageContent'>\n            <StyledDataSubmission>\n                <div className='title'>Data Submission Form</div>\n                <p>\n                    Please fill out and submit the form below. \n                    For Each data, provide the filename, repository URL and publication information if applicable. <br />\n                    We will process the data into a curated dataset, and notify you via email.<br />\n                    Please refer to <a href='/app/documentation/datacontribution'>Contributing Your Data</a> for more details about the format of each data.\n                </p>\n                <SubmissionPanel>\n                    <div className='left'>\n                        <CustomInputText \n                            className='inputtext'\n                            label='Dataset Name:'\n                            value={info.name} \n                            onChange={(e) => {setInfo({...info, name: e.target.value})}}\n                        />\n                    </div>\n                    <div className='left'>\n                        <CustomSelect \n                            label='Dataset Type:'\n                            selected={info.datasetType} \n                            options={datasetTypeOptions}\n                            onChange={(e) => {setInfo({...info, datasetType: e.value})}}\n                            selectOne={true}\n                        />\n                    </div>\n                    <div className='right'>\n                        <Checkbox inputId='private' onChange={e => setInfo({...info, private: e.checked})} checked={info.private}></Checkbox>\n                        <label htmlFor='private' className='p-checkbox-label'>Keep this dataset private</label>\n                    </div>\n                </SubmissionPanel>\n                <DocSection>\n                    <div className='subtitle'>1. Sample annotation</div>\n                    <div className='description'>\n                        <p>\n                            File (.CSV) that includes each sample with respective unique ID's (unique.sample.id). For cell lines, please also provide Cellosaurus Accession IDs. If a cell line is not present in Cellosaurus, indicate with NA. In addition, please include tissue types (tissue.id) for each sample and any other sample metadata in the CSV that you would like to include in your data object.\n                            <br />\n                            Cellosaurus: <a href='https://web.expasy.org/cellosaurus/'>https://web.expasy.org/cellosaurus/</a>\n                        </p> \n                    </div> \n                    <div className='form-container'>\n                        <CustomInputText \n                            className='filename'\n                            label='Filename:'\n                            value={sampleAnnotation.filename} \n                            onChange={(e) => {setSampleAnnotation({...sampleAnnotation, filename: e.target.value})}}\n                        />\n                        <CustomInputText \n                            className='repo-url'\n                            label='Repository URL:'\n                            value={sampleAnnotation.repoURL} \n                            onChange={(e) => {setSampleAnnotation({...sampleAnnotation, repoURL: e.target.value})}}\n                        />\n                    </div>\n                </DocSection> \n                <DocSection>\n                    <div className='subtitle'>2. Drug annotation</div>\n                    <div className='description'>\n                        <p>\n                            File (.CSV) that includes each drug compound with respective unique ID's (unique.drug.id). Please also provide PubChem CID for each drug compound. If a drug is not present in PubChem, indicate CID with NA. In addition, include any other drug metadata in the CSV that you would like to include in your data object.\n                            <br />\n                            PubChem: <a href='https://pubchem.ncbi.nlm.nih.gov'>https://pubchem.ncbi.nlm.nih.gov</a>\n                        </p>\n                    </div>  \n                    <div className='form-container'>\n                        <CustomInputText \n                            className='filename'\n                            label='Filename:'\n                            value={drugAnnotation.filename} \n                            onChange={(e) => {setDrugAnnotation({...drugAnnotation, filename: e.target.value})}}\n                        />\n                        <CustomInputText \n                            className='repo-url'\n                            label='Repository URL:'\n                            value={drugAnnotation.repoURL} \n                            onChange={(e) => {setDrugAnnotation({...drugAnnotation, repoURL: e.target.value})}}\n                        />\n                    </div>\n                </DocSection>\n                <DocSection>\n                    <div className='subtitle'>3. Raw treatment sensitivity data</div>\n                    <div className='description'>\n                        One of:\n                        <ol>\n                            <li>\n                                File (.CSV) that contains the doses (in micromolar) utilized each drug compound and sample pair. A unique experiment ID must be used for each drug compound and sample pair, which follows the following format (unique.sampleid_unique.drugid) - refer to example_raw_drug_dose.csv\n                            </li>\n                            <li>\n                                File (.CSV) that contains the viability (in percentage %) for each dose of the respective unique experiment ID (unique.sampleid_unique.drugid) - refer to example_raw_drug_viability.csv\n                            </li>\n                        </ol>\n                        <p>\n                            *NOTE: If an experiment was performed more than once for a given drug compound and sample pair (unique.sampleid_unique.drugid), ensure that the unique unique experiment ID reflects this by appending \"_number\" to the end of the unique experiment ID (e.g. 380_XMD8-85_1; 380_XMD8-85_2; 380_XMD8-85_3) \n                        </p>\n                    </div>\n                    <div className='form-container'>\n                        <CustomSelect \n                            className='version'\n                            label='Version:'\n                            selected={rawTreatmentData.version} \n                            options={dataVersionOptions}\n                            onChange={(e) => {setRawTreatmentData({...rawTreatmentData, version: e.value})}}\n                            selectOne={true}\n                        />\n                        <CustomInputText \n                            className='filename'\n                            label='Filename:'\n                            value={rawTreatmentData.filename} \n                            onChange={(e) => {setRawTreatmentData({...rawTreatmentData, filename: e.target.value})}}\n                        />\n                        <CustomInputText \n                            className='repo-url'\n                            label='Repository URL:'\n                            value={rawTreatmentData.repoURL} \n                            onChange={(e) => {setRawTreatmentData({...rawTreatmentData, repoURL: e.target.value})}}\n                        />\n                    </div>\n                    <div className='form-container'>\n                        <CustomInputText \n                            className='publication-citation'\n                            label='Pulication Citation:'\n                            value={rawTreatmentData.publication.citation} \n                            onChange={(e) => {setRawTreatmentData({...rawTreatmentData, publication: {...rawTreatmentData.publication, citation: e.target.value}})}}\n                        />\n                    </div>\n                    <div className='form-container'>\n                        <CustomInputText \n                            className='publication-link'\n                            label='Link:'\n                            value={rawTreatmentData.publication.link} \n                            onChange={(e) => {setRawTreatmentData({...rawTreatmentData, publication: {...rawTreatmentData.publication, link: e.target.value}})}}\n                        />\n                    </div>\n                </DocSection>\n                <DocSection>\n                    <div className='subtitle'>4. Treatment sensitivity info</div>\n                    <div className='description'>\n                        <p>\n                            File (.CSV) that contains the minimum and maximum drug dose (in micromolar) used for each unique experiment ID (unique.sampleid_unique.drugid), along with the respective unique.sample.id and unique.drug.id.\n                        </p>\n                    </div>\n                    <div className='form-container'>\n                        <CustomInputText \n                            className='filename'\n                            label='Filename:'\n                            value={treatmentInfo.filename} \n                            onChange={(e) => {setTreatmentInfo({...treatmentInfo, filename: e.target.value})}}\n                        />\n                        <CustomInputText \n                            className='repo-url'\n                            label='Repository URL:'\n                            value={treatmentInfo.repoURL} \n                            onChange={(e) => {setTreatmentInfo({...treatmentInfo, repoURL: e.target.value})}}\n                        />\n                    </div>\n                </DocSection> \n                <DocSection>\n                    <div className='subtitle'>5. Processed molecular profile data</div>\n                    <div className='description'>\n                        <p>\n                            We accept processed RNA-seq, microarray, mutation, and CNV data. For each datatype, ensure rows are denoted as gene, transcript, or probe ID's, while columns are denoted as samples (unique.sample.id). Please also indicate which tools and their versions were used to process your molecular data (e.g. Kallisto v.0.43.1 for RNA-seq), including information about all accompanying files required to process your data (e.g. Gencode v33 transcriptome for RNA-seq; SureSelectHumanAllExonV5 BED file for mutation calling).\n                        </p> \n                    </div>\n                    {\n                        molecularData.map((data, i) => (\n                            <MolecularDataForm \n                                key={i}\n                                length={molecularData.length}\n                                molecularData={data} \n                                index={i} \n                                handleInputChange={handleMolecularDataInput}\n                                handleReset={handleMolecularDataReset}\n                                handleAddClick={handleMolecularDataAdd}\n                                handleRemoveClick={handleMolecularDataRemove}\n                            />\n                        ))\n                    }\n                </DocSection>\n                <CustomMessages trigger={showMsg} message={submitMessage} />\n                <DocSection>\n                    <Button \n                        label='Submit Data' \n                        type='submit' \n                        disabled={isSubmitDisabled()} \n                        onClick={submit} \n                    />\n                </DocSection>\n            </StyledDataSubmission>\n        </div>\n    )\n}\n\nexport default DataSubmission;","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst StyledDataSubmission = styled.div`\n    width: 100%;\n    background-color: rgba(255, 255, 255, 0.8);\n    border-radius: 10px;\n    padding-left: 20px;\n    padding-right: 20px;\n    padding-top: 20px;\n    padding-bottom: 30px;\n    font-size: 12px;\n    .title {\n        font-size: 20px;\n        font-weight: bold;\n    }\n    .sub-title {\n        font-size: 14px;\n        font-weight: bold;\n        margin-top: 30px;\n        margin-bottom: 10px;\n    }\n`;\n\nconst StyledTableGroup = styled.div`\n    display: flex;\n    .left {\n        margin-right: 10px;\n    }\n`;\n\nconst StyledTable = styled.table`\n    font-size: 12px;\n    td {\n        padding: 5px;\n    }\n    .label {\n        font-weight: bold;\n    }\n    .value {\n        text-align: left;\n        padding-right: 20px;\n    }\n`;\n\nconst SingleDateSubmission = (props) => {\n    const [submission, setSubmission] = useState();\n    const [ready, setReady] = useState(false);\n    useEffect(() => {\n        console.log(props.match.params.id);\n        const getData = async () => {\n            const res = await axios.get(`/api/user/dataset/submitted/${props.match.params.id}`);\n            console.log(res.data);\n            setSubmission(res.data);\n            setReady(true);\n        }\n        getData();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return(\n        <div className='pageContent'>\n            {\n                ready &&\n                <StyledDataSubmission>\n                    <div className='title'>Submitted Data</div>\n                    <div className='sub-title'>Submission Info</div>\n                    <StyledTable className='left'>\n                        <tbody>\n                            <tr>\n                                <td className='label'>Name</td>\n                                <td className='value'>{submission.info.name}</td>\n                                <td className='label'>Submitted by</td>\n                                <td className='value'>{submission.info.email}</td>\n                            </tr>\n                            <tr>\n                                <td className='label'>Status</td>\n                                <td className='value'>{submission.info.status}</td>\n                                <td className='label'>Private</td>\n                                <td className='value'>{submission.info.private ? 'Yes': 'No'}</td>\n                            </tr>\n                            <tr>\n                                <td className='label'>Dataset Type</td>\n                                <td className='value'>{submission.info.datasetType.label}</td>\n                            </tr>\n                        </tbody>\n                    </StyledTable>\n                    <div className='sub-title'>Sample Annotation</div>\n                    <StyledTable className='left'>\n                        <tbody>\n                            <tr>\n                                <td className='label'>Filename</td>\n                                <td className='value'>{submission.sampleAnnotation.filename}</td>\n                                <td className='label'>Repository</td>\n                                <td className='value'>\n                                    <a href={submission.sampleAnnotation.repoURL}>{submission.sampleAnnotation.repoURL}</a>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </StyledTable>\n                    <div className='sub-title'>Drug Annotation</div>\n                    <StyledTable className='left'>\n                        <tbody>\n                            <tr>\n                                <td className='label'>Filename</td>\n                                <td className='value'>{submission.drugAnnotation.filename}</td>\n                                <td className='label'>Repository</td>\n                                <td className='value'>\n                                    <a href={submission.drugAnnotation.repoURL}>{submission.drugAnnotation.repoURL}</a>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </StyledTable>\n                    <div className='sub-title'>Raw Treatment Sensitivity Data</div>\n                    <StyledTable className='left'>\n                        <tbody>\n                            <tr>\n                                <td className='label'>Version</td>\n                                <td className='value'>{submission.rawTreatmentData.version}</td>\n                                <td className='label'>Filename</td>\n                                <td className='value'>{submission.rawTreatmentData.filename}</td>\n                                <td className='label'>Repository</td>\n                                <td className='value'>\n                                    <a href={submission.rawTreatmentData.repoURL}>{submission.rawTreatmentData.repoURL}</a>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </StyledTable>\n                    <StyledTableGroup>\n                        <StyledTable className='left'>\n                            <tbody>\n                                <tr>\n                                    <td className='label'>Publication</td>\n                                    <td className='value'>{submission.rawTreatmentData.publication.citation}</td>\n                                </tr>\n                            </tbody>\n                        </StyledTable>\n                    </StyledTableGroup>\n                    <StyledTableGroup>\n                        <StyledTable className='left'>\n                            <tbody>\n                                <tr>\n                                    <td className='label'>Publication Link</td>\n                                    <td className='value'>\n                                        <a href={submission.rawTreatmentData.publication.link}>{submission.rawTreatmentData.publication.link}</a>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </StyledTable>\n                    </StyledTableGroup>\n                    <div className='sub-title'>Treatment Sensitivity Info</div>\n                    <StyledTable className='left'>\n                        <tbody>\n                            <tr>\n                                <td className='label'>Filename</td>\n                                <td className='value'>{submission.treatmentInfo.filename}</td>\n                                <td className='label'>Repository</td>\n                                <td className='value'>\n                                    <a href={submission.treatmentInfo.repoURL}>{submission.treatmentInfo.repoURL}</a>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </StyledTable>\n                    <div className='sub-title'>Processed Molecular Profile Data</div>\n                    {\n                        submission.molecularData.map(molecularData => (\n                            <StyledTableGroup>\n                                <StyledTable className='left'>\n                                    <tbody>\n                                        <tr>\n                                            <td className='label'>Data type</td>\n                                            <td className='value'>{molecularData.name.label}</td>\n                                        </tr>\n                                    </tbody>\n                                </StyledTable>\n                                <StyledTable>\n                                    <tbody>\n                                        <tr>\n                                            <td className='label'>Filename</td>\n                                            <td className='value'>{molecularData.filename}</td>\n                                            <td className='label'>Repository</td>\n                                            <td className='value'>\n                                                <a href={molecularData.repoURL}>{molecularData.repoURL}</a>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td className='label'>Tool Name</td>\n                                            <td className='value'>{molecularData.toolname}</td>\n                                            <td className='label'>Tool Version</td>\n                                            <td className='value'>{molecularData.toolversion}</td>\n                                        </tr>\n                                        <tr>\n                                            <td className='label'>Reference Name</td>\n                                            <td className='value'>{molecularData.refname}</td>\n                                            <td className='label'>Reference URL</td>\n                                            <td className='value'>\n                                                <a href={molecularData.refURL}>{molecularData.refURL}</a>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </StyledTable>\n                            </StyledTableGroup>\n                        ))\n                    }\n                </StyledDataSubmission>\n            }\n        </div>\n    );\n}\n\nexport default SingleDateSubmission;","import React, {useState, useContext, useEffect} from 'react';\nimport { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport {Button} from 'primereact/button';\nimport {InputText} from 'primereact/inputtext';\nimport {Messages} from 'primereact/messages';\nimport { AuthContext } from '../../../hooks/Context';\n\nconst StyledUserInfo = styled.div`\n    background-color: rgba(255, 255, 255, 0.8);\n    font-size: 12px;\n    width: 100%;\n    margin-bottom: 10px;\n    padding: 1px 20px 20px 20px;\n    border-radius: 10px;\n    .userInfo{\n        margin-bottom: 20px;\n        font-size: 12px;\n    }\n    .userInfoBtn{\n        margin-top: 20px;\n    }\n    .userInfoBtn .pwdReset {\n        margin-right: 5px;\n    }\n`;\n\nconst UserInfo = () => {\n    const auth = useContext(AuthContext);\n    const [show, setShow] = useState(false)\n    const [password1, setPassword1] = useState('')\n    const [password2, setPassword2] = useState('')\n    const [btnResetDisabled, setBtnResetDisabled] = useState(true)\n\n    useEffect(() => {\n        password1.length >= 6 ?  password1 === password2 && setBtnResetDisabled(false) : setBtnResetDisabled(true);\n    }, [password1, password2])\n    \n    const showPwdReset = (event) => {\n        event.preventDefault()\n        setShow(true)\n    }\n\n    const hidePwdReset = (event) => {\n        event.preventDefault()\n        setShow(false)\n    }\n\n    const resetPwd = async (event) => {\n        event.preventDefault()\n        // const res = await fetch('/api/user/reset', {\n        //     method: 'POST',\n        //     body: JSON.stringify({\n        //         user: { username: auth.user.username, password: password1 }   \n        //     }),\n        //     headers: { 'Content-type': 'application/json' }\n        // })\n        // const data = await res.json();\n        // if(data.authenticated){\n        //     console.log('authenticated');\n        //     auth.setAuthToken(data);\n        //     setPassword1('')\n        //     setPassword2('')\n        //     setShow(false)\n        //     UserInfo.messages.show({severity: 'success', summary: 'Password changed'});\n        // }else{\n        //     UserInfo.messages.show({severity: 'error', summary: 'Error occurred', detail: 'Password could not be changed'});\n        // }\n    }\n\n    return(\n        <StyledUserInfo>\n            <h2>Profile</h2>\n            <Messages ref={(el) => UserInfo.messages = el}></Messages>\n            <div className='userInfo'>Username: {auth.user.username}</div>\n            { auth.user.isAdmin && <div className='userInfo'><Link to = '/app/admin'>Admin Menu</Link></div> }\n            {\n                show &&\n                <div>\n                    <div>\n                        <div className='pwdMsg'>Password needs to be at least 6 characters in length</div>\n                        <InputText className='pwdInput' type='password' name='password1' value={password1} onChange={(e) => {setPassword1(e.target.value)}}/>\n                    </div>\n                    <div>\n                        <label>Confirm your password:</label>\n                        <InputText className='pwdInput' type='password' name='password2' value={password2} onChange={(e) => {setPassword2(e.target.value)}}/>\n                    </div> \n                </div> \n            }\n            <div className='userInfoBtn'>\n                {\n                    show ? \n                    <div>\n                        <Button className='pwdReset' label='Reset' onClick={resetPwd} disabled={btnResetDisabled}/>\n                        <Button className='pwdReset' label='Cancel' onClick={hidePwdReset}/>\n                    </div>\n                    :\n                    <Button label='Reset password' onClick={showPwdReset}/>\n                }\n                \n            </div>\n        </StyledUserInfo>\n    );\n}\n\nexport default UserInfo;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Button } from 'primereact/button';\nimport { Dialog } from 'primereact/dialog';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport useDataTable from '../../../hooks/useDataTable';\n\nconst StyledUserDataset = styled.div`\n    width: 100%;\n    margin-bottom: 10px;\n    border-radius: 10px;\n    padding: 1px 20px 20px 20px;\n    background-color: rgba(255, 255, 255, 0.8);\n    .userPSetContent{\n        margin-top: 20px;\n        width: 100%;\n    }\n    .footer{\n        margin-top: 20px;\n    }\n`;\n\nconst UserDataset = (props) => {\n    const { heading, btnLabel, datasets, handleBtnClick, pending } = props;\n    \n    const {\n        nameColumnTemplateUserDataset,\n        canonicalTemplate,\n        privateTemplate\n    } = useDataTable(null);\n\n    const [selectedDatasets, setSelectedDatasets] = useState([]);\n    const [btnDisabled, setBtnDisabled] = useState(true);\n    const [dialogVisible, setDialogVisible] = useState(false);\n    const [btnYesDisplayed, setBtnYesDisplayed] = useState(false);\n\n    useEffect(() => {\n        if(selectedDatasets.length > 0){\n            setBtnDisabled(false);\n        }else{\n            setBtnDisabled(true);\n        }\n    }, [selectedDatasets]);\n\n    const onClickYes = () => {\n        setBtnDisabled(true);\n        setBtnYesDisplayed(true);\n        handleBtnClick(selectedDatasets);\n        setSelectedDatasets([]);\n        setDialogVisible(false);\n    }\n    \n    const onHide = () => {\n        setDialogVisible(false);\n        setBtnYesDisplayed(false);\n    }\n\n    const dialogFooter = (\n        <div>\n            <Button label=\"Yes\" onClick={onClickYes} disabled={btnYesDisplayed}/>\n            <Button label=\"Cancel\" onClick={onHide} />\n        </div>\n    );\n\n    return(\n        <StyledUserDataset>\n            <h3>{heading}</h3>\n            <div className='userPSetContent'>\n                {\n                    datasets.length > 0 ? \n                    <React.Fragment>\n                        <div>\n                            <DataTable \n                                value={datasets} \n                                selection={selectedDatasets} \n                                onSelectionChange={(e) => {setSelectedDatasets(e.value)}} \n                                paginator={true} \n                                rows={10} \n                                resizableColumns={true} \n                                scrollable={true} \n                                scrollHeight={'300px'}\n                            >\n                                {\n                                    !pending && <Column selectionMode=\"multiple\" style={{width: '40px', textAlign: 'center'}} />\n                                }\n                                <Column className='textField' field='name' header='Name' style={{width:'150px'}} body={nameColumnTemplateUserDataset} sortable={true} />\n                                <Column className='textField' field='dataset.name' header='Dataset' style={{width:'100px'}} sortable={true} />\n                                <Column className='textField' field='datasetType.label' header='Dataset Type' style={{width:'100px'}} sortable={true} />\n                                {\n                                    !pending && <Column field='canonical' body={canonicalTemplate} style={{width:'90px', textAlign: 'center'}} header='Canonical' />\n                                }\n                                <Column field='private' body={privateTemplate} style={{width:'60px', textAlign: 'center'}} header='Private' /> \n                            </DataTable>\n                        </div>\n                        <div className='footer'>\n                        { \n                            !pending && \n                            <Button \n                                label={btnLabel} \n                                onClick={(e) => {\n                                    e.preventDefault();\n                                    setDialogVisible(true);\n                                }} \n                                disabled={btnDisabled} \n                            /> \n                        } \n                        </div>\n                    </React.Fragment> \n                    : \n                    <p>None</p>\n                }\n            </div>\n            <div>\n                <Dialog \n                    header='Removing Dataset(s)'\n                    footer={dialogFooter} \n                    visible={dialogVisible} \n                    style={{width: '300px'}} \n                    modal={true} \n                    onHide={onHide}\n                >\n                    Are you sure you would like to remove the selected Dataset(s) from the saved list?\n                </Dialog>\n            </div>\n        </StyledUserDataset>\n    );\n}\n\nexport default UserDataset;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport useDataTable from '../../hooks/useDataTable';\n\nconst StyledUserDataset = styled.div`\n    width: 100%;\n    margin-bottom: 10px;\n    border-radius: 10px;\n    padding: 1px 20px 20px 20px;\n    background-color: rgba(255, 255, 255, 0.8);\n    .userPSetContent{\n        margin-top: 20px;\n        width: 100%;\n    }\n    .footer{\n        margin-top: 20px;\n    }\n`;\n\nconst StyledButton = styled.button`\n    font-size: 11px;\n    border: none;\n    background: none;\n    padding: 0px 0px;\n    color: #007ad9;\n    cursor: pointer;\n`;\n\nconst DataSubmissionList = (props) => {\n    const { className, heading, datasets, admin, markComplete } = props;\n\n    const {\n        privateTemplate\n    } = useDataTable(null);\n\n    const nameColumnTemplateDataSubmission = (rowData, column) => (\n        <Link to={`/app/data_submission/submitted/${rowData._id}`} target=\"_blank\">{rowData.info.name}</Link>\n    );\n\n    const completeButtonTemplate = (rowData, column) => {\n        return(\n            rowData.info.status !== 'complete' ? \n            <StyledButton id={rowData._id} onClick={(e) => {markComplete(e, rowData._id)}} >Complete</StyledButton>\n            : \n            ''\n        );\n    };\n\n    return(\n        <StyledUserDataset className={className}>\n            <h3>{heading}</h3>\n            {\n                datasets.length > 0 ?\n                <div>\n                    <DataTable \n                        value={datasets} \n                        paginator={true} \n                        rows={10} \n                        resizableColumns={true} \n                        scrollable={true} \n                        scrollHeight={'300px'}\n                    >\n                        <Column className='textField' field='info.name' header='Name' style={{width:'150px'}} body={nameColumnTemplateDataSubmission} sortable={true} />\n                        <Column className='textField' field='info.datasetType.label' header='Dataset Type' style={{width:'100px'}} sortable={true} />\n                        <Column className='textField' field='info.status' header='Status' style={{width:'100px'}} sortable={true} />\n                        <Column field='info.private' body={privateTemplate} style={{width:'60px', textAlign: 'center'}} header='Private' />\n                        {\n                            admin &&\n                            <Column body={completeButtonTemplate} style={{width:'90px', textAlign: 'center'}} header='Mark as complete' />\n                        } \n                    </DataTable>\n                </div>\n                :\n                <p>None</p>\n            }\n            \n        </StyledUserDataset>\n    );\n    \n}\n\nexport default DataSubmissionList;","import React, {useState, useEffect, useContext} from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nimport { AuthContext } from '../../hooks/Context';\nimport UserInfo from './subcomponents/UserInfo';\nimport UserDataset from './subcomponents/UserDataset';\nimport DataSubmissionList from '../DataSubmission/DataSubmissionList';\n\nconst StyledProfile = styled.div`\n    width: 100%;\n`;\n\nconst Profile = () =>{\n    const auth = useContext(AuthContext);\n    const [savedDatasets, setSavedDatasets] = useState([]);\n    const [inProcessDatasets, setInProcessDatasets] = useState([]);\n    const [dataSubmissions, setDataSubmissions] = useState([]);\n\n    useEffect(() => {\n        const initialize = async () => {\n            const res = await axios.get(`/api//view/user/profile/main?username=${auth.user.username}`);\n            console.log(res.data);\n            let complete = res.data.datasets.filter(itme => itme.status === 'complete');\n            let pending = res.data.datasets.filter(itme => itme.status !== 'complete');\n            setSavedDatasets(complete);\n            setInProcessDatasets(pending);\n            setDataSubmissions(res.data.submissions);\n        }\n        initialize();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const removeFromSavedList = async (selectedDatasets) => {\n        let datasetId = selectedDatasets.map(item => (item._id));\n        try{\n            await axios.post('/api/user/dataset/remove', {username: auth.user.username, datasetId: datasetId});\n            let updated = savedDatasets.filter(item => !datasetId.includes(item._id));\n            setSavedDatasets(updated);\n        }catch(err){\n            console.log(err);\n        }\n    }\n\n    return(\n        <div className='pageContent'>\n            <StyledProfile>\n                <UserInfo />\n                <UserDataset \n                    heading='Saved Datasets' \n                    btnLabel='Remove from List' \n                    datasets={savedDatasets} \n                    handleBtnClick={removeFromSavedList}\n                />\n                <UserDataset \n                    heading='Dataset Requests in Process'\n                    datasets={inProcessDatasets} \n                    pending={true}\n                />\n                <DataSubmissionList \n                    heading='Data Submissions'\n                    datasets={dataSubmissions}\n                />\n            </StyledProfile>\n        </div>\n    );\n}\n\nexport default Profile;","import React, {useState, useEffect, useContext} from 'react';\nimport axios from 'axios';\n\nimport {Messages} from 'primereact/messages';\nimport {Button} from 'primereact/button';\nimport styled from 'styled-components';\nimport {trackPromise} from 'react-promise-tracker';\nimport Loader from 'react-loader-spinner';\nimport { AuthContext } from '../../hooks/Context';\nimport PSetTable from '../SearchRequest/PSet/PSetTable';\nimport DataSubmissionList from '../DataSubmission/DataSubmissionList';\n\nconst Container = styled.div`\n    .title {\n        font-size: 20px;\n        font-weight: bold;\n    }\n    .bottom {\n        margin-top: 20px;\n    }\n`;\n\nconst MenuContainer = styled.div`\n    display: flex;\n    align-items: center;\n    button {\n        margin-left: 20px;\n    }\n`\n\nconst Admin = () => {\n    \n    const auth = useContext(AuthContext);\n\n    const [datasets, setDatasets] = useState({ready: false, psets: []});\n    const [selected, setSelected] = useState([]);\n    const [submissions, setSubmissions] = useState([]);\n\n    useEffect(() => {\n        const getData = async () => {\n            const res = await trackPromise(axios.get('/api/view/admin'));\n            setSelected(res.data.datasets.filter(p => {return p.canonical}));\n            setDatasets({ready: true, psets: res.data.datasets});\n            setSubmissions(res.data.submissions);\n        }\n        getData();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const updateCanonicalPSets = async (event) => {\n        event.preventDefault()\n        setDatasets({...datasets, ready: false})\n        await trackPromise(axios.post('/api/admin/dataset/canonical/update', {selected: selected}));\n        const res = await trackPromise(axios.post('/api/pset/search', {parameters: {status: 'complete', private: false}}));\n        setSelected(res.data.filter(p => {return p.canonical}));\n        setDatasets({ready: true, psets: res.data});\n    }\n\n    const markCompleteSubmisson = async (e, id) => {\n        e.preventDefault();\n        console.log(id);\n        await axios.post(`/api/admin/submission/complete/${id}`, {});\n        const res = await axios.get('/api/admin/submission/list');\n        setSubmissions(res.data);\n    }\n    \n    return(\n        <div className='pageContent'>\n            <Container>\n                <div className='title'>Administrator's Menu</div>\n                <Messages ref={(el) => Admin.messages = el} />\n                <MenuContainer>\n                    <h4>Update Canonical PSets</h4>\n                    <Button label='Update' type='submit' onClick={updateCanonicalPSets} />\n                </MenuContainer>\n                {\n                    datasets.ready ?\n                    <PSetTable \n                        psets={datasets.psets} \n                        selectedPSets={selected} \n                        updatePSetSelection={(e) => {setSelected(e.value)}} \n                        scrollHeight='600px'\n                        authenticated={auth.user ? true : false}\n                        download={false}\n                    /> \n                    :\n                    <Loader type=\"ThreeDots\" color=\"#3D405A\" height={100} width={100} />\n                }\n                <DataSubmissionList \n                    className='bottom'\n                    heading='Data Submissions'\n                    datasets={submissions}\n                    admin={true}\n                    markComplete={markCompleteSubmisson}\n                />\n            </Container>\n        </div>\n    )\n}\n\nexport default Admin","import styled from 'styled-components'; \n\nconst StyledLoginForm = styled.div`\n    width: 400px;\n    margin-left: auto;\n    margin-right: auto;\n    background-color:rgb(255, 255, 255,0.5);\n    border-radius: 10px;\n    padding-top: 10px;\n    padding-left: 30px;\n    padding-right: 30px;\n    padding-bottom: 30px;\n    margin-top: 200px;\n\n    label {\n        font-size: 12px;\n    }\n\n    .message {\n        color: red;\n        font-size: 12px;\n    }\n\n    .emailInput{\n        display: flex;\n        align-items: center;\n        label {\n            margin-right: 10px;\n        }\n        .p-inputtext {\n            font-size: 12px;\n            margin-right: 10px;\n            width: 80%;\n        }\n        .p-button.p-button-text-icon-left .p-button-text {\n            padding: 0.3em 0.5em 0.3em 2.0em;\n        }\n    }\n\n    .pwdInput{\n        width: 80%;\n        margin-bottom: 20px;\n    }\n\n    .forgotPasswordBtn{\n        background: none;\n        outline: none;\n        border: none;\n        cursor: pointer;\n        color: #3D405A;\n        text-decoration: underline;\n    }\n`;\n\nexport default StyledLoginForm;","import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport {Button} from 'primereact/button';\nimport {InputText} from 'primereact/inputtext';\nimport {Messages} from 'primereact/messages';\nimport CustomMessages from '../Shared/CustomMessages';\nimport StyledAuthForm from './StyledAuthForm';\n\nimport useAuth from '../../hooks/useAuth';\n\nconst errorMessage = { \n    severity: 'error', \n    summary: 'Login Failed', \n    detail: 'Please try again with correct credentials.', \n    sticky: true \n};\n\nconst Authentication = (props) => {\n    const { location } = props;\n    const { submitUser, error } = useAuth();\n\n    const [user, setUser] = useState({\n        username: '',\n        password1: '',\n        password2: '',\n        action: ''\n    });\n\n    const findUser = async (e) => {\n        e.preventDefault();\n        setUser({...user, action: ''});\n        const res = await axios.get(`/api/user/find/?username=${user.username}`);\n        console.log(res.data);\n        setUser({...user, action: res.data.action});\n    }\n\n    const onResetClick = async (event) => {\n        event.preventDefault();\n        console.log('reset click');\n        const res = await axios.post('/api/user/reset/email', { email: user.username} );\n        console.log(res);\n        if(res.status === 200){\n            Authentication.messages.show({severity: 'success', summary: 'Email has been sent.', detail: 'Please follow the link in the email to reset your password.'});\n        }else{\n            Authentication.messages.show({severity: 'error', summary: 'An error occurred', detail: res.data.message});\n        }\n    }\n\n    const disableFind = () => {\n        const regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n        return !regex.test(user.username);\n    }\n\n    const disableSubmit = () => {\n        const regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n        switch(user.action){\n            case 'login':\n                return(user.password1.length < 6 || !regex.test(user.username));\n            case 'register':\n                return(\n                    user.password1.length < 6 ||\n                    user.password1.localeCompare(user.password2) !== 0 ||\n                    !regex.test(user.username)\n                );\n            default:\n                return true;\n        }\n    }\n\n    return(\n        <div className='pageContent'>\n            <StyledAuthForm>\n                <h3>Login / Register</h3>\n                <Messages ref={(el) => Authentication.messages = el}></Messages>\n                <CustomMessages trigger={error} message={errorMessage} />\n                <h5>Enter your email:</h5>\n                <div className='emailInput'>\n                    <InputText \n                        type='email' \n                        name='email' \n                        value={user.username} \n                        onChange={(e) => {setUser({...user, username: e.target.value})}} \n                    />\n                    <Button \n                        className='btnLoginFind' \n                        label='Find' \n                        icon=\"pi pi-arrow-right\" \n                        onClick={findUser} disabled={disableFind()} \n                    />\n                </div>\n                {\n                    user.action.length > 0 &&\n                    <React.Fragment>\n                        <h4>{user.action === 'login' ? '' : 'Please register:'}</h4>\n                        <div className='message'>Password needs to be at least 6 characters in length</div>\n                        <InputText \n                            className='pwdInput' \n                            type='password' \n                            value={user.password1} \n                            onChange={(e) => {setUser({...user, password1: e.target.value})}}\n                        />\n                        {\n                            user.action === 'register' &&\n                            <div>\n                                <label>Confirm your password:</label>\n                                <InputText \n                                    className='pwdInput' \n                                    type='password' \n                                    value={user.password2} \n                                    onChange={(e) => {setUser({...user, password2: e.target.value})}}\n                                />\n                            </div>\n                        }\n                        <div>\n                            <Button \n                                label={user.action === 'login' ? 'Login' : 'Register'}  \n                                onClick={(e) => {\n                                    e.preventDefault();\n                                    submitUser(user, location);\n                                }} \n                                disabled={disableSubmit()}\n                            />\n                        </div>\n                        <div>\n                            <button className='forgotPasswordBtn' onClick={onResetClick}>Reset your password</button>\n                        </div>\n                    </React.Fragment> \n                }\n            </StyledAuthForm>   \n        </div>\n    );\n}\n\nexport default Authentication;","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {InputText} from 'primereact/inputtext';\nimport {Button} from 'primereact/button';\nimport {Messages} from 'primereact/messages';\nimport StyledAuthForm from './StyledAuthForm';\n\nconst Reset = (props) => {\n\n    const [email, setEmail] = useState('')\n    const [password1, setPassword1] = useState('')\n    const [password2, setPassword2] = useState('')\n    const [btnDisabled, setBtnDisabled] = useState(true)\n\n    useEffect(() => {\n        const regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n        (password1.length >= 6 && password1 === password2 && regex.test(email)) ? setBtnDisabled(false) : setBtnDisabled(true)\n    }, [email, password1, password2])\n\n    const onResetClick = async (event) => {\n        event.preventDefault();\n        const res = await axios.post('/api/user/reset/token', {\n            user: {\n                username: email, \n                password: password1,\n                token: props.match.params.token\n            }\n        });\n        if(res.data.status === 1){\n            Reset.messages.show({severity: 'success', summary: 'Password has been reset', detail: 'Please login using your new password.'});\n        }else{\n            Reset.messages.show({severity: 'error', summary: 'Password could not be reset', detail: res.data.message});\n        }\n    }\n    \n    return(\n        <div className='pageContent'>\n            <StyledAuthForm>\n                <h3>Reset Password</h3>\n                <Messages ref={(el) => Reset.messages = el}></Messages>\n                <div className='emailInput'>\n                    <label>Email:</label>\n                    <InputText type='email' name='email' value={email} onChange={(e) => {setEmail(e.target.value)}}/>\n                </div>\n                <div className='formContainer'>\n                    <h4>Enter new password</h4>\n                    <div>\n                        <label>Password needs to be at least 6 characters in length</label>\n                        <InputText className='pwdInput' type='password' name='password1' value={password1} onChange={(e) => {setPassword1(e.target.value)}}/>\n                    </div>\n                    <div>\n                        <label>Confirm new password:</label>\n                        <InputText className='pwdInput' type='password' name='password2' value={password2} onChange={(e) => {setPassword2(e.target.value)}}/>\n                    </div>\n                    <div>\n                        <Button label='Reset' onClick={onResetClick} disabled={btnDisabled}/>\n                    </div>\n                </div>\n            </StyledAuthForm> \n        </div>\n    );\n}\n\nexport default Reset","import React, {useState, useEffect} from 'react';\nimport { Accordion, AccordionTab } from 'primereact/accordion';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {dataTypes} from '../Shared/Enums';\n\nconst StyledContainer = styled.div`\n    margin-bottom: 20px;\n    border-radius: 10px;\n    padding-top: 5px;\n    padding-left: 30px;\n    padding-right: 30px;\n    padding-bottom: 30px;\n    background-color: rgba(255, 255, 255, 0.8);\n`\n\nconst StyledTable = styled.table`   \n    margin-left: 30px;\n    margin-bottom: 10px;\n    .psetName {\n        font-size: 16px;\n    }\n    .rnaRefColumn {\n        width: 30%;\n    }\n    td {\n        width: 20%;\n        margin: 0;\n        padding-right: 50px;\n        padding-bottom: 10px;\n        font-size: 14px;\n        font-family: arial, san-serif;\n    }\n    td .bold {\n        font-weight: bold;\n    }\n`\n\nconst NonCanonDiv = styled.div`\n    margin-left: 30px;\n    width: 60%;\n`\n\nconst NonCannonTable = styled.table`\n    td {\n        margin: 0;\n        padding-right: 30px;\n        padding-bottom: 10px;\n    }\n`\n\nconst PSetContainer = styled.div`\n    margin-bottom: 30px;\n    padding-bottom: 30px;\n    border-bottom: 1px solid #999999;\n`\n\nconst CanonicalPSets = (props) => {\n    \n    const [canonPSets, setCanonPSets] = useState([])\n    \n    useEffect(() => {\n        const getData = async () => {\n            const res = await fetch('/api/canonical/pset')\n            const json = await res.json()\n            console.log(json)\n            setCanonPSets(json)\n        }\n        getData()\n    }, [])\n\n    const toolsRefTemplate = (array) => {\n        let output ='Not Available';\n        if(array.length){\n            output = array.map(item => <div key={item.name}>{item.label}</div>);\n        }\n        return(\n            <div>{output}</div>\n        );\n    }\n\n    const nameColumnTemplate = (data) => {\n        let route = `/${dataTypes.pharmacogenomics}/${data.doi}`;\n        return(\n            <Link to={route} target=\"_blank\">{data.name}</Link>\n        );\n    }\n\n    const canonTable = (psets) => (\n        <StyledTable>\n            <tbody>\n            {psets.map(pset => {\n                return(\n                    <tr key={pset.name}>\n                        <td className='psetName'>{nameColumnTemplate(pset)}</td>\n                        <td><div>Drug Sensitivity Data:</div> <span className='bold'>{pset.dataset.versionInfo}</span></td>\n                        <td>RNA Tools: <span className='bold'>{toolsRefTemplate(pset.rnaTool)}</span></td>\n                        <td className='rnaRefColumn'>RNA Ref: <span className='bold'>{toolsRefTemplate(pset.rnaRef)}</span></td>\n                    </tr>\n                )\n            })}\n            </tbody>\n        </StyledTable>    \n    )\n\n    const nonCanonTable = (psets) => (\n        <NonCannonTable>\n            <tbody>\n            {psets.map(pset => {\n                return(\n                    <tr key={pset.name}>\n                        <td className='psetName'>{nameColumnTemplate(pset)}</td>\n                        <td><div>Drug Sensitivity Data:</div> {pset.dataset.versionInfo}</td>\n                        <td>RNA Tools: {toolsRefTemplate(pset.rnaTool)}</td>\n                        <td className='rnaRefColumn'>RNA Ref: {toolsRefTemplate(pset.rnaRef)}</td>\n                    </tr>\n                )\n            })}\n            </tbody>\n        </NonCannonTable> \n    )\n\n    return(\n        <div className='pageContent'>\n            <h2>List of Canonical PSets (The Latest Version of PSets Created by BHK Lab)</h2>\n            <StyledContainer>\n            {\n                canonPSets.map(dataset => (\n                    <PSetContainer key={dataset.dataset}>\n                        <h4>{dataset.dataset}</h4>\n                        {canonTable(dataset.canonicals)}  \n                        {\n                            dataset.nonCanonicals.length ?\n                            <NonCanonDiv>\n                                <Accordion>\n                                    <AccordionTab header='Other Versions'>\n                                        {nonCanonTable(dataset.nonCanonicals)}\n                                    </AccordionTab>\n                                </Accordion>\n                            </NonCanonDiv>\n                            :\n                            ''\n                        }\n                    </PSetContainer>    \n                ))\n            }\n            </StyledContainer>\n        </div>\n    )\n}\n\nexport default CanonicalPSets","import React from 'react';\n\nconst NotFound404 = (props) => {\n\n    return(\n        <React.Fragment>\n            <div className='pageContent'>\n                <h2>The page you are looking for could not be found.</h2>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default NotFound404;","import React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { AuthContext, PathContext } from \"../hooks/Context\";\nimport useFindUser from '../hooks/useFindUser';\nimport usePachyderm from '../hooks/usePachyderm';\n\n// routes \nimport PrivateRoute from './PrivateRoute';\n// import DatasetRoute from './DatasetRoute'; not used\nimport RestrictedRoute from './RestrictedRoute';\nimport AdminRoute from './AdminRoute';\n\n// navigation and footer\nimport Navigation from '../components/Navigation/Navigation';\nimport Footer from '../components/Footer/Footer';\n\n// views\nimport Main from '../components/Main/Main';\nimport DatasetMain from '../components/Main/DatasetMain';\nimport SearchRequest from '../components/SearchRequest/SearchRequest';\nimport SingleDataset from '../components/SingleDataset/SingleDataset';\nimport RequestStatus from '../components/RequestStatus/RequestStatus';\nimport Stats from '../components/Stats/Stats';\nimport Documentation from '../components/Documentation/Documentation';\nimport DataSubmission from '../components/DataSubmission/DataSubmission';\nimport SingleDataSubmission from '../components/DataSubmission/SingleDataSubmission';\nimport Profile from '../components/Profile/Profile';\nimport Admin from '../components/Admin/Admin';\nimport Authentication from '../components/Authentication/Authentication';\nimport Reset from '../components/Authentication/Reset';\nimport CanonicalPSets from '../components/CanonicalPSets/CanonicalPSets';\nimport NotFound404 from '../components/Shared/NotFound404';\n\nconst Router = () => {\n    /**\n     * Loads user data to AuthContext.\n     * Call find user hook as soon as the app is loaded, and routes are rendered. \n     * User is null if token is invalid, or not logged in.\n     */\n    const { user, setUser, loading } = useFindUser();\n    const [datatype, setDatatype] = useState('');\n    const { online } = usePachyderm();\n\n    return(\n        <AuthContext.Provider value={{user, setUser, loading}}>\n            <PathContext.Provider value={{datatype: datatype, setDatatype: setDatatype}}>\n                <Navigation isPachydermOnline={online} />\n                <Switch>\n                    <Route exact path ='/' component={Main} /> \n                    <Route exact path ='/:datatype' render={(props) => (<DatasetMain {...props} />)} /> \n                    <Route exact path ='/:datatype/search' render={(props) => (<SearchRequest {...props}  />)}/>\n                    <Route exact path='/:datatype/canonical' component={CanonicalPSets} /> \n                    <Route exact path ='/:datatype/status' component={RequestStatus}/>\n                    <Route exact path ='/:datatype/stats' component={Stats}/>\n                    <Route exact path ='/app/documentation/:section' component={Documentation} />\n                    <Route exact path='/app/authentication' component={Authentication} />\n                    <Route exact path ='/reset/:token' component={Reset} />\n                    <PrivateRoute exact path ='/app/data_submission' component={DataSubmission} redirect='/app/authentication' />\n                    <PrivateRoute exact path='/app/profile' component={Profile} redirect='/app/authentication' />\n                    <AdminRoute exact path='/app/admin' component={Admin} redirect='/app/profile' />\n                    <RestrictedRoute \n                        exact \n                        path ='/app/data_submission/submitted/:id' \n                        component={SingleDataSubmission} \n                        redirect='/app/authentication' \n                        type='dataSubmission'\n                    />\n                    <RestrictedRoute \n                        exact \n                        path='/:datatype/:id1/:id2' \n                        component={SingleDataset} \n                        redirect='/app/authentication' \n                        type='dataset'\n                    />\n                    <Route component={NotFound404}/>\n                </Switch>\n                <Footer />\n            </PathContext.Provider>\n        </AuthContext.Provider>\n    );\n}\n\nexport default Router;","import React, {useEffect} from 'react';\nimport ReactGA from 'react-ga';\nimport './styles/prime-style.css';\nimport GlobalStyles from './styles/GlobalStyles';\nimport Router from './Routes/Router';\n\nconst App = () => {\n\t\n\t// Google Analytics set up\n\tuseEffect(() => {\n\t\tReactGA.initialize('UA-102362625-2')\n\t\tReactGA.pageview(window.location.pathname + window.location.search)\n\t}, [])\n\t\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<GlobalStyles />\n\t\t\t<Router />\n\t\t</React.Fragment>\n\t)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './components/serviceWorker';\n\nReactDOM.render((\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}