{"version":3,"sources":["context/auth.js","components/Routing/PrivateRoute.js","components/Navigation/Navigation.js","components/Main/Main.js","components/Footer/Footer.js","components/App/App.js","components/Shared/PSetAPIHelper.js","components/Shared/APICalls.js","components/Shared/PSetDropdown/PSetDropdown.js","components/Shared/PSetParameterOptions.js","components/PSetSearch/subcomponents/PSetFilter.js","components/Shared/PSetTable.js","components/Shared/Buttons/SavePSetButton.js","components/PSetSearch/PSetSearch.js","components/Dashboard/Dashboard.js","components/Stats/DownloadChart.js","components/Stats/Stats.js","components/Documentation/DocFunctionality/Overview.js","components/Documentation/DocFunctionality/Search.js","components/Documentation/DocFunctionality/Request.js","components/Documentation/DocFunctionality/UserProfile.js","components/Documentation/DocFunctionality/Statistics.js","components/Documentation/Documentation.js","components/Profile/subcomponents/UserInfo.js","components/Shared/Buttons/DownloadPSetButton.js","components/Profile/subcomponents/UserPSet.js","components/Profile/Profile.js","components/Authentication/AuthForm.js","components/Authentication/Login.js","components/PSet/PSetAccordion.js","components/PSet/TabContents/DatasetTabContent.js","components/PSet/TabContents/RNATabContent.js","components/PSet/TabContents/DNATabContent.js","components/PSet/PSet.js","components/Routing/Router.js","components/serviceWorker.js","index.js"],"names":["AuthContext","createContext","PrivateRoute","fetch","then","res","status","json","authenticated","username","data","context","setAuthToken","userAuth","this","exact","path","props","render","React","cloneElement","component","to","pathname","redirect","state","Component","contextType","Navigation","auth","useContext","useState","isOnline","setIsOnline","useEffect","a","checkStatus","onLoginClick","event","preventDefault","routing","history","push","onLogoutClick","console","log","resetAuthToken","location","logoutMsg","Fragment","src","alt","className","activeClassName","label","onClick","width","isOpen","OrcestraMain","statsData","setStatsData","dataset","rnaTool","dnaTool","formData","setFormData","setUser","pending","inProcess","dashboard","setDashboard","api","pset","form","user","fetchData","length","href","style","alignSelf","value","field","header","body","rowData","column","route","doi","name","Footer","App","isNotReadyToSubmit","request","isSelected","dataType","rnaRef","dnaRef","genome","hasName","email","test","isValidEmail","reqParam","Array","isArray","messageAfterRequest","initialize","msgComponent","show","severity","summary","detail","message","toString","sticky","toFilterArray","selectedValues","isDatasetVersion","filterArray","Object","keys","constructor","i","version","buildAPIStrFragment","keyName","apiFragment","queryPSet","callback","resData","PSetDropdown","dataTemplate","option","fontSize","margin","isHidden","selectOne","parameterName","id","optionLabel","selectedParameter","options","parameterOptions","onChange","handleUpdateSelection","filter","itemTemplate","placeholder","disabled","selectedItemTemplate","item","PSetParameterOptions","drugSensitivityOptions","rnaRefOptions","dnaRefOptions","hideRNAToolRef","hideDNAToolRef","isReady","handleFilterChange","bind","setToolState","setRefState","setState","setParentState","target","drugSensitivity","autoUpdate","requestUpdate","parameters","genomeName","map","ref","includes","dropdownClassName","PSetFilter","setRequestView","psetRequestMode","sendFilterPSetRequest","apiStr","filterSet","apiFragments","datatype","datasetVersion","datasetName","replace","APIHelper","filterset","searchAll","APICalls","updateAllData","checked","isRequest","tooltip","PSetTable","rows","first","start","end","totalRecords","loading","downloadOnePSet","link","psetID","psetIDs","method","JSON","stringify","headers","catch","err","API","anchor","document","createElement","setAttribute","display","appendChild","click","removeChild","toolsRefTemplate","output","key","allData","selection","selectedPSets","onSelectionChange","updatePSetSelection","paginator","scrollable","selectionMode","sortable","downloadLink","_id","SavePSetButton","saveSelectedPSets","userPSet","psetId","reqData","onSaveComplete","PSetSearch","handleSubmitRequest","trackPromise","initializeState","messages","updateReqInputEvent","notReadyToSubmit","formDataOriginal","disableSaveBtn","isLoaded","setStateOnParamSelection","showMessage","parse","states","selected","visible","datasetVal","genomeVal","el","usePromiseTracker","promiseInProgress","type","color","height","scrollHeight","Dashboard","setData","setLoading","url","response","submitRequest","result","ok","onSubmit","dateTimeTemplate","dateTimeStr","Date","toLocaleString","undefined","dateStyle","timeStyle","d","isAdmin","button","Plot","createPlotlyComponent","Plotly","DownloadChart","x","y","orientation","marker","layout","autosize","title","xaxis","text","font","size","yaxis","autorange","titlefont","useResizeHandler","Stats","chartData","disableBtn","showMessages","download","showDownload","Overview","Search","Request","UserProfile","Statistics","Documentation","setDisplay","UserInfo","showModal","hideModal","DownloadPSetButton","downloadPSets","psets","UserPSet","handleBtnClick","dialogVisible","btnDisabled","btnYesDislabed","handleSelectionChange","onClickYes","onHide","psetData","onDownloadComplete","btnLabel","noPSetData","dialogFooter","heading","footer","modal","Profile","removeFromSavedList","selectedPSet","saved","psetSaved","removePSetByID","cancelPSetRequest","psetInProcess","userEmail","findPSetByID","complete","psetArray","index","splice","AuthForm","setEmail","password","setPassword","passwordReg1","setPasswordReg1","passwordReg2","setPasswordReg2","userChecked","setUserChecked","userExists","setUserExists","userRegistered","setUserRegistered","btnFindDisabled","setBtnFindDisabled","btnLoginDisabled","setBtnLoginDisabled","btnRegDisabled","setBtnRegDisabled","handleInputChange","onFindClick","exists","registered","onRegisterClick","icon","Login","msg","PSetToolAccordion","toolAccordionTabs","items","commands","command","multiple","RNARefAccordion","rnaRefAccordionTabs","source","DNARefAccordion","exomeRefAccordionTabs","cosmic","exonTarget","GeneralInfoAccordion","dateCreated","createdBy","DatasetTabContent","publication","metadata","citation","RNATabContent","genomeRawData","rawSeqDataRNA","DNATabContent","rawSeqDataDNA","PSet","general","rna","dna","match","params","id1","id2","renderActiveOnly","Router","profile","Provider","Boolean","window","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.deacba1e.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext();","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport {AuthContext} from '../../context/auth';\n\nclass PrivateRoute extends React.Component {\n    \n    static contextType = AuthContext;\n\n    componentDidMount(){\n        fetch('/user/checkToken')\n            .then(res => {\n                if(res.status === 200){\n                    return(res.json());\n                }else{\n                    return({authenticated: false, username: ''});\n                }\n            })\n            .then(data => {this.context.setAuthToken(data)});\n    }\n    \n    render(){\n        const userAuth = this.context;\n        return(\n            <Route            \n                exact path={this.props.path} \n                render={(props) => userAuth.authenticated ? React.cloneElement(this.props.component, {...props}) : (<Redirect to={{pathname: this.props.redirect, state: {path: this.props.path}}} />)}\n            />\n        );\n    }\n}\n\nexport default PrivateRoute;","import React, {useState, useEffect, useContext} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {Button} from 'primereact/button';\nimport {AuthContext} from '../../context/auth';\nimport './Navigation.css';\nimport { slide as Menu } from 'react-burger-menu';\n\nconst Navigation = (props) => {\n\n    const auth = useContext(AuthContext);\n\n    const [isOnline, setIsOnline] = useState(false);\n\n    useEffect(() => {\n        const checkStatus = async () => {\n            const status = await fetch('/pachyderm/status');\n            const json = await status.json();\n            setIsOnline(json.isOnline);\n        }\n        checkStatus();\n    }, []);\n\n    const onLoginClick = (event) => {\n        event.preventDefault();\n        props.routing.history.push({pathname: '/Authentication', state:{path: props.routing.path}});\n    }\n\n    const onLogoutClick = (event) => {\n        event.preventDefault();\n        console.log(props.routing);\n        fetch('/user/logout/:' + auth.username)\n            .then(res => {\n                auth.resetAuthToken();\n                props.routing.history.push({pathname: '/Authentication', state:{path: props.routing.location.pathname, logoutMsg: 'You have logged out'}});\n            });            \n    }\n\n    return(\n        <React.Fragment>\n            <header>\n                <NavLink exact to='/'><img src={process.env.PUBLIC_URL + \"/images/trumpet-orcestra.png\"} alt='' /></NavLink>\n                <div className='navBarContainer'>\n                    <div className='navBar'>\n                        <div><NavLink exact to='/' activeClassName='active-link'>Home</NavLink></div>\n                        <div><NavLink exact to=\"/PSetSearch\" activeClassName='active-link'>Search and Request</NavLink></div>\n                        <div><NavLink exact to=\"/Dashboard\" activeClassName='active-link'>Dashboard</NavLink></div>\n                        <div><NavLink exact to=\"/Documentation\" activeClassName='active-link'>Documentation</NavLink></div>\n                        { auth.authenticated && <div className='menu-item'><NavLink exact to=\"/Profile\" activeClassName='active-link'>Profile</NavLink></div> }\n                        <div>\n                            {\n                                auth.authenticated ? \n                                <Button label='Logout' onClick={onLogoutClick}/> : <Button label='Login/Register' onClick={onLoginClick}/>\n                            }\n                        </div> \n                        <div>\n                            {isOnline ? \n                                <div className='pachydermStatus isOnline'>\n                                    <div className='icon'><i className='pi pi-check'></i></div><div className='text'>Pachyderm is <br />online</div>\n                                </div> \n                                : \n                                <span className='pachydermStatus isOffline'>\n                                    <div className='icon'><i className='pi pi-ban'></i></div><div className='text'>Pachyderm is <br />offline</div>\n                                </span>\n                            }\n                        </div>    \n                    </div>\n                    <div className='burgerNav'>\n                        <Menu width={ 200 } isOpen={true} > \n                            <div className='menu-item'><NavLink exact to='/' activeClassName='active-link'>Home</NavLink></div>\n                            <div className='menu-item'><NavLink exact to=\"/PSetSearch\" activeClassName='active-link'>Search and Request</NavLink></div>\n                            <div><NavLink exact to=\"/Dashboard\" activeClassName='active-link'>Dashboard</NavLink></div>\n                            <div><NavLink exact to=\"/Documentation\" activeClassName='active-link'>Documentation</NavLink></div>\n                            { auth.authenticated && <div className='menu-item'><NavLink exact to=\"/Profile\" activeClassName='active-link'>Profile</NavLink></div> }\n                            <div className='menu-item'>\n                                {\n                                    auth.authenticated ? \n                                    <Button label='Logout' onClick={onLogoutClick}/> : <Button label='Login/Register' onClick={onLoginClick}/>\n                                }\n                            </div>\n                        </Menu>\n                    </div>   \n                </div>\n                \n                <div className='loggedIn'>{auth.authenticated ? 'Logged in as: ' + auth.username : ''}</div> \n            </header>\n        </React.Fragment>\n    );\n}\n\nexport default Navigation;","import React, {useState, useEffect} from 'react';\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport { Link } from 'react-router-dom';\nimport './Main.css';\n\nconst OrcestraMain = (props) => {\n    \n    const [statsData, setStatsData] = useState([]);\n    const [formData, setFormData] = useState({\n        dataset: [],\n        rnaTool: [],\n        dnaTool: []\n    });\n    const [user, setUser] = useState(0);\n    const [dashboard, setDashboard] = useState({\n        pending: 0,\n        inProcess: 0\n    })\n\n    useEffect(() => {\n        const fetchData = async (api) => {\n            const res = await fetch(api);\n            const json = await res.json();\n            console.log(json);\n            setStatsData(json.pset);\n            setFormData(json.form[0]);\n            setUser(json.user);\n            setDashboard(json.dashboard);\n        }\n        fetchData('/landing/data');\n    }, [])\n\n    const nameColumnTemplate = (rowData, column) => {\n        let route = '/' + rowData.doi;\n        return(\n            <Link to={route} >{rowData.name}</Link>\n        );\n    }\n\n    return (\n        <div className='mainContent'>\n            <div className=\"home\">\n                <h1>ORCESTRA</h1>   \n                <h2>Orchestration platform for reproducing pharmacogenomic analyses</h2>\n                <div className='mainMenuContainer'>\n                    <div className='mainMenuRow'>\n                        <div className='mainMenuColumn'>\n                            <div className='mainMenuItem'>\n                                <h2>Search and Request PSets</h2>\n                                <div className='mainMenuItemContent'>\n                                    <div>Design your own PSet using:</div>\n                                    <div className='mainMenuItemLine'><span className='largeNum'>{formData.dataset.length}</span> <span>Datasets.</span></div>\n                                    <div className='mainMenuItemLine'><span className='largeNum'>{formData.rnaTool.length}</span> <span>RNA tools.</span></div>\n                                    <div className='mainMenuItemLine'><span className='largeNum'>{formData.dnaTool.length}</span> <span>DNA tools.</span></div>\n                                    <div className='mainMenuLink'><a className='button' href=\"/PSetSearch\">Search and Request</a></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='mainMenuColumn'>\n                            <div className='mainMenuItem' style={{ alignSelf: 'flex-start'}}>\n                                <h2>View PSet Request Status</h2>\n                                <div className='mainMenuItemContent'>\n                                    <div>ORCESTRA is processing following requests:</div>\n                                    <div className='mainMenuItemLine'><span className='largeNum'>{dashboard.pending}</span> <span>Requests in queue.</span></div>\n                                    <div className='mainMenuItemLine'><span className='largeNum'>{dashboard.inProcess}</span> <span >Requests in process.</span></div>\n                                    <div className='mainMenuLink'><a className='button' href=\"/Dashboard\">View Dashboard</a></div>\n                                </div>\n                            </div>\n                        </div> \n                        <div className='mainMenuColumn'>\n                            <div className='mainMenuItem'>\n                                    <h2>Top 5 Popular PSets</h2>\n                                    <div className='mainMenuItemContent'>\n                                        <DataTable value={statsData} >\n                                            <Column className='textField' field='download' header='Download' />\n                                            <Column className='textField' field='name' header='Name' body={nameColumnTemplate}/>\n                                        </DataTable>\n                                        <div className='mainMenuLink'><a className='button' href=\"/Stats\">View Statistics</a></div>\n                                    </div>\n                            </div> \n                            {/* <div className='mainMenuItem'>\n                                <h2>Create your profile</h2>\n                                <div className='mainMenuItemContent'>\n                                    <div>ORCESTRA has: </div>\n                                    <div className='mainMenuItemLine'><span className='largeNum'>{user}</span> <span>Active users.</span></div>\n                                    <div className='mainMenuLink'><a className='button' href=\"/Authentication\">Login/Register</a></div>\n                                </div>\n                            </div>  */}\n                        </div>    \n                    </div>  \n                </div>  \n            </div>\n        </div>\n    );\n    \n}\n\nexport default OrcestraMain;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Footer.css';\n\nconst Footer = (props) => {\n    return(\n        <div className='appFooter'>\n            <div className='footerContainer'>\n                <div className=\"footerMenu footerLinks\">\n                    <h3>Menu</h3>\n                    <NavLink exact to=\"/PSetSearch\" >Search and Request</NavLink>\n                    <NavLink exact to=\"/Dashboard\" >Dashboard</NavLink>\n                    <NavLink exact to=\"/Stats\" >Statistics</NavLink>\n                </div>\n                <div className=\"footerSupport footerLinks\">\n                    <h3>Support</h3>\n                    <NavLink exact to=\"/Documentation\" >Documentation</NavLink>\n                    <a href=\"https://github.com/bhklab\">GitHub</a>\n                    <a href=\"https://bhklab.ca/\">BHKLab</a>\n                </div>\n                <div className=\"footerContact\">\n                    <h3>BHKLab</h3>\n                    <div className='contactInfo'>\n                        The MaRS center\n                        <br />\n                        101 College St, Toronto ON\n                        {' '}\n                        <br />\n                        TMDT RM 11-310\n                    </div>\n                </div>\n            </div>\n        </ div>\n    );\n} \n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport './PrimeStyle.css';\n\nimport Navigation from '../Navigation/Navigation';\nimport Main from '../Main/Main';\nimport Footer from '../Footer/Footer';\n\nclass App extends React.Component {\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Navigation routing={this.props} />\n\t\t\t\t<Main />\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// Helper functions used for PSet API requests.\n\nexport function getFilterSet(data){\n    var filterset = {}\n    filterset.datatype = toFilterArray(data.dataType);\n    filterset.datasetName = toFilterArray(data.dataset);\n    filterset.datasetVersion = toFilterArray(data.dataset, true);\n    filterset.genome = toFilterArray(data.genome);\n    filterset.rnaTool = toFilterArray(data.rnaTool);\n    filterset.dnaTool = toFilterArray(data.dnaTool);\n    filterset.rnaRef = toFilterArray(data.rnaRef);\n    filterset.dnaRef = toFilterArray(data.dnaRef);\n    filterset.drugSensitivity = toFilterArray(data.drugSensitivity, true);\n    return(filterset);\n}\n\nexport function buildAPIStr(filterSet){\n    let apiStr = '/pset?status=complete&';\n    let apiFragments = [];\n    apiFragments.push(buildAPIStrFragment('dtp', filterSet.datatype));\n    apiFragments.push(buildAPIStrFragment('dsv', filterSet.datasetVersion));\n    apiFragments.push(buildAPIStrFragment('dsn', filterSet.datasetName));\n    apiFragments.push(buildAPIStrFragment('gnm', filterSet.genome));\n    apiFragments.push(buildAPIStrFragment('rnat', filterSet.rnaTool));\n    apiFragments.push(buildAPIStrFragment('dnat', filterSet.dnaTool));\n    apiFragments.push(buildAPIStrFragment('rnar', filterSet.rnaRef));\n    apiFragments.push(buildAPIStrFragment('dnar', filterSet.dnaRef));\n    apiFragments.push(buildAPIStrFragment('dst', filterSet.drugSensitivity));\n    for(let i = 0; i < apiFragments.length; i++){\n        if(apiFragments[i].length > 0){\n            apiStr += apiFragments[i] + '&';\n        }\n    }\n    apiStr = apiStr.replace(/&$/, '');\n    return(apiStr);\n}\n\nexport function isNoneSelected(filterset){\n    if(!filterset.datatype.length && \n        !filterset.datasetName.length && \n        !filterset.genome.length && \n        !filterset.rnaTool.length &&\n        !filterset.dnaTool.length &&\n        !filterset.rnaRef.length &&\n        !filterset.dnaRef.length &&\n        !filterset.drugSensitivity.length){\n        return(true);\n    }\n    return(false);\n}\n\nexport function isNotReadyToSubmit(request){\n    if(!isSelected(request.dataType)){\n        return(true);\n    }else if(request.dataType.length === 1){\n        if(request.dataType[0] === 'RNA' && (!isSelected(request.rnaRef) || !isSelected(request.rnaTool))){\n            return(true);\n        }else if(request.dataType[0] === 'DNA' && (!isSelected(request.dnaRef) || !isSelected(request.dnaTool))){\n            return(true);\n        }\n    }else{\n        if(!isSelected(request.rnaRef)){\n            return(true);\n        }\n        if(!isSelected(request.dnaRef)){\n            return(true);\n        }\n        if(!isSelected(request.rnaTool)){\n            return(true);\n        }\n        if(!isSelected(request.dnaTool)){\n            return(true);\n        }\n    }\n\n    if(!isSelected(request.genome)){\n        return(true);\n    } \n    if(!isSelected(request.dataset)){\n        return(true);\n    }\n    // if(!isSelected(request.drugSensitivity)){\n    //     return(true);\n    // }\n    if(!hasName(request.name)){\n        return(true);\n    }\n    if(!isValidEmail(request.email)){\n        return(true);\n    }\n    return(false);\n}\n\nexport function isSelected(reqParam){\n    if(typeof reqParam === 'undefined' || reqParam === null){\n        return(false);\n    }\n    if(Array.isArray(reqParam) && !reqParam.length){\n        return(false);\n    }\n    return(true);\n}\n\nexport function messageAfterRequest(status, data, initialize=null, msgComponent){\n    if(initialize){\n        initialize();\n    }\n    if(status){\n        msgComponent.show({severity: 'success', summary: data.summary, detail: data.message});\n    }else{\n        msgComponent.show({severity: 'error', summary: 'An error occured', detail: data.toString(), sticky: true});\n    } \n}\n\nfunction hasName(name){\n    if(typeof name === 'undefined' || name === null){\n        return(false);\n    }\n    if(name.length === 0){\n        return(false);\n    }\n    return(true);\n}\n\nfunction isValidEmail(email){\n    const regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if(typeof email === 'undefined' || email === null){\n        return(false);\n    }\n    if(email.length === 0){\n        return(false);\n    }\n    if(!regex.test(email)){\n        return(false);\n    }\n    return(true);\n}\n\nfunction toFilterArray(selectedValues, isDatasetVersion = false){\n    var filterArray = [];\n    if(typeof selectedValues === 'undefined' || selectedValues === null){\n        return(filterArray);\n    }\n    if(Object.keys(selectedValues).length === 0 && selectedValues.constructor === Object){\n        return(filterArray);\n    }\n    if(Array.isArray(selectedValues)){\n        if(isDatasetVersion){\n            for(let i = 0; i < selectedValues.length; i++){   \n                filterArray.push(selectedValues[i].version);\n            }\n        }else{\n            for(let i = 0; i < selectedValues.length; i++){   \n                filterArray.push(selectedValues[i].name);\n            }\n        }\n        return(filterArray);\n    } \n    if(isDatasetVersion){\n        filterArray.push(selectedValues.version);\n    }else{\n        filterArray.push(selectedValues.name);\n    }\n    return(filterArray);\n}\n\nfunction buildAPIStrFragment(keyName, filterArray){\n    var apiFragment = '';\n    if(filterArray.length > 0){\n        for(let i = 0; i < filterArray.length; i++){\n            apiFragment += keyName + '=' + filterArray[i]\n            if(i < filterArray.length - 1){\n                apiFragment += '&';\n            }\n        }\n    }   \n    return(apiFragment);\n}\n","\nexport function queryPSet(api, callback){\n    //console.log(api);\n    fetch(api)  \n        .then(res => res.json())\n        .then(resData => {\n            callback(resData);\n        }   \n    );\n}\n\nexport function saveOrUpdateUserPSets(username, selectedPSets, callback){\n    if(selectedPSets.length){\n        var userPSet = { username: username };\n        var psetId = [];\n        for(let i = 0; i < selectedPSets.length; i++){\n            psetId.push(selectedPSets[i]._id);\n        }\n        userPSet.psetId = psetId;\n\n        fetch('/user/pset/add', {\n            method: 'POST',\n            body: JSON.stringify({reqData: userPSet}),\n            headers: {\n                'Content-type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(resData => callback(1, resData))\n            .catch(err => callback(0, err));\n\n    }\n}\n\nexport function requestPSet(data, callback){\n    console.log(data);\n    fetch('/pset/request', {\n        method: 'POST',\n        body: JSON.stringify({\n            reqData: data\n        }),\n        headers: {\n            'Content-type': 'application/json'\n        }\n    })\n        .then(res => res.json())\n        .then(resData => callback(1, resData))\n        .catch(err => callback(0, err));\n}\n\nexport function downloadPSets(psets, callback){\n    var psetIDs = [];\n    console.log(psets);\n    for(let i = 0; i < psets.length; i++){\n        psetIDs.push(psets[i]._id);\n    }\n    console.log(psetIDs);\n    fetch('/pset/download', {\n        method: 'POST',\n        body: JSON.stringify({\n            psetIDs: psetIDs\n        }),\n        headers: {\n            'Content-type': 'application/json'\n        }\n    })\n        .then(res => res.json())\n        .then(resData => {\n            callback(1, resData);\n        })\n        .catch(err => callback(0, err));\n}\n\nexport function downloadOnePSet(psetID){\n    console.log('downloadOnePSet: ' + psetID);\n    var psetIDs = [psetID];\n    fetch('/pset/download', {\n        method: 'POST',\n        body: JSON.stringify({\n            psetIDs: psetIDs\n        }),\n        headers: {\n            'Content-type': 'application/json'\n        }\n    })\n        .then(res => res.json())\n        .catch(err => console.log(err));\n}","import React from 'react';\nimport './PSetDropdown.css';\nimport {MultiSelect} from 'primereact/multiselect';\nimport {Dropdown} from 'primereact/dropdown';\n\n// props: id, className, isHidden, selectOne, parameterName, parameterOptions[], selecedParameter[], handleUpdateSelection()\n\nclass PSetDropdown extends React.Component {\n    \n    render(){\n        const dataTemplate =  (option) => {\n            return(\n                <div className=\"\">\n                    <span style={{fontSize:'1em',margin:'1em .5em 0 0'}}>{option.label}</span>\n                </div>\n            );\n        }\n\n        const selectedDataTemplate = (item) => {\n            if (item) {\n                return (\n                    <div className=\"my-multiselected-item-token\">\n                        <span>{item.label}</span>\n                    </div>\n                );\n            }\n            else {\n                return <span>Select...</span>\n            }\n        }\n            \n        if(this.props.isHidden){\n            return(null);\n        }\n        if(this.props.selectOne){\n            return(\n                <div className={this.props.className}>\n                    <label>{this.props.parameterName}</label>\n                    <Dropdown \n                        id={this.props.id} \n                        className='paramInput' \n                        optionLabel='label' \n                        value={this.props.selectedParameter}   \n                        options={this.props.parameterOptions} \n                        onChange={this.props.handleUpdateSelection}\n                        filter={true} \n                        itemTemplate={dataTemplate}\n                        placeholder=\"Select one...\"\n                        disabled={this.props.disabled}\n                    />\n                </div>\n            );\n        }\n        return(\n            <div className={this.props.className}>\n                <label>{this.props.parameterName}</label>\n                <MultiSelect \n                    id={this.props.id}\n                    className='paramInput' \n                    optionLabel='label' \n                    value={this.props.selectedParameter} \n                    options={this.props.parameterOptions} \n                    onChange={this.props.handleUpdateSelection}\n                    filter={true} \n                    itemTemplate={dataTemplate} \n                    selectedItemTemplate={selectedDataTemplate}\n                    disabled={this.props.disabled}\n                />\n            </div>\n        );\n    }\n    \n}\n\nexport default PSetDropdown;","import React from 'react';\nimport PSetDropdown from '../Shared/PSetDropdown/PSetDropdown';\n\nclass PSetParameterOptions extends React.Component{\n\n    constructor(){\n        super();\n        this.state = {\n            drugSensitivityOptions: [],\n            rnaRefOptions: [],\n            dnaRefOptions: [],\n            hideRNAToolRef: false,\n            hideDNAToolRef: false,\n            isReady: false\n        }\n        this.handleFilterChange= this.handleFilterChange.bind(this);\n        this.setToolState = this.setToolState.bind(this);\n        this.setRefState = this.setRefState.bind(this);\n    }\n\n    componentDidMount(){\n        this.setState({\n            rnaRefOptions: this.props.formData.rnaRef,\n            dnaRefOptions: this.props.formData.dnaRef,\n            isReady: true\n        });\n    }\n\n    async handleFilterChange(event){\n        event.preventDefault();\n        await this.props.setParentState([{name: event.target.id, value: event.value}]);\n        if(event.target.id === 'dataType'){\n            this.setToolState(event);\n            \n        }else if(event.target.id === 'genome'){\n            this.setRefState(event)\n        }else if(event.target.id === 'dataset'){\n            console.log(event.value);\n            this.setState({\n                drugSensitivityOptions: [event.value.drugSensitivity]\n            });\n            await this.props.setParentState([{name: 'drugSensitivity', value: event.value.drugSensitivity}]);\n        }\n        if(this.props.autoUpdate){\n            this.props.requestUpdate(); \n        } \n    }\n\n    async setToolState(event){\n        if(event.value.length === 1){\n            if(this.props.parameters.dataType[0].name === 'RNA'){             \n                this.setState({\n                    hideDNAToolRef: true\n                });\n                await this.props.setParentState([\n                    {name: \"dnaTool\", value: []},\n                    {name: \"dnaRef\", value: []}\n                ]);\n            }else{\n                this.setState({\n                    hideRNAToolRef: true\n                });\n                await this.props.setParentState([\n                    {name: \"rnaTool\", value: []},\n                    {name: \"rnaRef\", value: []}\n                ]);\n            }\n        }else{\n            this.setState({\n                hideDNAToolRef: false,\n                hideRNAToolRef: false\n            });\n        }\n    }\n\n    async setRefState(event){\n        if(event.value.length === 0){\n            this.setState({\n                dnaRefOptions: this.props.formData.dnaRef,\n                rnaRefOptions: this.props.formData.rnaRef\n            });\n        }else{\n            let dnaRef = this.props.parameters.dnaRef;\n            let rnaRef = this.props.parameters.rnaRef;\n            \n            if(Array.isArray(this.props.parameters.genome)){\n                let genomeName = this.props.parameters.genome.map((genome) => {return(genome.name)});\n                dnaRef = dnaRef.filter((ref) => {return(genomeName.includes(ref.genome) && ref)});\n                rnaRef = rnaRef.filter((ref) => {return(genomeName.includes(ref.genome) && ref)});\n                this.setState({\n                    dnaRefOptions: this.props.formData.dnaRef.filter((ref) => {return(genomeName.includes(ref.genome) && ref)}),\n                    rnaRefOptions: this.props.formData.rnaRef.filter((ref) => {return(genomeName.includes(ref.genome) && ref)})\n                });\n            }else{\n                dnaRef = dnaRef.filter((ref) => {return(this.props.parameters.genome.name === ref.genome && ref)});\n                rnaRef = rnaRef.filter((ref) => {return(this.props.parameters.genome.name === ref.genome && ref)});\n                this.setState({\n                    dnaRefOptions: this.props.formData.dnaRef.filter((ref) => {return(this.props.parameters.genome.name === ref.genome && ref)}),\n                    rnaRefOptions: this.props.formData.rnaRef.filter((ref) => {return(this.props.parameters.genome.name === ref.genome && ref)})\n                });\n            }\n            \n            await this.props.setParentState([\n                {name: 'dnaRef', value: dnaRef},\n                {name: 'rnaRef', value: rnaRef}\n            ]);\n        }  \n    }\n    \n    render(){\n        return(\n            this.state.isReady ? \n                <React.Fragment>\n                        <PSetDropdown id='dataType' className={this.props.dropdownClassName} isHidden={false} parameterName='Data Type:' \n                            parameterOptions={this.props.formData.dataType} selectedParameter={this.props.parameters.dataType} handleUpdateSelection={this.handleFilterChange} />\n\n                        <PSetDropdown id='dataset' className={this.props.dropdownClassName} isHidden={false} parameterName='Dataset:' selectOne={this.props.selectOne} \n                            parameterOptions={this.props.formData.dataset} selectedParameter={this.props.parameters.dataset} handleUpdateSelection={this.handleFilterChange} />\n                        \n                        {/* <PSetDropdown id='drugSensitivity' className={this.props.dropdownClassName} isHidden={false} parameterName='Drug Sensitivity:' selectOne={true} disabled={true} \n                            parameterOptions={this.state.drugSensitivityOptions} selectedParameter={this.props.parameters.drugSensitivity} handleUpdateSelection={this.handleFilterChange} /> */}\n                        \n                        <PSetDropdown id='genome' className={this.props.dropdownClassName} isHidden={false} parameterName='Genome:' selectOne={this.props.selectOne} \n                            parameterOptions={this.props.formData.genome} selectedParameter={this.props.parameters.genome} handleUpdateSelection={this.handleFilterChange} />\n                        \n                        <PSetDropdown id='rnaTool' className={this.props.dropdownClassName} isHidden={this.state.hideRNAToolRef} parameterName='RNA Tool:' \n                            parameterOptions={this.props.formData.rnaTool} selectedParameter={this.props.parameters.rnaTool} handleUpdateSelection={this.handleFilterChange} />\n\n                        <PSetDropdown id='rnaRef' className={this.props.dropdownClassName} isHidden={this.state.hideRNAToolRef} parameterName='RNA Ref:' \n                            parameterOptions={this.state.rnaRefOptions} selectedParameter={this.props.parameters.rnaRef} handleUpdateSelection={this.handleFilterChange} />\n                        \n                        <PSetDropdown id='dnaTool' className={this.props.dropdownClassName} isHidden={this.state.hideDNAToolRef} parameterName='DNA Tool:' \n                            parameterOptions={this.props.formData.dnaTool} selectedParameter={this.props.parameters.dnaTool} handleUpdateSelection={this.handleFilterChange} />\n                        \n                        <PSetDropdown id='dnaRef' className={this.props.dropdownClassName} isHidden={this.state.hideDNAToolRef} parameterName='DNA Ref:' \n                            parameterOptions={this.state.dnaRefOptions} selectedParameter={this.props.parameters.dnaRef} handleUpdateSelection={this.handleFilterChange} />\n                </React.Fragment>\n                :\n                <div></div>\n        );\n    }\n\n}\nexport default PSetParameterOptions;","import React from 'react';\nimport {InputSwitch} from 'primereact/inputswitch';\n//import {Button} from 'primereact/button';\nimport * as APIHelper from '../../Shared/PSetAPIHelper';\nimport * as APICalls from '../../Shared/APICalls';\nimport PSetParameterOptions from '../../Shared/PSetParameterOptions';\nimport './PSetFilter.css';\n\nclass PSetFilter extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            psetRequestMode: false,\n        }\n        this.sendFilterPSetRequest = this.sendFilterPSetRequest.bind(this);\n        this.setRequestView = this.setRequestView.bind(this);\n    }\n\n    sendFilterPSetRequest(){\n        let filterset = APIHelper.getFilterSet(this.props.parameters);\n        let apiStr = APIHelper.buildAPIStr(filterset);\n        console.log(apiStr);\n        let searchAll = apiStr === '/pset' ||  apiStr === '/pset?' ? true : false;\n        APICalls.queryPSet(apiStr, (data) => {\n            this.props.updateAllData(data, searchAll);\n        });    \n    }\n\n    setRequestView = event => {\n        this.props.setRequestView(event.value);\n    }\n\n    render(){\n        return(\n            <React.Fragment>\n                <div className='pSetFilterContainer'>\n                    <div className='pSetFilter'>\n                        <h2>PSet Parameters</h2>\n                        <div className='filterSet'>\n                            <label className='bold'>Request PSet: </label> \n                            <InputSwitch checked={this.props.isRequest} tooltip=\"Turn this on to request a PSet.\" onChange={this.setRequestView} />\n                        </div>\n                        <PSetParameterOptions \n                            autoUpdate={true}\n                            setParentState={this.props.setParentState}\n                            requestUpdate={this.sendFilterPSetRequest}\n                            parameters={this.props.parameters}\n                            formData={this.props.formData}\n                            dropdownClassName='filterSet'\n                            selectOne={this.props.isRequest}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PSetFilter;","import React, {useState, useEffect, useContext} from 'react';\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport { Link } from 'react-router-dom';\nimport * as API from '../Shared/APICalls';\nimport {AuthContext} from '../../context/auth';\n\nconst PSetTable = (props) => {\n\n    const auth = useContext(AuthContext);\n    \n    const [state, setState] = useState({\n        rows: 10,\n        first: 0,\n        start: 0,\n        end: 10,\n        totalRecords: 0,\n        loading: true\n    })\n\n    useEffect(()=>{\n        setState({...state, loading: false})\n    }, []);\n\n    const downloadOnePSet = (id, link) => (event) => {\n        event.preventDefault();\n        console.log('downloadOnePSet');\n        API.downloadOnePSet(id);\n        const anchor = document.createElement('a');\n        anchor.setAttribute('download', null);\n        anchor.style.display = 'none';\n        anchor.setAttribute('href', link);\n        document.body.appendChild(anchor);\n        anchor.click();\n        document.body.removeChild(anchor);\n    }\n\n    const toolsRefTemplate = (rowData, column) => {\n        let output ='';\n        if(rowData[column.field]){\n            output = rowData[column.field].map(item => <div key={item.name}>{item.name}</div>);\n        }\n        return(\n            <div>{output}</div>\n        );\n    }\n\n    const nameColumnTemplate = (rowData, column) => {\n        let route = '/' + rowData.doi;\n        return(\n            <Link to={route} >{rowData.name}</Link>\n        );\n    }\n\n    const downloadTemplate = (rowData, column) => {\n        let link = 'Not Available';\n        if(rowData.downloadLink){\n            link = <a id={rowData._id} href='#' onClick={downloadOnePSet(rowData._id, rowData.downloadLink)}>Download</a>\n        }\n        return(\n            link\n        )\n    }\n\n    const updatePSetSelectionEvent = event => {\n        props.updatePSetSelection(event.value);\n    }\n\n    return(\n        <DataTable \n            value={props.allData} \n            selection={props.selectedPSets} onSelectionChange={updatePSetSelectionEvent} \n            paginator={true} rows={state.rows} \n            scrollable={true}\n        >\n            {auth.authenticated && <Column selectionMode=\"multiple\" style={{width: '2.5em'}} />}\n            <Column className='textField' field='name' header='Name' style={{width:'10em'}} body={nameColumnTemplate} sortable={true} />\n            <Column className='textField' field='dataset.name' header='Dataset' style={{width:'6.5em'}} sortable={true} />\n            <Column className='textField' field='drugSensitivity.version' header='Drug Sensitivity' style={{width:'10.5em'}} sortable={true} />\n            <Column field='rnaTool' body={toolsRefTemplate} style={{width:'8em'}} header='RNA Tool' sortable={true}  />\n            <Column field='dnaTool' body={toolsRefTemplate} style={{width:'8em'}} header='DNA Tool' sortable={true} />\n            <Column field='rnaRef' body={toolsRefTemplate} style={{width:'15em'}} header='RNA Ref' sortable={true} />\n            <Column field='dnaRef' body={toolsRefTemplate} style={{width:'15em'}} header='DNA Ref' sortable={true} />\n            <Column field='downloadLink' body={downloadTemplate} style={{width:'6.5em'}} header='Download' />\n        </DataTable>\n    );\n\n}\n\nexport default PSetTable;","import React from 'react';\nimport {Button} from 'primereact/button';\nimport {AuthContext} from '../../../context/auth';\nimport * as APICalls from '../APICalls';\n\nclass SavePSetButton extends React.Component{\n    constructor(){\n        super();\n        this.saveSelectedPSets = this.saveSelectedPSets.bind(this);\n    }\n\n    static contextType = AuthContext;\n\n    saveSelectedPSets = event => {\n        event.preventDefault();\n        if(this.context.authenticated){\n            APICalls.saveOrUpdateUserPSets(this.context.username, this.props.selectedPSets, (status, data) => {this.props.onSaveComplete(status, data)});\n        }\n    }\n\n    render(){\n        return(\n            this.context.authenticated ? <Button label='Save' onClick={this.saveSelectedPSets} disabled={this.props.disabled}/> : '*Login or register to save existing PSets to your profile.'\n        );\n    }\n}\n\nexport default SavePSetButton;\n","import React from 'react';\nimport './PSetSearch.css';\nimport Navigation from '../Navigation/Navigation';\nimport PSetFilter from './subcomponents/PSetFilter';\nimport PSetTable from '../Shared/PSetTable';\nimport SavePSetButton from '../Shared/Buttons/SavePSetButton';\n//import DownloadPSetButton from '../Shared/Buttons/DownloadPSetButton';\nimport {usePromiseTracker} from \"react-promise-tracker\";\nimport {trackPromise} from 'react-promise-tracker';\nimport Loader from 'react-loader-spinner';\nimport {Button} from 'primereact/button';\nimport {InputText} from 'primereact/inputtext';\nimport {Messages} from 'primereact/messages';\nimport {AuthContext} from '../../context/auth';\nimport * as APIHelper from '../Shared/PSetAPIHelper';\nimport * as APICalls from '../Shared/APICalls';\nimport Footer from '../Footer/Footer';\n\nclass PSetSearch extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            allData: [],\n            formDataOriginal: {},\n            formData: {},\n            searchAll: true,\n            selectedPSets: [],\n            disableSaveBtn: true,\n            isRequest: false,\n            isLoaded: false,\n\n            parameters: {\n                dataType: [],\n                dataset: [],\n                drugSensitivity: [],\n                genome: [],\n                rnaTool: [],\n                rnaRef: [],\n                dnaTool: [],\n                dnaRef: [],\n                name: '',\n                email: ''\n            },\n\n            notReadyToSubmit: true\n        }\n\n        this.updateAllData = this.updateAllData.bind(this);\n        this.setStateOnParamSelection = this.setStateOnParamSelection.bind(this);\n        // this.evaluateList = this.evaluateList.bind(this);\n        this.updatePSetSelection = this.updatePSetSelection.bind(this);\n        this.initializeState = this.initializeState.bind(this);\n        this.showMessage = this.showMessage.bind(this);\n        \n        this.setRequestView = this.setRequestView.bind(this);\n        this.handleSubmitRequest = this.handleSubmitRequest.bind(this);\n        this.updateReqInputEvent = this.updateReqInputEvent.bind(this);\n        //this.setStateOnParamSelection = this.setStateOnParamSelection.bind(this);\n    }\n\n    static contextType = AuthContext;\n\n    componentDidMount(){\n        APICalls.queryPSet('/pset?status=complete', (resData) => {\n            this.updateAllData(resData);\n        });\n        fetch('/formdata')  \n            .then(res => res.json())\n            .then(resData => {\n                this.setState({\n                    formData: resData[0],\n                    formDataOriginal: JSON.parse(JSON.stringify(resData[0])),\n                    isLoaded: true\n                });\n            });\n    }\n\n    showMessage(status, data){\n        APIHelper.messageAfterRequest(status, data, this.initializeState, this.messages);\n    }\n\n    setStateOnParamSelection(states){\n        let parameters = this.state.parameters;\n        for(let i = 0; i < states.length; i++){\n            parameters[states[i].name] = states[i].value;\n        }\n        console.log(parameters);\n        this.setState({\n            parameters: parameters,\n            notReadyToSubmit: APIHelper.isNotReadyToSubmit(parameters)\n        });\n    }\n\n    updateAllData(data, searchAll = true){\n        this.setState({\n            allData: data,\n            searchAll: searchAll\n        });\n    }\n\n    updatePSetSelection(selected){\n        this.setState({selectedPSets: selected}, () => {\n            if(APIHelper.isSelected(this.state.selectedPSets)){\n                this.setState({disableSaveBtn: false});\n            }else{\n                this.setState({disableSaveBtn: true});\n            }\n        });\n    }\n\n    setRequestView(visible){\n        const parameters = this.state.parameters;\n        let formData = this.state.formData;\n        if(visible){\n            if(parameters.dataset.length){\n                formData.dataset = parameters.dataset;\n                parameters.dataset = parameters.dataset[0];\n            }\n            if(parameters.genome.length){\n                formData.genome = parameters.genome;\n                parameters.genome = parameters.genome[0];\n            }\n        }else{\n            console.log(parameters)\n            if(formData.dataset.length < this.state.formDataOriginal.dataset.length){\n                parameters.dataset = formData.dataset;\n            }else if(!Array.isArray(parameters.dataset)){\n                let datasetVal = JSON.parse(JSON.stringify(parameters.dataset));\n                parameters.dataset = [];\n                parameters.dataset.push(datasetVal);\n            }\n            if(formData.genome.length < this.state.formDataOriginal.genome.length){\n                parameters.genome = formData.genome\n            }else if(!Array.isArray(parameters.genome)){\n                let genomeVal = JSON.parse(JSON.stringify(parameters.genome));\n                parameters.genome = [];\n                parameters.genome.push(genomeVal);\n            }\n            formData = this.state.formDataOriginal;\n        }\n        this.setState({\n            parameters: parameters,\n            formData: JSON.parse(JSON.stringify(formData)),\n            notReadyToSubmit: APIHelper.isNotReadyToSubmit(parameters),\n            isRequest: visible\n        });\n    }\n\n    initializeState(){\n        this.setState({\n            selectedPSets: [],\n            disableSaveBtn: true\n        });\n    }\n\n    handleSubmitRequest = event => {\n        event.preventDefault();\n        let reqData = this.state.parameters;\n        reqData.drugSensitivity = reqData.dataset.drugSensitivity;\n        console.log(reqData);\n        trackPromise(\n            fetch('/pset/request', {\n                method: 'POST',\n                body: JSON.stringify({\n                    reqData: reqData\n                }),\n                headers: {\n                    'Content-type': 'application/json'\n                }\n            })\n                .then(res => res.json())\n                .then(resData => APIHelper.messageAfterRequest(1, resData, this.initializeState, this.messages))\n                .catch(err => APIHelper.messageAfterRequest(0, err, this.initializeState, this.messages))\n        )\n    }\n\n    updateReqInputEvent = event => {\n        event.preventDefault();\n        let parameters= this.state.parameters;\n        parameters[event.target.id] = event.target.value;\n        this.setState({\n            parameters: parameters,\n            notReadyToSubmit: APIHelper.isNotReadyToSubmit(parameters)\n        });\n    }\n\n    // setStateOnParamSelection(states){\n    //     let parameters = this.state.reqData;\n    //     for(let i = 0; i < states.length; i++){\n    //         parameters[states[i].name] = states[i].value;\n    //     }\n    //     this.setState({\n    //         reqData: parameters,\n    //         notReadyToSubmit: APIHelper.isNotReadyToSubmit(parameters)\n    //     });\n    // }\n    \n    render(){  \n        const SubmitRequestButton = props => {\n            const {promiseInProgress} = usePromiseTracker();\n            return(\n                promiseInProgress ? \n                    <div className='loaderContainer'>\n                        <Loader type=\"ThreeDots\" color=\"#3D405A\" height={100} width={100} />\n                    </div>\n                    :\n                    <Button label='Submit Request' type='submit' disabled={false} onClick={this.handleSubmitRequest}/>\n            );\n        }\n        \n        return(\n            <React.Fragment>\n                <Navigation routing={this.props} />\n                <div className='pageContent'>\n                    <h1>Search or Request Pharmacogenomic Datasets</h1>\n                    <div className='pSetListContainer'>\n                    {\n                        this.state.isLoaded ?\n                        <PSetFilter \n                            updateAllData={this.updateAllData} \n                            setRequestView={this.setRequestView} \n                            setParentState={this.setStateOnParamSelection}\n                            isRequest={this.state.isRequest}\n                            formData={this.state.formData} \n                            parameters={this.state.parameters}\n                        />\n                        :\n                        <div></div>\n                    }\n                        \n                        <div className='pSetTable'>\n                            <Messages ref={(el) => this.messages = el} />\n                            <div className='pSetSelectionSummary'>\n                                <div className='summaryPanel'>\n                                    <h2>Summary</h2>\n                                    <div className='pSetSummaryContainer'>\n                                        <div className='pSetSummaryItem'>\n                                            {\n                                                this.state.searchAll ? \n                                                <span><span className='pSetSummaryNum'>{this.state.allData.length}</span> <span>dataset(s) available.</span></span>\n                                                :\n                                                <span><span className='pSetSummaryNum'>{this.state.allData.length}</span> <span>{this.state.allData.length === 1 ? ' match' : ' matches'}</span> found.</span>\n                                            }\n                                        </div>\n                                        {/* <div className='pSetSummaryItem'>\n                                            <span className='pSetSummaryNum'>{this.state.selectedPSets.length}</span> selected.\n                                        </div> */}\n                                    </div>\n                                    <SavePSetButton selectedPSets={this.state.selectedPSets} disabled={this.state.disableSaveBtn} onSaveComplete={this.showMessage} />\n                                </div>\n                                {\n                                    this.state.isRequest &&\n                                    <div className='requestFormPanel'>\n                                        <h2>Request PSet</h2>\n                                        <div className='reqFormInput'>\n                                            <label>PSet Name:</label>\n                                                <InputText id='name' className='paramInput' value={this.state.parameters.name || ''} onChange={this.updateReqInputEvent} />\n                                        </div>\n                                        <div className='reqFormInput'>\n                                            <label>Email to receive DOI:</label>\n                                                <InputText id='email' className='paramInput' value={this.state.parameters.email || ''} onChange={this.updateReqInputEvent} />\n                                        </div>\n                                        <div className='reqFormInput'>\n                                            {/* <Button label='Submit Request' type='submit' disabled={this.state.notReadyToSubmit} onClick={this.handleSubmitRequest}/> */}\n                                            <SubmitRequestButton />\n                                        </div>\n                                    </div>\n                                }\n                                \n                                {/* <DownloadPSetButton selectedPSets={this.state.selectedPSets} disabled={this.state.disableSaveBtn} onDownloadComplete={this.showMessage} /> */}\n                            </div>\n                            <PSetTable allData={this.state.allData} selectedPSets={this.state.selectedPSets} updatePSetSelection={this.updatePSetSelection} scrollHeight='600px'/>    \n                        </div>\n                    </div>\n                </div>\n                <Footer />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PSetSearch;","import React, {useState, useEffect, useContext} from 'react';\nimport './Dashboard.css';\nimport Navigation from '../Navigation/Navigation';\nimport Footer from '../Footer/Footer';\nimport {usePromiseTracker} from \"react-promise-tracker\";\nimport {trackPromise} from 'react-promise-tracker';\nimport Loader from 'react-loader-spinner';\nimport {Messages} from 'primereact/messages';\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport {AuthContext} from '../../context/auth';\n\nconst Dashboard = (props) => {\n    \n    const auth = useContext(AuthContext);\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    const { promiseInProgress } = usePromiseTracker();\n\n    const show = (message) => {\n        Dashboard.messages.show(message);\n    }\n\n    const fetchData = async (url) => {\n        const response = await fetch(url);\n        const json = await response.json();\n        setData(json);\n        setLoading(false);\n    }\n\n    const submitRequest = async (id) => {\n        const result = await trackPromise(fetch(\n            '/pset/process', \n            { \n                method: 'POST', \n                body: JSON.stringify({id: id}), \n                headers: {'Content-type': 'application/json'} \n            }\n        ));\n        const json = await result.json();\n        return({ok: result.ok, data: json});\n    }\n\n    useEffect(() => {\n        fetchData('/pset?status=pending&status=in-process');\n    }, []);\n    \n    const onSubmit = async (event) => {\n        event.preventDefault();\n        console.log(event.target.id);\n        const result = await submitRequest(event.target.id);\n        if(result.ok){\n            show({severity: 'success', summary: result.data.summary, detail: result.data.message});\n        }else{\n            show({severity: 'error', summary: result.data.summary, detail: result.data.message, sticky: true});\n        }\n        await fetchData('/pset?status=pending&status=in-process');\n    }\n\n    const dateTimeTemplate = (rowData, column) => {\n        let dateTimeStr = '';\n        if(rowData[column.field]){\n            dateTimeStr = new Date(rowData[column.field]).toLocaleString(undefined, {dateStyle: 'long', timeStyle: 'medium'});\n        }\n        return(<div>{dateTimeStr}</div>)\n    }\n\n    const buttonTemplate = (rowData, column) => {\n        let button = '';\n        if(rowData.status === 'pending'){\n            button = <button id={rowData._id} onClick={onSubmit} className='dashboardBtn' type='button'>Submit</button>\n        }\n        return(<div className='dashBoardBtnContainer'>{button}</div>)\n    }\n\n    return(\n        <React.Fragment>\n            <Navigation routing={props} />\n            <div className='pageContent'>\n                <div className='dashboardWrapper'>\n                    <h1>PSet Request Dashboard</h1>\n                    <Messages ref={(el) => Dashboard.messages = el }></Messages>\n                    <div className='dashboardSummary'>\n                        <h2>Dashboard Summary</h2>\n                        <div className='dashboardSummaryContainer'>\n                            <div className='dashboardSummarySection'>\n                                <span className='number'>{ data.filter(d => d.status === 'pending').length }</span> pending request(s).\n                            </div>\n                            <div className='dashboardSummarySection'>\n                                <span className='number'>{ data.filter(d => d.status === 'in-process').length }</span> request(s) in process.\n                            </div>    \n                        </div>    \n                    </div>\n                    <div className='dashboardTable'>\n                        {\n                            !loading &&\n                            <DataTable value={data} paginator={true}  scrollable={true} rows={10} >\n                                <Column className='textField' field='status' header='Status' style={{width:'2em'}} sortable={true} />\n                                <Column className='textField' field='name' header='Name' style={{width:'5em'}} sortable={true} />\n                                <Column className='textField' field='dateSubmitted' header='Submitted Date' body={dateTimeTemplate} style={{width:'4em'}} sortable={true} />\n                                <Column className='textField' field='dateProcessed' header='Process Start Date' body={dateTimeTemplate} style={{width:'4em'}} sortable={true} />\n                                { auth.isAdmin && <Column body={buttonTemplate} style={{width:'1.5em'}}/> }\n                            </DataTable>\n                        } \n                        {\n                            promiseInProgress && \n                            <div className='dashboardTableOverlay'>\n                                \n                                <div className='dashboardLoaderContainer'>\n                                    <Loader type=\"ThreeDots\" color=\"#3D405A\" height={100} width={100} />\n                                </div>\n                                \n                            </div>   \n                        }\n                    </div> \n                </div>   \n            </div>\n            <Footer />\n        </React.Fragment>    \n    );\n}\n\nexport default Dashboard;","import React from 'react';\n\nimport Plotly from \"plotly.js-basic-dist\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nconst Plot = createPlotlyComponent(Plotly);\n\nclass DownloadChart extends React.Component{\n    render() {\n        let value = this.props.data.value;\n        let name = this.props.data.name;\n        \n        return (\n          <Plot\n            data={[\n                {\n                    type: 'bar', \n                    x: value, \n                    y: name, \n                    orientation: 'h', \n                    marker: {color: '#3D405A'}\n                },\n            ]}\n            layout={ {\n                autosize: true,\n                title: this.props.title, \n                xaxis: {\n                    title: {text: 'Number of Downloads', font: {size: 14, color: '#3D405A'}}\n                },\n                yaxis: {\n                    autorange: 'reversed',\n                }, \n                titlefont: {size: 18, color: '#3D405A'}, \n                font:{color: '#3D405A'}\n            } }\n            style = {{width: \"100%\"}}\n            useResizeHandler = {true}\n          />\n        );\n    }\n}\n\nexport default DownloadChart;","import React from 'react';\nimport './Stats.css';\nimport Navigation from '../Navigation/Navigation';\nimport {Messages} from 'primereact/messages';\nimport PSetTable from '../Shared/PSetTable';\nimport SavePSetButton from '../Shared/Buttons/SavePSetButton';\n//import DownloadPSetButton from '../Shared/Buttons/DownloadPSetButton';\nimport * as APICalls from '../Shared/APICalls';\nimport * as APIHelper from '../Shared/PSetAPIHelper';\nimport {AuthContext} from '../../context/auth';\nimport DownloadChart from './DownloadChart';\nimport Footer from '../Footer/Footer';\n\nclass Stats extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            allData: [],\n            chartData: {},\n            selectedPSets: [],\n            disableBtn: true,\n            isReady: false\n        }\n        this.updatePSetSelection = this.updatePSetSelection.bind(this);\n        this.showMessages = this.showMessages.bind(this);\n        this.initializeState = this.initializeState.bind(this);\n    }\n\n    static contextType = AuthContext;\n\n    componentDidMount(){\n        APICalls.queryPSet('/pset/sort', (resData) => {\n            const data = [];\n            const name = [];\n            const value = [];\n            for(let i = 0; i < resData.length; i++){\n                data.push({name: resData[i].name, value: resData[i].download});\n                name.push(resData[i].name);\n                value.push(resData[i].download);\n                if(i >= 9){\n                    break;\n                }\n            }\n            this.setState({\n                allData: resData,\n                chartData: {data: data, name: name, value: value},\n                isReady: true\n            });\n        });\n    }\n\n    updatePSetSelection(selected){\n        this.setState({selectedPSets: selected}, () => {\n            if(APIHelper.isSelected(this.state.selectedPSets)){\n                this.setState({disableBtn: false});\n            }else{\n                this.setState({disableBtn: true});\n            }\n        });\n    }\n\n    showMessages(status, data){\n        APIHelper.messageAfterRequest(status, data, this.initializeState, this.messages);\n        APICalls.queryPSet('/pset/sort', (resData) => {\n            this.setState({\n                allData: resData\n            });\n        });\n    }\n\n    initializeState(){\n        this.setState({\n            selectedPSets: [],\n            disableBtn: true\n        });\n    }\n    \n    render(){\n        return(\n            <React.Fragment>\n                <Navigation routing={this.props} />\n                <div className='pageContent'>\n                    <h1>PSet Usage and Downloads</h1>\n                    <div className='statContainer'>\n                        <div className='container rankingTable'>\n                            <h3>Download Ranking</h3>\n                            <Messages ref={(el) => this.messages = el} />\n                            <PSetTable allData={this.state.allData} selectedPSets={this.state.selectedPSets} updatePSetSelection={this.updatePSetSelection} showDownload={true} scrollHeight='340px'/>\n                            <div className='rankingTableFooter'>\n                                {/* <DownloadPSetButton selectedPSets={this.state.selectedPSets} disabled={this.state.disableBtn} onDownloadComplete={this.showMessages}/> */}\n                                <SavePSetButton selectedPSets={this.state.selectedPSets} disabled={this.state.disableBtn} onSaveComplete={this.showMessages} />\n                            </div>\n                        </div>\n                        <div className='container downloadHistogram'>\n                            {this.state.isReady && <DownloadChart data={this.state.chartData} title='Top 10 Most Popular PSets' />}\n                        </div>\n                    </div>\n                </div>\n                <Footer />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Stats;","import React from 'react';\n\nconst Overview = () => {\n    return(\n        <div className='documentation'>\n            <h1>Overview</h1>\n            <h3>Introduction</h3>\n            <p>\n                ORCESTRA is a new web application that enables users to search, request and manage pharmacogenomic datasets (PSets).\n                <br />\n                PSets are generated with an automated pipeline by using a verion controll platform called Pachyderm. Upon completion of the pipeline, a newly generated PSet is uploaded to Zenodo, a data-sharing platform, and is assigned a DOI.\n                <br />\n                With Pachyderm's strict version controlling system, coupled with the DOI assignment, ORCESTRA ensures that your experiements with PSets are transparent and easily reproducible.\n            </p>    \n        </div>    \n    );\n}\n\nexport default Overview","import React from 'react';\n\nconst Search = () => {\n    return(\n        <div className='documentation'>\n            <h1>Search</h1>\n        </div>    \n    );\n}\n\nexport default Search","import React from 'react';\n\nconst Request = () => {\n    return(\n        <div className='documentation'>\n            <h1>Request</h1>  \n        </div>    \n    );\n}\n\nexport default Request","import React from 'react';\n\nconst UserProfile = () => {\n    return(\n        <div className='documentation'>\n            <h1>User Profile</h1>\n        </div>    \n    );\n}\n\nexport default UserProfile","import React from 'react';\n\nconst Statistics = () => {\n    return(\n        <div className='documentation'>\n            <h1>Statistics</h1>\n        </div>    \n    );\n}\n\nexport default Statistics","import React, { useState } from 'react';\nimport './Documentation.css';\nimport Navigation from '../Navigation/Navigation';\nimport Footer from '../Footer/Footer';\n\nimport Overview from './DocFunctionality/Overview';\nimport Search from './DocFunctionality/Search';\nimport Request from './DocFunctionality/Request';\nimport UserProfile from './DocFunctionality/UserProfile';\nimport Statistics from './DocFunctionality/Statistics';\n\nconst Documentation = (props) => {\n    \n    const [display, setDisplay] = useState('overview');\n\n    return(\n        <React.Fragment>\n            <Navigation routing={props} />\n            <div className='pageContent'>\n                <div className='documentationContent'>\n                    <nav className='documentationNav'>\n                        <h2>Functionality</h2>\n                        <ul>\n                            <li className={display === 'overview' ? 'selected' : undefined}>\n                                <button type='button' onClick={() => setDisplay('overview')}>Overview</button>\n                            </li>\n                            <li className={display === 'search' ? 'selected' : undefined}>\n                                <button type='button' onClick={() => setDisplay('search')}>Search</button>\n                            </li>    \n                            <li className={display === 'request' ? 'selected' : undefined}>\n                                <button type='button' onClick={() => setDisplay('request')}>Request</button>\n                            </li>\n                            <li className={display === 'userProfile' ? 'selected' : undefined}>\n                                <button type='button' onClick={() => setDisplay('userProfile')}>User Profile</button>\n                            </li>\n                            <li className={display === 'statistics' ? 'selected' : undefined}>\n                                <button type='button' onClick={() => setDisplay('statistics')}>Statistics</button>\n                            </li>\n                        </ul> \n                        <h2>API</h2>\n                        <ul>\n                            <li className={display === 'api-psets-available' ? 'selected' : undefined}>\n                                <button type='button' onClick={() => setDisplay('api-psets-available')}>Available PSets</button>\n                            </li>\n                            <li className={display === 'api-pset-single' ? 'selected' : undefined}>\n                                <button type='button' onClick={() => setDisplay('api-pset-single')} >PSet Metadata</button>\n                            </li>\n                            <li className={display === 'api-statistics' ? 'selected' : undefined}>\n                                <button type='button' onClick={() => setDisplay('api-statistics')}>Statistics</button>\n                            </li>    \n                        </ul>\n                    </nav>\n                    {display === 'overview' && <Overview /> }\n                    {display === 'search' && <Search /> }\n                    {display === 'request' && <Request /> }\n                    {display === 'userProfile' && <UserProfile /> }\n                    {display === 'statistics' && <Statistics /> }\n                </div>\n            </div>\n            <Footer />\n        </React.Fragment>\n    );\n}\n\nexport default Documentation;","import React from 'react';\nimport './UserInfo.css'\nimport {Button} from 'primereact/button';\nimport {AuthContext} from '../../../context/auth';\n\nclass UserInfo extends React.Component{\n    \n    constructor(){\n        super();\n        this.state = {\n            user: {}\n        }\n        this.showModal = this.showModal.bind(this);\n        this.hideModal = this.hideModal.bind(this);\n    }\n\n    static contextType = AuthContext;\n\n    componentDidMount(){\n        fetch('/user/?username=' + this.context.username)\n            .then(res => res.json())\n            .then(user => this.setState({user: user}));\n    }\n\n    showModal(){\n\n    }\n\n    hideModal(){\n\n    }\n    \n    render(){\n        return(\n            <div className='userInfoContainer'>\n                <h2>User Information</h2>\n                <div className='userInfo'>Username: {this.state.user.username}</div>\n                <div className='userInfoBtn'>\n                    <Button label='Change User Settings' onClick={this.showModal} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserInfo;","import React from 'react';\nimport {Button} from 'primereact/button';\nimport * as APICalls from '../APICalls';\n\nclass DownloadPSetButton extends React.Component{\n    constructor(){\n        super();\n        this.downloadPSets = this.downloadPSets.bind(this);\n    }\n\n    downloadPSets = event => {\n        event.preventDefault();\n        const psets = this.props.selectedPSets;\n        \n        const link = document.createElement('a');\n        link.setAttribute('download', null);\n        link.style.display = 'none';\n        document.body.appendChild(link);\n        for(let i = 0; i < psets.length; i++){\n            if(psets[i].downloadLink){\n                link.setAttribute('href', psets[i].downloadLink)\n                link.click();\n            } \n        }\n        document.body.removeChild(link);\n\n        APICalls.downloadPSets(this.props.selectedPSets, (status, data) => {\n            //this.props.onDownloadComplete(status, data);\n        });\n    }\n\n    render(){\n        return(\n            <Button className='downloadBtn' label='Download' disabled={this.props.disabled} onClick={this.downloadPSets} />\n        );\n    }\n}\n\nexport default DownloadPSetButton;","import React from 'react';\nimport PSetTable from '../../Shared/PSetTable';\nimport {Button} from 'primereact/button';\nimport DownloadPSetButton from '../../Shared/Buttons/DownloadPSetButton';\nimport {Dialog} from 'primereact/dialog';\nimport * as APIHelper from '../../Shared/PSetAPIHelper';\nimport './UserPSet.css';\n\nclass UserPSet extends React.Component{\n    \n    constructor(){\n        super();\n        this.state = {\n            selectedPSets: [],\n            btnDisabled: true,\n            dialogVisible: false,\n            btnYesDislabed: false\n        }\n        this.handleBtnClick = this.handleBtnClick.bind(this);\n        this.handleSelectionChange = this.handleSelectionChange.bind(this);\n        this.onClickYes = this.onClickYes.bind(this);\n        this.onHide = this.onHide.bind(this);\n        this.showMessages = this.showMessages.bind(this);\n    }\n\n    handleSelectionChange(selected){\n        this.setState({selectedPSets: selected}, () => {\n            if(this.state.selectedPSets && this.state.selectedPSets.length > 0){\n                this.setState({btnDisabled: false});\n            }else{\n                this.setState({btnDisabled: true});\n            }\n        });\n    }\n\n    handleBtnClick = event => {\n        this.setState({dialogVisible: true});\n    }\n\n    showMessages(status, data){\n        APIHelper.messageAfterRequest(status, data, null, this.props.messages);\n    }\n\n    onClickYes(){\n        this.setState({\n            btnDisabled: true,\n            btnYesDislabed: true\n        });\n        this.props.handleBtnClick(this.state.selectedPSets, (err)=>{\n            if(!err){\n                this.setState({\n                    selectedPSets: [],\n                    dialogVisible: false,\n                });\n            }else{\n                this.setState({btnDisabled: false});\n            }   \n        });\n    }\n    \n    onHide(){\n        this.setState({\n            dialogVisible: false,\n            btnYesDislabed: false\n        });\n    }\n    \n    render(){\n\n        const psetData = (\n            <React.Fragment>\n                <div>\n                    <PSetTable allData={this.props.pset} selectedPSets={this.state.selectedPSets} updatePSetSelection={this.handleSelectionChange} scrollHeight='350px' pending={this.props.pending}/>\n                </div>\n                <div className='footer'>\n                { this.props.pending ? '' : \n                    <DownloadPSetButton selectedPSets={this.state.selectedPSets} disabled={this.state.btnDisabled} onDownloadComplete={this.showMessages}/>\n                } \n                <Button label={this.props.btnLabel} onClick={this.handleBtnClick} disabled={this.state.btnDisabled} />\n                </div>\n            </React.Fragment>\n        );\n\n        const noPSetData = (\n            <p>No data available.</p>\n        );\n\n        const dialogFooter = (\n            <div>\n                <Button label=\"Yes\" onClick={this.onClickYes} disabled={this.state.btnYesDislabed}/>\n                <Button label=\"Cancel\" onClick={this.onHide} />\n            </div>\n        );\n        \n        return(\n            <div className='userPSet'>\n                <h2>{this.props.heading}</h2>\n                <div className='userPSetContent'>\n                    {this.props.pset ? psetData : noPSetData}\n                </div>\n                <div>\n                    <Dialog header={this.props.pending? 'Canceling PSet Request(s)' : 'Removing Pset(s)' } footer={dialogFooter} visible={this.state.dialogVisible} style={{width: '300px'}} modal={true} onHide={this.onHide}>\n                        { this.props.pending ? 'Are you sure you would like to cancel the selected PSet request(s)?' : 'Are you sure you would like to remove the selected PSet(s) from the saved list?' }\n                    </Dialog>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserPSet;","import React from 'react';\nimport './Profile.css';\nimport Navigation from '../Navigation/Navigation'\nimport UserInfo from './subcomponents/UserInfo';\nimport UserPSet from './subcomponents/UserPSet';\nimport {Messages} from 'primereact/messages';\nimport {AuthContext} from '../../context/auth';\nimport * as APIHelper from '../Shared/PSetAPIHelper';\nimport Footer from '../Footer/Footer';\n\nclass Profile extends React.Component{\n\n    constructor(){\n        super();\n        this.state = {\n            username: '',\n            userEmail: '',\n            psetSaved: [],\n            psetInProcess: []\n        }\n        this.removeFromSavedList = this.removeFromSavedList.bind(this);\n        this.cancelPSetRequest = this.cancelPSetRequest.bind(this);\n        this.findPSetByID = this.findPSetByID.bind(this);\n        this.removePSetByID = this.removePSetByID.bind(this);\n    }\n\n    static contextType = AuthContext;\n\n    componentDidMount(){\n        fetch('/user/pset/?username=' + this.context.username)  \n            .then(res => res.json())\n            .then(resData => {\n                let complete = [];\n                let pending = [];\n                for(let i = 0; i < resData.length; i++){\n                    if(resData[i].status === 'complete'){\n                        complete.push(resData[i]);\n                    }else{\n                        pending.push(resData[i]);\n                    }\n                }\n                this.setState({\n                    psetSaved: complete,\n                    psetInProcess: pending\n                });\n            });\n    }\n\n    removeFromSavedList = (selectedPSet, callback) => {\n        var psetID = []\n        for(let i = 0; i < selectedPSet.length; i++){\n            psetID.push(selectedPSet[i]._id);\n        }\n        fetch('/user/pset/remove', {\n            method: 'POST',\n            body: JSON.stringify({username: this.context.username, psetID: psetID}),\n            headers: {\n                'Content-type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(resData => {\n                APIHelper.messageAfterRequest(1, resData, null, this.messages);\n                var saved = this.state.psetSaved;\n                saved = this.removePSetByID(saved, psetID);\n                this.setState({psetSaved: saved}, callback(0));\n            })\n            .catch(err => {\n                APIHelper.messageAfterRequest(0, err, null, this.messages);\n                callback(1);\n            });\n    }\n\n    cancelPSetRequest = (selectedPSet, callback) => {\n        var psetID = []\n        for(let i = 0; i < selectedPSet.length; i++){\n            psetID.push(selectedPSet[i]._id);\n        }\n        fetch('/pset/cancel', {\n            method: 'POST',\n            body: JSON.stringify({username: this.context.username, psetID: psetID}),\n            headers: {\n                'Content-type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(resData => {\n                APIHelper.messageAfterRequest(1, resData, null, this.messages);\n                var inProcess = this.state.psetInProcess;\n                inProcess = this.removePSetByID(inProcess, psetID);\n                this.setState({psetInProcess: inProcess}, callback(0));\n            })\n            .catch(err => {\n                APIHelper.messageAfterRequest(0, err, null, this.messages);\n                callback(1);\n            });\n    }\n\n    findPSetByID(psetArray, id){\n        for(let i = 0; i < psetArray.length; i++){\n            if(psetArray[i]._id === id){\n                return(i)\n            }\n        }\n        return(-1);\n    }\n\n    removePSetByID(psets, selected){\n        for(let i = 0; i < selected.length; i++){\n            let index = this.findPSetByID(psets, selected[i]);\n            if(index > -1){\n                psets.splice(index, 1);\n            }\n        }\n        return(psets);\n    }\n\n    render(){   \n        return(\n            <React.Fragment>\n                <Navigation routing={this.props}/>\n                <div className='pageContent'>\n                    <h1>Your Profile</h1>\n                    <div className='userProfile'>\n                        <UserInfo />\n                        <div className='userPSetLists'>\n                            <Messages ref={(el) => this.messages = el} />\n                            <UserPSet heading='Your Saved PSets' btnLabel='Remove from List' \n                                pset={this.state.psetSaved} \n                                handleBtnClick={this.removeFromSavedList}\n                                messages={this.messages}\n                            />\n                            <UserPSet heading='Your PSet Requests in Process' btnLabel='Cancel Request' \n                                pset={this.state.psetInProcess} \n                                pending={true}\n                                handleBtnClick={this.cancelPSetRequest}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <Footer />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Profile;","import React, {useState, useContext, useEffect} from 'react';\nimport {Button} from 'primereact/button';\nimport {InputText} from 'primereact/inputtext';\nimport {Messages} from 'primereact/messages';\nimport {AuthContext} from '../../context/auth';\n\nconst AuthForm = (props) => {\n    \n    const auth = useContext(AuthContext);\n    \n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordReg1, setPasswordReg1] = useState('');\n    const [passwordReg2, setPasswordReg2] = useState('');\n    const [userChecked, setUserChecked] = useState(false);\n    const [userExists, setUserExists] = useState(false);\n    const [userRegistered, setUserRegistered] = useState(false);\n    const [btnFindDisabled, setBtnFindDisabled] = useState(true);\n    const [btnLoginDisabled, setBtnLoginDisabled] = useState(true);\n    const [btnRegDisabled, setBtnRegDisabled] = useState(true);\n\n    useEffect(() => {\n        const regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n        regex.test(email) ? setBtnFindDisabled(false) : setBtnFindDisabled(true);\n    }, [email]);\n\n    useEffect(() => {\n        password.length >= 6 ? setBtnLoginDisabled(false) : setBtnLoginDisabled(true);\n    }, [password]);\n\n    useEffect(() => {\n        passwordReg1.length >= 6 ?  passwordReg1 === passwordReg2 && setBtnRegDisabled(false) : setBtnRegDisabled(true);\n    }, [passwordReg1, passwordReg2])\n\n    const handleInputChange = (event) => {\n        var name = event.target.name;\n        switch(name){\n            case 'email':\n                setEmail(event.target.value);\n                break;\n            case 'password':\n                setPassword(event.target.value);\n                break;\n            case 'passwordReg1':\n                setPasswordReg1(event.target.value);\n                break;\n            case 'passwordReg2':\n                setPasswordReg2(event.target.value);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const initialize = () => {\n        setEmail('');\n        setPassword('');\n        setPasswordReg1('');\n        setPasswordReg2('');\n        setUserChecked(false);\n        setUserExists(false);\n        setUserRegistered(false);\n        setBtnFindDisabled(true);\n        setBtnLoginDisabled(true);\n        setBtnRegDisabled(true);\n    }\n\n    const onFindClick = async (event) => {\n        event.preventDefault();\n        const api = 'user/check/?username=' + email;\n        const res = await fetch(api);\n        const json = await res.json();\n        if(res.ok){\n            setUserChecked(true);\n            setUserExists(json.exists);\n            setUserRegistered(json.registered);\n        }\n    }\n\n    const onLoginClick = async (event) => {\n        event.preventDefault();\n        const res = await fetch('/user/login', {\n            method: 'POST',\n            body: JSON.stringify({\n                user: { username: email, password: password }   \n            }),\n            headers: { 'Content-type': 'application/json' }\n        })\n        const data = await res.json();\n        if(data.authenticated){\n            console.log('authenticated');\n            initialize();\n            auth.setAuthToken(data);\n        }else{\n            AuthForm.messages.show({severity: 'error', summary: 'Login Failed', detail: 'Please re-enter your email and password.'});\n        }\n    }\n\n    const onRegisterClick = async (event) => {\n        event.preventDefault();\n        const res = await fetch('/user/register', {\n            method: 'POST',\n            body: JSON.stringify({\n                user: { username: email, password: passwordReg1, exists: userExists }\n            }),\n            headers: { 'Content-type': 'application/json' }\n        })\n        const data = await res.json();\n        if(data.status){\n            initialize();\n            auth.setAuthToken({authenticated: data.authenticated, username: data.username});\n        }else{\n            AuthForm.messages.show({severity: 'error', summary: 'Registration Failed', detail: 'Please try again.'});\n        }\n    }\n\n    const loginForm = () => {\n        return(\n            <React.Fragment>\n                <h4>Login with your password:</h4>\n                <div className='pwdMsg'>Password needs to be at least 6 characters in length</div>\n                <InputText className='pwdInput' type='password' name='password' value={password} onChange={handleInputChange}/>\n                <div>\n                    <Button label='Login' onClick={onLoginClick} disabled={btnLoginDisabled}/>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    const registerForm = () => {\n        return(\n            <React.Fragment>\n                <h4>{userExists ? 'Email is not registered. ': 'Email not found. '}Please register.</h4>\n                <div>\n                    <div className='pwdMsg'>Password needs to be at least 6 characters in length</div>\n                    <InputText className='pwdInput' type='password' name='passwordReg1' value={passwordReg1} onChange={handleInputChange}/>\n                </div>\n                <div>\n                    <label>Confirm your password:</label>\n                    <InputText className='pwdInput' type='password' name='passwordReg2' value={passwordReg2} onChange={handleInputChange}/>\n                </div>\n                <div>\n                    <Button label='Register' onClick={onRegisterClick} disabled={btnRegDisabled}/>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    \n    return(\n        <React.Fragment>\n            <h2>Login/Register</h2>\n            <Messages ref={(el) => AuthForm.messages = el}></Messages>\n            <h4>Enter your email:</h4>\n            <div className='emailInput'>\n                <InputText type='email' name='email' value={email} onChange={handleInputChange}/>\n                <Button className='btnLoginFind' label='Find' icon=\"pi pi-arrow-right\" onClick={onFindClick} disabled={btnFindDisabled}/>\n            </div>\n            { userChecked ? <div className='formContainer'>{userRegistered ? loginForm() : registerForm()}</div> : '' }\n        </React.Fragment>\n    );\n}\n\nexport default AuthForm;","import React, {useContext} from 'react';\nimport Navigation from '../Navigation/Navigation';\nimport { Redirect } from 'react-router-dom';\nimport AuthForm from './AuthForm';\nimport './Login.css';\nimport Footer from '../Footer/Footer';\nimport {AuthContext} from '../../context/auth';\n\nconst Login = (props) => {\n    const auth = useContext(AuthContext);\n    const msg = props.location.state.logoutMsg;\n    return(\n        <React.Fragment>\n            <Navigation routing={props} />\n            {auth.authenticated ? <Redirect to={props.location.state.path}/> : \n                <div className='pageContent'>\n                    <div className=\"loginRegContent\">\n                        <div className='logoutMsg'>{msg ? msg : ''}</div>\n                        <AuthForm />\n                    </div>   \n                </div>\n            }\n            <Footer />\n        </React.Fragment>\n    );\n}\n\nexport default Login;","import React from 'react';\nimport {Accordion,AccordionTab} from 'primereact/accordion';\n\nclass PSetToolAccordion extends React.Component {\n\n    render(){\n        const toolAccordionTabs = this.props.items.map((item) => \n            <AccordionTab key={item.name} header={item.name}>\n                {item.commands.length ? \n                    <ul>\n                        {item.commands.map((command) => \n                            <li key={command}>\n                                {command}\n                            </li>    \n                        )}\n                    </ul>\n                    :\n                    \"Not Available\"\n                }\n                   \n            </AccordionTab>\n        );\n        \n        return(\n            this.props.items.length ? \n                <Accordion multiple={true}>\n                    {toolAccordionTabs}\n                </Accordion>\n                :\n                <div className='subContent'>Not Available</div>\n        );\n    }\n\n}\n\nclass RNARefAccordion extends React.Component {\n    \n    render(){\n        const rnaRefAccordionTabs = this.props.items.map((item) => \n            <AccordionTab key={item.name} header={item.name}>\n                <ul>\n                    <li className='listItem-1'>\n                        <div>{item.name.length ? item.name : 'Currently not available'}</div>\n                        <div>{item.source.length ? <a href={item.source}>{item.source}</a> : 'Currently not available'}</div>\n                    </li>                    \n                </ul> \n            </AccordionTab>\n        );\n    \n        return(\n            this.props.items.length ? \n                <Accordion multiple={true}>\n                    {rnaRefAccordionTabs}\n                </Accordion>\n                :\n                <div className='subContent'>Not Available</div>\n        );\n    }\n    \n}\n\nclass DNARefAccordion extends React.Component {\n\n    render(){\n        const exomeRefAccordionTabs = this.props.items.map((item) => \n            <AccordionTab key={item.name} header={item.name}>\n                <ul>\n                    <li className='listItem-1'>\n                        <div>{item.name.length ? item.name: 'Currently not available'}</div>\n                        <div>{item.source.length ? <a href={item.source}>{item.source}</a> : 'Currently not available'}</div>\n                    </li>\n                    <li className='listItem-1'>\n                        <div>{item.cosmic.name}</div>\n                        <div><a href={item.cosmic.source}>{item.cosmic.source}</a> </div>\n                    </li>\n                    <li className='listItem-1'>\n                        <div>{item.exonTarget.name}</div>\n                        <div><a href={item.exonTarget.source}>{item.exonTarget.source}</a></div>\n                    </li>                       \n                </ul> \n            </AccordionTab>\n        );\n    \n        return(\n            this.props.items.length ? \n                <Accordion multiple={true}>\n                    {exomeRefAccordionTabs}\n                </Accordion>\n                :\n                <div className='subContent'>Not Available</div>\n        );\n    }\n\n}\n\nclass GeneralInfoAccordion extends React.Component {\n    render(){   \n        return(\n            <Accordion className='generalInfoAccordion'>\n                <AccordionTab header=\"General Information\">\n                    <h4 className='subContent'>PSet Name: {this.props.data.name}</h4>\n                    <h4 className='subContent'>Date Created: {this.props.data.dateCreated}</h4>\n                    {this.props.data.createdBy && <h4 className='subContent'>Created By {this.props.data.createdBy}</h4>}\n                </AccordionTab>    \n            </Accordion>    \n        );\n    }\n}\n\nexport {\n    PSetToolAccordion,\n    RNARefAccordion,\n    DNARefAccordion,\n    GeneralInfoAccordion\n}\n","import React from 'react';\n\nclass DatasetTabContent extends React.Component{\n\n    render(){          \n        const publication = (\n            <div>    \n            {this.props.metadata.dataset.publication.length ? \n                this.props.metadata.dataset.publication.map((item) => \n                    <li key={item.link} className='pubList'>\n                        <div className='subContent'>{item.citation}</div>\n                        <br />\n                        <div className='subContent'><a href={item.link}>{item.link}</a></div>\n                    </li>\n                )\n                :\n                <div className=\"subContent\">\n                    Not available.\n                </div>\n                }  \n            </div> \n        );\n        \n        return(\n            <React.Fragment>\n                <h1 className='tabMainHeader'>Dataset: {this.props.metadata.dataset.label}</h1>\n                <div className='tabContent'>\n                    <div className='tabContentSection'>\n                        <h3>Publication: </h3>\n                        <ul>\n                            {publication}\n                        </ul> \n                    </div>\n                    <div className='tabContentSection'>\n                        <h3>Drug Sensitivity</h3>\n                        <h4 className='subContent'>Source: {this.props.metadata.drugSensitivity.source ? <a href={this.props.metadata.drugSensitivity.source}>{this.props.metadata.drugSensitivity.source}</a> : 'Not available'}</h4>\n                        <h4 className='subContent'>Version: {this.props.metadata.drugSensitivity.version}</h4>\n                    </div>\n                    <div className='tabContentSection'>\n                        <h3>Genome Version</h3>\n                        <div className='subContent'>{this.props.metadata.genome.name ? this.props.metadata.genome.name : \"Not Available\"}</div>\n                    </div>\n                </div> \n            </React.Fragment>\n        );\n    }\n}\n\nexport default DatasetTabContent;","import React from 'react';\nimport {PSetToolAccordion, RNARefAccordion} from '../PSetAccordion';\n\nclass RNATabContent extends React.Component{\n    \n    render(){   \n        const genomeRawData = (   \n            <div>\n                { this.props.metadata.rawSeqDataRNA ? <a href={this.props.metadata.rawSeqDataRNA}>{this.props.metadata.rawSeqDataRNA}</a> : 'Not Available' }\n            </div>\n        );\n\n        return(\n            <React.Fragment>\n                <h1 className='tabMainHeader'>Analysis Details - RNA Data</h1>\n                <div className='tabContent'>\n                    <div className='tabContentSection'>\n                        <h3>Raw Data Source: </h3>\n                        <div className='subContent'>\n                            {genomeRawData}\n                        </div>\n                    </div>\n                    <div className='tabContentSection'>\n                        <h3>RNA Transcriptome</h3>\n                        <RNARefAccordion items={this.props.metadata.rnaRef} />\n                    </div>\n                    <div className='tabContentSection'>\n                        <h3>Tools and Commands Used</h3>\n                        <PSetToolAccordion items={this.props.metadata.rnaTool} />\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default RNATabContent;","import React from 'react';\nimport {PSetToolAccordion, DNARefAccordion} from '../PSetAccordion';\n\nclass DNATabContent extends React.Component{\n    \n    render(){  \n        const genomeRawData = (\n            <div>\n                { this.props.metadata.rawSeqDataDNA ? <a href={this.props.metadata.rawSeqDataDNA}>{this.props.metadata.rawSeqDataDNA}</a> : 'Not Available' }\n            </div>\n        );\n\n        return(\n            <React.Fragment>\n                <h1 className='tabMainHeader'>Analysis Details - DNA(Exome) Data</h1>\n                <div className='tabContent'>\n                    <div className='tabContentSection'>\n                        <h3>Raw Data Source: </h3>\n                        <div className='subContent'>\n                            {genomeRawData}\n                        </div>\n                    </div>\n                    <div className='tabContentSection'>\n                        <h3>Exome Reference</h3>\n                        <DNARefAccordion items={this.props.metadata.dnaRef} />\n                    </div>\n                    <div className='tabContentSection'>\n                        <h3>Tools and Commands Used</h3>\n                        <PSetToolAccordion items={this.props.metadata.dnaTool} />\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DNATabContent;","import React from 'react';\nimport './PSet.css';\nimport Navigation from '../Navigation/Navigation';\nimport {TabView,TabPanel} from 'primereact/tabview';\nimport * as APICalls from '../Shared/APICalls';\nimport {GeneralInfoAccordion} from './PSetAccordion';\nimport DatasetTabContent from './TabContents/DatasetTabContent';\nimport RNATabContent from './TabContents/RNATabContent';\nimport DNATabContent from './TabContents/DNATabContent';\nimport * as APIHelper from '../Shared/PSetAPIHelper';\nimport DownloadPSetButton from '../Shared/Buttons/DownloadPSetButton';\nimport {Messages} from 'primereact/messages';\nimport Footer from '../Footer/Footer';\n\nclass PSet extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            pset: {},\n            general: {},\n            dataset: {},\n            rna: {},\n            dna: {},\n            isReady: false,\n            message: ''\n        }\n        this.showMessage = this.showMessage.bind(this);\n    }\n\n    componentDidMount(){\n        console.log(this.props.match.params.id1 + '/' + this.props.match.params.id2);\n        let apiStr = '/pset/one/' + this.props.match.params.id1 + '/' + this.props.match.params.id2;\n        console.log(apiStr);\n        APICalls.queryPSet(apiStr, (pset) => {\n            console.log(pset);\n            if(pset){\n                this.setState({\n                    pset: pset,\n                    general: {name: pset.name, createdBy: pset.createdBy, dateCreated: pset.dateCreated},\n                    dataset: {dataset: pset.dataset, genome: pset.genome, drugSensitivity: pset.drugSensitivity},\n                    rna: {rnaTool: pset.rnaTool, rnaRef: pset.rnaRef, rawSeqDataRNA: pset.dataset.rawSeqDataRNA},\n                    dna: {dnaTool: pset.dnaTool, dnaRef: pset.dnaRef, rawSeqDataDNA: pset.dataset.rawSeqDataDNA},\n                    isReady: true\n                });\n            }else{\n                this.setState({message: 'We could not find a PSet with the ID.'})\n            }\n        });\n    }\n\n    showMessage(status, data){\n        APIHelper.messageAfterRequest(status, data, this.initializeState, this.messages);\n    }\n\n    render(){\n        return(\n            <React.Fragment>\n                <Navigation routing={this.props} />\n                <div className='pageContent'>\n                    <Messages ref={(el) => this.messages = el} />\n                    <div className='psetTitle'>\n                        <h1>Explore PSet - {this.state.pset.name}</h1>\n                        <DownloadPSetButton disabled={false} selectedPSets={[this.state.pset]} onDownloadComplete={this.showMessage}/>\n                    </div>\n                    <GeneralInfoAccordion data={this.state.general}/>\n                    <div className='tabContainer'>\n                        {this.state.isReady ? \n                            <TabView renderActiveOnly={false}>\n                                <TabPanel header=\"Dataset\">\n                                    <DatasetTabContent metadata={this.state.dataset} />   \n                                </TabPanel>\n                                {this.state.pset.dataType.map((type) => \n                                    <TabPanel key={type.name} header={type.name}>\n                                        {type.name === 'RNA' ? \n                                            <RNATabContent metadata={this.state.rna}/> \n                                            : \n                                            <DNATabContent metadata={this.state.dna}/>\n                                        }\n                                    </TabPanel>)\n                                }\n                            </TabView>\n                            : \n                            <h3>{this.state.message}</h3>\n                        }\n                    </div>\n                </div>\n                <Footer /> \n            </React.Fragment>\n        );\n    }\n}\n\nexport default PSet;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { AuthContext } from \"../../context/auth\";\nimport PrivateRoute from './PrivateRoute';\nimport App from '../App/App';\nimport PSetSearch from '../PSetSearch/PSetSearch';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Stats from '../Stats/Stats';\nimport Documentation from '../Documentation/Documentation';\nimport Profile from '../Profile/Profile';\nimport Login from '../Authentication/Login';\nimport PSet from '../PSet/PSet';\n\nclass Router extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            authenticated: false,\n            isAdmin: false,\n            user: '',\n            setAuthToken: (value) => {\n                this.setState({\n                    authenticated: value.authenticated,\n                    username: value.username,\n                    isAdmin: value.isAdmin\n                });\n            },\n            resetAuthToken: () => {\n                this.setState({\n                    authenticated: false,\n                    isAdmin: false,\n                    user: ''\n                });\n            }\n        }\n    }\n\n    componentDidMount(){\n        if(!this.state.authenticated){\n            fetch('/user/checkToken')\n            .then(res => {\n                if(res.status === 200){\n                    return(res.json());\n                }else{\n                    return({authenticated: false, isAdmin: false, username: ''});\n                }\n            })\n            .then(data => {this.state.setAuthToken(data)});\n        }\n    }\n\n    render(){\n        \n        const profile = (\n            <Profile />\n        );\n\n        return(\n            <AuthContext.Provider value={this.state}>\n                <BrowserRouter>\n                    <Switch>\n                        <Route exact path ='/' render={(props)=><App path='/' {...props} />} /> \n                        <Route exact path ='/PSetSearch' render={(props)=><PSetSearch path='/PSetSearch' {...props} />}/>\n                        <Route exact path ='/Dashboard' render={(props)=><Dashboard path='/Dashboard' {...props} />}/>\n                        <Route exact path ='/Stats' render={(props)=><Stats path='/Stats' {...props} />}/>\n                        <Route exact path ='/Documentation' render={(props)=><Documentation path='/Documentation' {...props} />}/>\n                        <Route exact path='/Authentication' render={(props) => <Login {...props} />} />\n                        <Route path='/:id1/:id2' render={(props)=><PSet path='/:id1/:id2' {...props} />} />\n                        <PrivateRoute path='/Profile' component={profile} redirect='/Authentication' />\n                    </Switch>\n                </BrowserRouter>\n            </AuthContext.Provider>\n        );\n    }\n}\n\nexport default Router;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport Router from './components/Routing/Router';\nimport * as serviceWorker from './components/serviceWorker';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}